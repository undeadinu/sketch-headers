{
  "imports": [
    "NSObject.h",
    "NSInputServerMouseTracker.h",
    "NSInputServiceProvider.h"
  ],
  "classes": [
    "NSString"
  ],
  "protocol": false,
  "className": "NSInputServer",
  "extends": "NSObject",
  "interfaces": [
    "NSInputServiceProvider",
    "NSInputServerMouseTracker"
  ],
  "methods": {
    "mouseUpOnCharacterIndex:atCoordinate:withModifier:client:": {
      "name": "mouseUpOnCharacterIndex:atCoordinate:withModifier:client:",
      "bridgedName": "mouseUpOnCharacterIndex_atCoordinate_withModifier_client",
      "args": [
        {
          "type": "unsigned long long"
        },
        {
          "type": "struct CGPoint"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "mouseDraggedOnCharacterIndex:atCoordinate:withModifier:client:": {
      "name": "mouseDraggedOnCharacterIndex:atCoordinate:withModifier:client:",
      "bridgedName": "mouseDraggedOnCharacterIndex_atCoordinate_withModifier_client",
      "args": [
        {
          "type": "unsigned long long"
        },
        {
          "type": "struct CGPoint"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "mouseDownOnCharacterIndex:atCoordinate:withModifier:client:": {
      "name": "mouseDownOnCharacterIndex:atCoordinate:withModifier:client:",
      "bridgedName": "mouseDownOnCharacterIndex_atCoordinate_withModifier_client",
      "args": [
        {
          "type": "unsigned long long"
        },
        {
          "type": "struct CGPoint"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "inputClientDisabled:": {
      "name": "inputClientDisabled:",
      "bridgedName": "inputClientDisabled",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "inputClientEnabled:": {
      "name": "inputClientEnabled:",
      "bridgedName": "inputClientEnabled",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "inputClientResignActive:": {
      "name": "inputClientResignActive:",
      "bridgedName": "inputClientResignActive",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "inputClientBecomeActive:": {
      "name": "inputClientBecomeActive:",
      "bridgedName": "inputClientBecomeActive",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "canBeDisabled": {
      "name": "canBeDisabled",
      "bridgedName": "canBeDisabled",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "wantsToDelayTextChangeNotifications": {
      "name": "wantsToDelayTextChangeNotifications",
      "bridgedName": "wantsToDelayTextChangeNotifications",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "wantsToHandleMouseEvents": {
      "name": "wantsToHandleMouseEvents",
      "bridgedName": "wantsToHandleMouseEvents",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "wantsToInterpretAllKeystrokes": {
      "name": "wantsToInterpretAllKeystrokes",
      "bridgedName": "wantsToInterpretAllKeystrokes",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "terminate:": {
      "name": "terminate:",
      "bridgedName": "terminate",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "activeConversationChanged:toNewConversation:": {
      "name": "activeConversationChanged:toNewConversation:",
      "bridgedName": "activeConversationChanged_toNewConversation",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "activeConversationWillChange:fromOldConversation:": {
      "name": "activeConversationWillChange:fromOldConversation:",
      "bridgedName": "activeConversationWillChange_fromOldConversation",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "markedTextSelectionChanged:client:": {
      "name": "markedTextSelectionChanged:client:",
      "bridgedName": "markedTextSelectionChanged_client",
      "args": [
        {
          "type": "struct _NSRange"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "markedTextAbandoned:": {
      "name": "markedTextAbandoned:",
      "bridgedName": "markedTextAbandoned",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "doCommandBySelector:client:": {
      "name": "doCommandBySelector:client:",
      "bridgedName": "doCommandBySelector_client",
      "args": [
        {
          "type": "SEL"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "insertText:client:": {
      "name": "insertText:client:",
      "bridgedName": "insertText_client",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "description": {
      "name": "description",
      "bridgedName": "description",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithDelegate:name:": {
      "name": "initWithDelegate:name:",
      "bridgedName": "initWithDelegate_name",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "cancelInput:conversation:": {
      "name": "cancelInput:conversation:",
      "bridgedName": "cancelInput_conversation",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "senderDidResignActive:": {
      "name": "senderDidResignActive:",
      "bridgedName": "senderDidResignActive",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "senderDidBecomeActive:": {
      "name": "senderDidBecomeActive:",
      "bridgedName": "senderDidBecomeActive",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setActivated:sender:": {
      "name": "setActivated:sender:",
      "bridgedName": "setActivated_sender",
      "args": [
        {
          "type": "BOOL"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_inputClientChangedStatus:inputClient:": {
      "name": "_inputClientChangedStatus:inputClient:",
      "bridgedName": "_inputClientChangedStatus_inputClient",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {}
}