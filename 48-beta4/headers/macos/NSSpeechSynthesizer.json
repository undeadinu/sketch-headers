{
  "imports": [
    "NSObject.h"
  ],
  "classes": [],
  "protocol": false,
  "className": "NSSpeechSynthesizer",
  "extends": "NSObject",
  "interfaces": [],
  "methods": {
    "attributesForVoice:": {
      "name": "attributesForVoice:",
      "bridgedName": "attributesForVoice",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "availableVoices": {
      "name": "availableVoices",
      "bridgedName": "availableVoices",
      "args": [],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "defaultVoice": {
      "name": "defaultVoice",
      "bridgedName": "defaultVoice",
      "args": [],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "isAnyApplicationSpeaking": {
      "name": "isAnyApplicationSpeaking",
      "bridgedName": "isAnyApplicationSpeaking",
      "args": [],
      "returns": "BOOL",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_setObject:forProperty:usingDataSize:": {
      "name": "_setObject:forProperty:usingDataSize:",
      "bridgedName": "_setObject_forProperty_usingDataSize",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "unsigned int"
        },
        {
          "type": "int"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_objectForProperty:usingDataSize:withRequestedObjectClass:": {
      "name": "_objectForProperty:usingDataSize:withRequestedObjectClass:",
      "bridgedName": "_objectForProperty_usingDataSize_withRequestedObjectClass",
      "args": [
        {
          "type": "unsigned int"
        },
        {
          "type": "int"
        },
        {
          "type": "Class"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_continueSpeaking": {
      "name": "_continueSpeaking",
      "bridgedName": "_continueSpeaking",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_pauseSpeakingAtBoundary:": {
      "name": "_pauseSpeakingAtBoundary:",
      "bridgedName": "_pauseSpeakingAtBoundary",
      "args": [
        {
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_stopSpeakingAtBoundary:": {
      "name": "_stopSpeakingAtBoundary:",
      "bridgedName": "_stopSpeakingAtBoundary",
      "args": [
        {
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_volume": {
      "name": "_volume",
      "bridgedName": "_volume",
      "args": [],
      "returns": "float",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setVolume:": {
      "name": "_setVolume:",
      "bridgedName": "_setVolume",
      "args": [
        {
          "type": "float"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_rate": {
      "name": "_rate",
      "bridgedName": "_rate",
      "args": [],
      "returns": "float",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setRate:": {
      "name": "_setRate:",
      "bridgedName": "_setRate",
      "args": [
        {
          "type": "float"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_pitchBase": {
      "name": "_pitchBase",
      "bridgedName": "_pitchBase",
      "args": [],
      "returns": "float",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setPitchBase:": {
      "name": "_setPitchBase:",
      "bridgedName": "_setPitchBase",
      "args": [
        {
          "type": "float"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_normalSpeakingRate": {
      "name": "_normalSpeakingRate",
      "bridgedName": "_normalSpeakingRate",
      "args": [],
      "returns": "float",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_handleDefaultVoiceChange": {
      "name": "_handleDefaultVoiceChange",
      "bridgedName": "_handleDefaultVoiceChange",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setupCallbacks": {
      "name": "_setupCallbacks",
      "bridgedName": "_setupCallbacks",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_beginSpeakingString:optionallyToURL:": {
      "name": "_beginSpeakingString:optionallyToURL:",
      "bridgedName": "_beginSpeakingString_optionallyToURL",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_handleSyncCallbackWithMessage:": {
      "name": "_handleSyncCallbackWithMessage:",
      "bridgedName": "_handleSyncCallbackWithMessage",
      "args": [
        {
          "type": "unsigned int"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_handleErrorCallbackWithParams:": {
      "name": "_handleErrorCallbackWithParams:",
      "bridgedName": "_handleErrorCallbackWithParams",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_handlePhonemeCallbackWithOpcode:": {
      "name": "_handlePhonemeCallbackWithOpcode:",
      "bridgedName": "_handlePhonemeCallbackWithOpcode",
      "args": [
        {
          "type": "short"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_handleWordCallbackWithParams:": {
      "name": "_handleWordCallbackWithParams:",
      "bridgedName": "_handleWordCallbackWithParams",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_handleSpeechDoneCallback": {
      "name": "_handleSpeechDoneCallback",
      "bridgedName": "_handleSpeechDoneCallback",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_feedbackWindowIsVisible": {
      "name": "_feedbackWindowIsVisible",
      "bridgedName": "_feedbackWindowIsVisible",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setObject:forProperty:error:": {
      "name": "setObject:forProperty:error:",
      "bridgedName": "setObject_forProperty_error",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "id *"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "objectForProperty:error:": {
      "name": "objectForProperty:error:",
      "bridgedName": "objectForProperty_error",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id *"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "phonemesFromText:": {
      "name": "phonemesFromText:",
      "bridgedName": "phonemesFromText",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "addSpeechDictionary:": {
      "name": "addSpeechDictionary:",
      "bridgedName": "addSpeechDictionary",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setVoice:": {
      "name": "setVoice:",
      "bridgedName": "setVoice",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "voice": {
      "name": "voice",
      "bridgedName": "voice",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "continueSpeaking": {
      "name": "continueSpeaking",
      "bridgedName": "continueSpeaking",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "pauseSpeakingAtBoundary:": {
      "name": "pauseSpeakingAtBoundary:",
      "bridgedName": "pauseSpeakingAtBoundary",
      "args": [
        {
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "stopSpeakingAtBoundary:": {
      "name": "stopSpeakingAtBoundary:",
      "bridgedName": "stopSpeakingAtBoundary",
      "args": [
        {
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "stopSpeaking": {
      "name": "stopSpeaking",
      "bridgedName": "stopSpeaking",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "startSpeakingString:toURL:": {
      "name": "startSpeakingString:toURL:",
      "bridgedName": "startSpeakingString_toURL",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "startSpeakingString:": {
      "name": "startSpeakingString:",
      "bridgedName": "startSpeakingString",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithVoice:": {
      "name": "initWithVoice:",
      "bridgedName": "initWithVoice",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "init": {
      "name": "init",
      "bridgedName": "init",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "speaking": {
      "name": "speaking",
      "pointer": false,
      "type": "BOOL",
      "attributes": [
        "readonly",
        "getter=isSpeaking"
      ]
    }
  }
}