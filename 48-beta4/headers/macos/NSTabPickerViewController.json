{
  "imports": [
    "NSVisualTabPickerDelegate.h"
  ],
  "classes": [
    "NSArray",
    "NSMapTable",
    "NSString",
    "NSTabBarItem",
    "NSVisualTabPickerRootViewController"
  ],
  "protocol": false,
  "className": "NSTabPickerViewController",
  "extends": "NSViewController",
  "interfaces": [
    "NSVisualTabPickerDelegate"
  ],
  "methods": {
    ".cxx_destruct": {
      "name": ".cxx_destruct",
      "bridgedName": ".cxx_destruct",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "selectItemAtIndex:": {
      "name": "selectItemAtIndex:",
      "bridgedName": "selectItemAtIndex",
      "args": [
        {
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "entryOrExitAnimationInProgress": {
      "name": "entryOrExitAnimationInProgress",
      "bridgedName": "entryOrExitAnimationInProgress",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "visualTabPickerControllerDidEndHiding:": {
      "name": "visualTabPickerControllerDidEndHiding:",
      "bridgedName": "visualTabPickerControllerDidEndHiding",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "visualTabPickerControllerDidBeginHiding:": {
      "name": "visualTabPickerControllerDidBeginHiding:",
      "bridgedName": "visualTabPickerControllerDidBeginHiding",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "willStartExitAnimationForVisualTabPickerController:": {
      "name": "willStartExitAnimationForVisualTabPickerController:",
      "bridgedName": "willStartExitAnimationForVisualTabPickerController",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "visualTabPickerControllerWillClose:": {
      "name": "visualTabPickerControllerWillClose:",
      "bridgedName": "visualTabPickerControllerWillClose",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tabPickerItemsDidChange": {
      "name": "tabPickerItemsDidChange",
      "bridgedName": "tabPickerItemsDidChange",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "visualTabPickerController:closeTabBarItem:": {
      "name": "visualTabPickerController:closeTabBarItem:",
      "bridgedName": "visualTabPickerController_closeTabBarItem",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "visualTabPickerController:selectTab:": {
      "name": "visualTabPickerController:selectTab:",
      "bridgedName": "visualTabPickerController_selectTab",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "createNewTabForVisualTabPickerController:": {
      "name": "createNewTabForVisualTabPickerController:",
      "bridgedName": "createNewTabForVisualTabPickerController",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "creatingNewTabWillCloseVisualTabPickerController:": {
      "name": "creatingNewTabWillCloseVisualTabPickerController:",
      "bridgedName": "creatingNewTabWillCloseVisualTabPickerController",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tabBarItemsForVisualTabPickerController:": {
      "name": "tabBarItemsForVisualTabPickerController:",
      "bridgedName": "tabBarItemsForVisualTabPickerController",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "selectedTabViewItemForVisualTabPickerController:": {
      "name": "selectedTabViewItemForVisualTabPickerController:",
      "bridgedName": "selectedTabViewItemForVisualTabPickerController",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "frameForVisualTabPickerController:": {
      "name": "frameForVisualTabPickerController:",
      "bridgedName": "frameForVisualTabPickerController",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "visualTabPicker:thumbnailViewForTabItem:": {
      "name": "visualTabPicker:thumbnailViewForTabItem:",
      "bridgedName": "visualTabPicker_thumbnailViewForTabItem",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "hideTabPickerAnimated:": {
      "name": "hideTabPickerAnimated:",
      "bridgedName": "hideTabPickerAnimated",
      "args": [
        {
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "showTabPickerAnimated:includeNewButton:": {
      "name": "showTabPickerAnimated:includeNewButton:",
      "bridgedName": "showTabPickerAnimated_includeNewButton",
      "args": [
        {
          "type": "BOOL"
        },
        {
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_makeTabPickerViewControllerWithTabBarSnapshot:includeNewButton:": {
      "name": "_makeTabPickerViewControllerWithTabBarSnapshot:includeNewButton:",
      "bridgedName": "_makeTabPickerViewControllerWithTabBarSnapshot_includeNewButton",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "handleMagnification:": {
      "name": "handleMagnification:",
      "bridgedName": "handleMagnification",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "viewDidLoad": {
      "name": "viewDidLoad",
      "bridgedName": "viewDidLoad",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "loadView": {
      "name": "loadView",
      "bridgedName": "loadView",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithNibName:bundle:": {
      "name": "initWithNibName:bundle:",
      "bridgedName": "initWithNibName_bundle",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "windowSnapshots": {
      "name": "windowSnapshots",
      "pointer": true,
      "type": "NSMapTable",
      "attributes": [
        "readonly"
      ]
    },
    "tabPickerController": {
      "name": "tabPickerController",
      "pointer": true,
      "type": "NSVisualTabPickerRootViewController",
      "attributes": [
        "retain"
      ]
    },
    "isClosing": {
      "name": "isClosing",
      "pointer": false,
      "type": "BOOL",
      "attributes": [
        "readonly"
      ]
    },
    "debugDescription": {
      "name": "debugDescription",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "description": {
      "name": "description",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "hash": {
      "name": "hash",
      "pointer": false,
      "type": "unsigned long long",
      "attributes": [
        "readonly"
      ]
    },
    "superclass": {
      "name": "superclass",
      "pointer": false,
      "type": "Class",
      "attributes": [
        "readonly"
      ]
    }
  }
}