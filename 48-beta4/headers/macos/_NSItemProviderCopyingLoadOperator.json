{
  "imports": [
    "NSObject.h",
    "_NSItemProviderLoading.h"
  ],
  "classes": [
    "NSDictionary",
    "NSItemProvider",
    "NSString"
  ],
  "protocol": false,
  "className": "_NSItemProviderCopyingLoadOperator",
  "extends": "NSObject",
  "interfaces": [
    "_NSItemProviderLoading"
  ],
  "methods": {
    "supportsSecureCoding": {
      "name": "supportsSecureCoding",
      "bridgedName": "supportsSecureCoding",
      "args": [],
      "returns": "BOOL",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_sandboxedResourceForItemIfNeeded:error:": {
      "name": "_sandboxedResourceForItemIfNeeded:error:",
      "bridgedName": "_sandboxedResourceForItemIfNeeded_error",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id *"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_loadItemsForTypeIdentifiers:itemProvider:": {
      "name": "_loadItemsForTypeIdentifiers:itemProvider:",
      "bridgedName": "_loadItemsForTypeIdentifiers_itemProvider",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "loadPreviewImageWithCompletionHandler:expectedValueClass:options:": {
      "name": "loadPreviewImageWithCompletionHandler:expectedValueClass:options:",
      "bridgedName": "loadPreviewImageWithCompletionHandler_expectedValueClass_options",
      "args": [
        {
          "type": "CDUnknownBlockType"
        },
        {
          "type": "Class"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "loadItemForTypeIdentifier:completionHandler:expectedValueClass:options:": {
      "name": "loadItemForTypeIdentifier:completionHandler:expectedValueClass:options:",
      "bridgedName": "loadItemForTypeIdentifier_completionHandler_expectedValueClass_options",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "CDUnknownBlockType"
        },
        {
          "type": "Class"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "encodeWithCoder:": {
      "name": "encodeWithCoder:",
      "bridgedName": "encodeWithCoder",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithCoder:": {
      "name": "initWithCoder:",
      "bridgedName": "initWithCoder",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithItemProvider:": {
      "name": "initWithItemProvider:",
      "bridgedName": "initWithItemProvider",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "loadedItems": {
      "name": "loadedItems",
      "pointer": true,
      "type": "NSDictionary",
      "attributes": [
        "retain"
      ]
    },
    "debugDescription": {
      "name": "debugDescription",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "description": {
      "name": "description",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "hash": {
      "name": "hash",
      "pointer": false,
      "type": "unsigned long long",
      "attributes": [
        "readonly"
      ]
    },
    "superclass": {
      "name": "superclass",
      "pointer": false,
      "type": "Class",
      "attributes": [
        "readonly"
      ]
    }
  }
}