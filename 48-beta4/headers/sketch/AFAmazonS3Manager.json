{
  "imports": [
    "AFHTTPRequestOperationManager.h",
    "NSCopying.h",
    "NSSecureCoding.h"
  ],
  "classes": [
    "AFAmazonS3RequestSerializer<AFURLRequestSerialization>",
    "NSURL"
  ],
  "protocol": false,
  "className": "AFAmazonS3Manager",
  "extends": "AFHTTPRequestOperationManager",
  "interfaces": [
    "NSSecureCoding",
    "NSCopying"
  ],
  "methods": {
    "keyPathsForValuesAffectingBaseURL": {
      "name": "keyPathsForValuesAffectingBaseURL",
      "bridgedName": "keyPathsForValuesAffectingBaseURL",
      "args": [],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    ".cxx_destruct": {
      "name": ".cxx_destruct",
      "bridgedName": ".cxx_destruct",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "copyWithZone:": {
      "name": "copyWithZone:",
      "bridgedName": "copyWithZone",
      "args": [
        {
          "type": "struct _NSZone *"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "deleteObjectWithPath:success:failure:": {
      "name": "deleteObjectWithPath:success:failure:",
      "bridgedName": "deleteObjectWithPath_success_failure",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "CDUnknownBlockType"
        },
        {
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setObjectWithMethod:file:destinationPath:parameters:progress:success:failure:": {
      "name": "setObjectWithMethod:file:destinationPath:parameters:progress:success:failure:",
      "bridgedName": "setObjectWithMethod_file_destinationPath_parameters_progress_success_failure",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "CDUnknownBlockType"
        },
        {
          "type": "CDUnknownBlockType"
        },
        {
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "putObjectWithFile:destinationPath:parameters:progress:success:failure:": {
      "name": "putObjectWithFile:destinationPath:parameters:progress:success:failure:",
      "bridgedName": "putObjectWithFile_destinationPath_parameters_progress_success_failure",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "CDUnknownBlockType"
        },
        {
          "type": "CDUnknownBlockType"
        },
        {
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "postObjectWithFile:destinationPath:parameters:progress:success:failure:": {
      "name": "postObjectWithFile:destinationPath:parameters:progress:success:failure:",
      "bridgedName": "postObjectWithFile_destinationPath_parameters_progress_success_failure",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "CDUnknownBlockType"
        },
        {
          "type": "CDUnknownBlockType"
        },
        {
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "getObjectWithPath:outputStream:progress:success:failure:": {
      "name": "getObjectWithPath:outputStream:progress:success:failure:",
      "bridgedName": "getObjectWithPath_outputStream_progress_success_failure",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "CDUnknownBlockType"
        },
        {
          "type": "CDUnknownBlockType"
        },
        {
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "getObjectWithPath:progress:success:failure:": {
      "name": "getObjectWithPath:progress:success:failure:",
      "bridgedName": "getObjectWithPath_progress_success_failure",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "CDUnknownBlockType"
        },
        {
          "type": "CDUnknownBlockType"
        },
        {
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "headObjectWithPath:success:failure:": {
      "name": "headObjectWithPath:success:failure:",
      "bridgedName": "headObjectWithPath_success_failure",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "CDUnknownBlockType"
        },
        {
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "deleteBucket:success:failure:": {
      "name": "deleteBucket:success:failure:",
      "bridgedName": "deleteBucket_success_failure",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "CDUnknownBlockType"
        },
        {
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "putBucket:parameters:success:failure:": {
      "name": "putBucket:parameters:success:failure:",
      "bridgedName": "putBucket_parameters_success_failure",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "CDUnknownBlockType"
        },
        {
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "getBucket:success:failure:": {
      "name": "getBucket:success:failure:",
      "bridgedName": "getBucket_success_failure",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "CDUnknownBlockType"
        },
        {
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "getServiceWithSuccess:failure:": {
      "name": "getServiceWithSuccess:failure:",
      "bridgedName": "getServiceWithSuccess_failure",
      "args": [
        {
          "type": "CDUnknownBlockType"
        },
        {
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "enqueueS3RequestOperationWithMethod:path:parameters:success:failure:": {
      "name": "enqueueS3RequestOperationWithMethod:path:parameters:success:failure:",
      "bridgedName": "enqueueS3RequestOperationWithMethod_path_parameters_success_failure",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "CDUnknownBlockType"
        },
        {
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithAccessKeyID:secret:": {
      "name": "initWithAccessKeyID:secret:",
      "bridgedName": "initWithAccessKeyID_secret",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithBaseURL:": {
      "name": "initWithBaseURL:",
      "bridgedName": "initWithBaseURL",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "baseURL": {
      "name": "baseURL",
      "pointer": true,
      "type": "NSURL",
      "attributes": [
        "retain",
        "nonatomic"
      ]
    },
    "requestSerializer": {
      "name": "requestSerializer",
      "pointer": true,
      "type": "AFAmazonS3RequestSerializer<AFURLRequestSerialization>",
      "attributes": [
        "retain",
        "nonatomic"
      ]
    }
  }
}