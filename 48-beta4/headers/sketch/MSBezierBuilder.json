{
  "imports": [
    "NSObject.h"
  ],
  "classes": [
    "NSArray",
    "NSMutableDictionary"
  ],
  "protocol": false,
  "className": "MSBezierBuilder",
  "extends": "NSObject",
  "interfaces": [],
  "methods": {
    "bezierPathForSegmentAtIndex:inPath:inRect:": {
      "name": "bezierPathForSegmentAtIndex:inPath:inRect:",
      "bridgedName": "bezierPathForSegmentAtIndex_inPath_inRect",
      "args": [
        {
          "type": "unsigned long long"
        },
        {
          "type": "id"
        },
        {
          "type": "struct CGRect"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "pathWithPoints:inRect:shouldClose:pointRadiusBehaviour:": {
      "name": "pathWithPoints:inRect:shouldClose:pointRadiusBehaviour:",
      "bridgedName": "pathWithPoints_inRect_shouldClose_pointRadiusBehaviour",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "struct CGRect"
        },
        {
          "type": "BOOL"
        },
        {
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "bezierPathWithPoints:inRect:shouldClose:pointRadiusBehaviour:": {
      "name": "bezierPathWithPoints:inRect:shouldClose:pointRadiusBehaviour:",
      "bridgedName": "bezierPathWithPoints_inRect_shouldClose_pointRadiusBehaviour",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "struct CGRect"
        },
        {
          "type": "BOOL"
        },
        {
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    ".cxx_destruct": {
      "name": ".cxx_destruct",
      "bridgedName": ".cxx_destruct",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "addCurveFromPointAtIndex:toPointAtIndex:inArray:inRect:includingTrailingArc:toBezierPath:orCGPath:": {
      "name": "addCurveFromPointAtIndex:toPointAtIndex:inArray:inRect:includingTrailingArc:toBezierPath:orCGPath:",
      "bridgedName": "addCurveFromPointAtIndex_toPointAtIndex_inArray_inRect_includingTrailingArc_toBezierPath_orCGPath",
      "args": [
        {
          "type": "unsigned long long"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "id"
        },
        {
          "type": "struct CGRect"
        },
        {
          "type": "BOOL"
        },
        {
          "type": "id"
        },
        {
          "type": "struct CGPath *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "addLineToPointIfNecessary:toBezierPath:orCGPath:": {
      "name": "addLineToPointIfNecessary:toBezierPath:orCGPath:",
      "bridgedName": "addLineToPointIfNecessary_toBezierPath_orCGPath",
      "args": [
        {
          "type": "struct CGPoint"
        },
        {
          "type": "id"
        },
        {
          "type": "struct CGPath *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "filletAtIndex:inPointArray:rect:": {
      "name": "filletAtIndex:inPointArray:rect:",
      "bridgedName": "filletAtIndex_inPointArray_rect",
      "args": [
        {
          "type": "unsigned long long"
        },
        {
          "type": "id"
        },
        {
          "type": "struct CGRect"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "buildV1BezierPath:orCGPath:": {
      "name": "buildV1BezierPath:orCGPath:",
      "bridgedName": "buildV1BezierPath_orCGPath",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "struct CGPath *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "extendPath:orCGPath:toPoint:controlPoint1:controlPoint2:": {
      "name": "extendPath:orCGPath:toPoint:controlPoint1:controlPoint2:",
      "bridgedName": "extendPath_orCGPath_toPoint_controlPoint1_controlPoint2",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "struct CGPath *"
        },
        {
          "type": "struct CGPoint"
        },
        {
          "type": "struct CGPoint"
        },
        {
          "type": "struct CGPoint"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "appendCurveFromPoint:toPoint:toBezierPath:orCGPath:": {
      "name": "appendCurveFromPoint:toPoint:toBezierPath:orCGPath:",
      "bridgedName": "appendCurveFromPoint_toPoint_toBezierPath_orCGPath",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "struct CGPath *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bezierPathFromCurvePoint:toPoint:": {
      "name": "bezierPathFromCurvePoint:toPoint:",
      "bridgedName": "bezierPathFromCurvePoint_toPoint",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "buildV0BezierPath:orCGPath:": {
      "name": "buildV0BezierPath:orCGPath:",
      "bridgedName": "buildV0BezierPath_orCGPath",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "struct CGPath *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "buildBezierPath:orCGPath:": {
      "name": "buildBezierPath:orCGPath:",
      "bridgedName": "buildBezierPath_orCGPath",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "struct CGPath *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_bezierPath": {
      "name": "_bezierPath",
      "bridgedName": "_bezierPath",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_path": {
      "name": "_path",
      "bridgedName": "_path",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "path": {
      "name": "path",
      "bridgedName": "path",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bezierPath": {
      "name": "bezierPath",
      "bridgedName": "bezierPath",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isStraightLine": {
      "name": "isStraightLine",
      "bridgedName": "isStraightLine",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "init": {
      "name": "init",
      "bridgedName": "init",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithPointRadiusBehavior:": {
      "name": "initWithPointRadiusBehavior:",
      "bridgedName": "initWithPointRadiusBehavior",
      "args": [
        {
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "filletCache": {
      "name": "filletCache",
      "pointer": true,
      "type": "NSMutableDictionary",
      "attributes": [
        "retain",
        "nonatomic"
      ]
    },
    "pathShouldClose": {
      "name": "pathShouldClose",
      "pointer": false,
      "type": "BOOL",
      "attributes": [
        "nonatomic"
      ]
    },
    "points": {
      "name": "points",
      "pointer": true,
      "type": "NSArray",
      "attributes": [
        "retain",
        "nonatomic"
      ]
    },
    "rect": {
      "name": "rect",
      "pointer": false,
      "type": "struct CGRect",
      "attributes": [
        "nonatomic"
      ]
    },
    "pointRadiusBehaviour": {
      "name": "pointRadiusBehaviour",
      "pointer": false,
      "type": "long long",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    }
  }
}