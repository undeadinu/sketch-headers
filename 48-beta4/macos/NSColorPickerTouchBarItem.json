{
  "imports": [
    "NSGestureRecognizerDelegate.h",
    "NSTouchBarColorPickerViewControllerDelegate.h",
    "NSTouchBarItemTypePopover.h"
  ],
  "classes": [
    "NSArray",
    "NSColor",
    "NSColorList",
    "NSImage",
    "NSString",
    "NSTouchBar",
    "NSTouchBarItemOverlay",
    "NSView"
  ],
  "protocol": false,
  "className": "NSColorPickerTouchBarItem",
  "extends": "NSTouchBarItem",
  "interfaces": [
    "NSTouchBarItemTypePopover",
    "NSGestureRecognizerDelegate",
    "NSTouchBarColorPickerViewControllerDelegate"
  ],
  "methods": {
    "automaticallyNotifiesObserversOfColor": {
      "name": "automaticallyNotifiesObserversOfColor",
      "bridgedName": "automaticallyNotifiesObserversOfColor",
      "args": [],
      "returns": "BOOL",
      "kind": "class",
      "kindIndicator": "+"
    },
    "keyPathsForValuesAffectingStoredColor": {
      "name": "keyPathsForValuesAffectingStoredColor",
      "bridgedName": "keyPathsForValuesAffectingStoredColor",
      "args": [],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "colorPickerWithIdentifier:buttonTitle:": {
      "name": "colorPickerWithIdentifier:buttonTitle:",
      "bridgedName": "colorPickerWithIdentifier_buttonTitle",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "colorPickerWithIdentifier:buttonImage:": {
      "name": "colorPickerWithIdentifier:buttonImage:",
      "bridgedName": "colorPickerWithIdentifier_buttonImage",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "strokeColorPickerWithIdentifier:": {
      "name": "strokeColorPickerWithIdentifier:",
      "bridgedName": "strokeColorPickerWithIdentifier",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "textColorPickerWithIdentifier:": {
      "name": "textColorPickerWithIdentifier:",
      "bridgedName": "textColorPickerWithIdentifier",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "colorPickerWithIdentifier:": {
      "name": "colorPickerWithIdentifier:",
      "bridgedName": "colorPickerWithIdentifier",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "keyPathsForValuesAffectingPresented": {
      "name": "keyPathsForValuesAffectingPresented",
      "bridgedName": "keyPathsForValuesAffectingPresented",
      "args": [],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    ".cxx_destruct": {
      "name": ".cxx_destruct",
      "bridgedName": ".cxx_destruct",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_pickColor:": {
      "name": "_pickColor:",
      "bridgedName": "_pickColor",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "view": {
      "name": "view",
      "bridgedName": "view",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "encodeWithCoder:": {
      "name": "encodeWithCoder:",
      "bridgedName": "encodeWithCoder",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithCoder:": {
      "name": "initWithCoder:",
      "bridgedName": "initWithCoder",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithIdentifier:buttonTitle:buttonImage:": {
      "name": "initWithIdentifier:buttonTitle:buttonImage:",
      "bridgedName": "initWithIdentifier_buttonTitle_buttonImage",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithIdentifier:": {
      "name": "initWithIdentifier:",
      "bridgedName": "initWithIdentifier",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_gestureRecognizer:shouldReceiveTouch:": {
      "name": "_gestureRecognizer:shouldReceiveTouch:",
      "bridgedName": "_gestureRecognizer_shouldReceiveTouch",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_showPressHoldPopup:": {
      "name": "_showPressHoldPopup:",
      "bridgedName": "_showPressHoldPopup",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dismissPopover:": {
      "name": "dismissPopover:",
      "bridgedName": "dismissPopover",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "showPopover:": {
      "name": "showPopover:",
      "bridgedName": "showPopover",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_type": {
      "name": "_type",
      "bridgedName": "_type",
      "args": [],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_pressAndHoldDidCancelTracking": {
      "name": "_pressAndHoldDidCancelTracking",
      "bridgedName": "_pressAndHoldDidCancelTracking",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_pressAndHoldDidEndTracking": {
      "name": "_pressAndHoldDidEndTracking",
      "bridgedName": "_pressAndHoldDidEndTracking",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_pressAndHoldWillBeginTracking": {
      "name": "_pressAndHoldWillBeginTracking",
      "bridgedName": "_pressAndHoldWillBeginTracking",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_pickPressAndHoldColor:": {
      "name": "_pickPressAndHoldColor:",
      "bridgedName": "_pickPressAndHoldColor",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "colorPicker:didChangeCurrentModeFrom:to:": {
      "name": "colorPicker:didChangeCurrentModeFrom:to:",
      "bridgedName": "colorPicker_didChangeCurrentModeFrom_to",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "long long"
        },
        {
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "colorPickerViewControllerDidCancel:": {
      "name": "colorPickerViewControllerDidCancel:",
      "bridgedName": "colorPickerViewControllerDidCancel",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "colorPickerViewControllerDidEnd:": {
      "name": "colorPickerViewControllerDidEnd:",
      "bridgedName": "colorPickerViewControllerDidEnd",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "colorPickerViewControllerWillBegin:": {
      "name": "colorPickerViewControllerWillBegin:",
      "bridgedName": "colorPickerViewControllerWillBegin",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "colorPickerViewController:didSelectColor:": {
      "name": "colorPickerViewController:didSelectColor:",
      "bridgedName": "colorPickerViewController_didSelectColor",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_updateButtonImagePosition": {
      "name": "_updateButtonImagePosition",
      "bridgedName": "_updateButtonImagePosition",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setButtonTitle:": {
      "name": "setButtonTitle:",
      "bridgedName": "setButtonTitle",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "buttonTitle": {
      "name": "buttonTitle",
      "bridgedName": "buttonTitle",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setButtonImage:": {
      "name": "setButtonImage:",
      "bridgedName": "setButtonImage",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "buttonImage": {
      "name": "buttonImage",
      "bridgedName": "buttonImage",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_autounbinder": {
      "name": "_autounbinder",
      "bridgedName": "_autounbinder",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "release": {
      "name": "release",
      "bridgedName": "release",
      "args": [],
      "returns": "oneway void",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "color": {
      "name": "color",
      "pointer": true,
      "type": "NSColor",
      "attributes": [
        "copy"
      ]
    },
    "storedColor": {
      "name": "storedColor",
      "pointer": true,
      "type": "NSColor",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "allowedColorSpaces": {
      "name": "allowedColorSpaces",
      "pointer": true,
      "type": "NSArray",
      "attributes": [
        "copy"
      ]
    },
    "colorList": {
      "name": "colorList",
      "pointer": true,
      "type": "NSColorList",
      "attributes": [
        "retain"
      ]
    },
    "enabled": {
      "name": "enabled",
      "pointer": false,
      "type": "BOOL",
      "attributes": [
        "getter=isEnabled"
      ]
    },
    "customizationLabel": {
      "name": "customizationLabel",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "copy"
      ]
    },
    "isPresented": {
      "name": "isPresented",
      "pointer": false,
      "type": "BOOL",
      "attributes": [
        "readonly"
      ]
    },
    "popoverTouchBar": {
      "name": "popoverTouchBar",
      "pointer": true,
      "type": "NSTouchBar",
      "attributes": [
        "readonly"
      ]
    },
    "showsCloseButton": {
      "name": "showsCloseButton",
      "pointer": false,
      "type": "BOOL",
      "attributes": [
        "readonly"
      ]
    },
    "supportsPressAndHold": {
      "name": "supportsPressAndHold",
      "pointer": false,
      "type": "BOOL",
      "attributes": [
        "readonly"
      ]
    },
    "_overlay": {
      "name": "_overlay",
      "pointer": true,
      "type": "NSTouchBarItemOverlay",
      "attributes": [
        "readonly"
      ]
    },
    "debugDescription": {
      "name": "debugDescription",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "description": {
      "name": "description",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "hash": {
      "name": "hash",
      "pointer": false,
      "type": "unsigned long long",
      "attributes": [
        "readonly"
      ]
    },
    "superclass": {
      "name": "superclass",
      "pointer": false,
      "type": "Class",
      "attributes": [
        "readonly"
      ]
    }
  }
}