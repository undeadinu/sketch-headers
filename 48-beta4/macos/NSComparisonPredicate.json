{
  "imports": [],
  "classes": [
    "NSExpression",
    "NSPredicateOperator"
  ],
  "protocol": false,
  "className": "NSComparisonPredicate",
  "extends": "NSPredicate",
  "interfaces": [],
  "methods": {
    "supportsSecureCoding": {
      "name": "supportsSecureCoding",
      "bridgedName": "supportsSecureCoding",
      "args": [],
      "returns": "BOOL",
      "kind": "class",
      "kindIndicator": "+"
    },
    "predicateWithPredicateOperator:leftExpression:rightExpression:": {
      "name": "predicateWithPredicateOperator:leftExpression:rightExpression:",
      "bridgedName": "predicateWithPredicateOperator_leftExpression_rightExpression",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "predicateWithPredicateOperator:leftKeyPath:rightKeyPath:": {
      "name": "predicateWithPredicateOperator:leftKeyPath:rightKeyPath:",
      "bridgedName": "predicateWithPredicateOperator_leftKeyPath_rightKeyPath",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "predicateWithPredicateOperator:leftKeyPath:rightValue:": {
      "name": "predicateWithPredicateOperator:leftKeyPath:rightValue:",
      "bridgedName": "predicateWithPredicateOperator_leftKeyPath_rightValue",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "predicateWithLeftExpression:rightExpression:customSelector:": {
      "name": "predicateWithLeftExpression:rightExpression:customSelector:",
      "bridgedName": "predicateWithLeftExpression_rightExpression_customSelector",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "SEL"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "predicateWithLeftExpression:rightExpression:modifier:type:options:": {
      "name": "predicateWithLeftExpression:rightExpression:modifier:type:options:",
      "bridgedName": "predicateWithLeftExpression_rightExpression_modifier_type_options",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "unsigned long long"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "predicateWithSubstitutionVariables:": {
      "name": "predicateWithSubstitutionVariables:",
      "bridgedName": "predicateWithSubstitutionVariables",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "acceptVisitor:flags:": {
      "name": "acceptVisitor:flags:",
      "bridgedName": "acceptVisitor_flags",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_acceptExpressions:flags:": {
      "name": "_acceptExpressions:flags:",
      "bridgedName": "_acceptExpressions_flags",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_acceptOperator:flags:": {
      "name": "_acceptOperator:flags:",
      "bridgedName": "_acceptOperator_flags",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "evaluateWithObject:substitutionVariables:": {
      "name": "evaluateWithObject:substitutionVariables:",
      "bridgedName": "evaluateWithObject_substitutionVariables",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "hash": {
      "name": "hash",
      "bridgedName": "hash",
      "args": [],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isEqual:": {
      "name": "isEqual:",
      "bridgedName": "isEqual",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setPredicateOperator:": {
      "name": "setPredicateOperator:",
      "bridgedName": "setPredicateOperator",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "predicateOperator": {
      "name": "predicateOperator",
      "bridgedName": "predicateOperator",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "predicateFormat": {
      "name": "predicateFormat",
      "bridgedName": "predicateFormat",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithPredicateOperator:leftExpression:rightExpression:": {
      "name": "initWithPredicateOperator:leftExpression:rightExpression:",
      "bridgedName": "initWithPredicateOperator_leftExpression_rightExpression",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithPredicateOperator:leftKeyPath:rightValue:": {
      "name": "initWithPredicateOperator:leftKeyPath:rightValue:",
      "bridgedName": "initWithPredicateOperator_leftKeyPath_rightValue",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithPredicateOperator:leftKeyPath:rightKeyPath:": {
      "name": "initWithPredicateOperator:leftKeyPath:rightKeyPath:",
      "bridgedName": "initWithPredicateOperator_leftKeyPath_rightKeyPath",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "copyWithZone:": {
      "name": "copyWithZone:",
      "bridgedName": "copyWithZone",
      "args": [
        {
          "type": "struct _NSZone *"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithCoder:": {
      "name": "initWithCoder:",
      "bridgedName": "initWithCoder",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "encodeWithCoder:": {
      "name": "encodeWithCoder:",
      "bridgedName": "encodeWithCoder",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "allowEvaluation": {
      "name": "allowEvaluation",
      "bridgedName": "allowEvaluation",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "keyPathExpressionForString:": {
      "name": "keyPathExpressionForString:",
      "bridgedName": "keyPathExpressionForString",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithLeftExpression:rightExpression:customSelector:": {
      "name": "initWithLeftExpression:rightExpression:customSelector:",
      "bridgedName": "initWithLeftExpression_rightExpression_customSelector",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "SEL"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithLeftExpression:rightExpression:modifier:type:options:": {
      "name": "initWithLeftExpression:rightExpression:modifier:type:options:",
      "bridgedName": "initWithLeftExpression_rightExpression_modifier_type_options",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "unsigned long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "generateMetadataDescription": {
      "name": "generateMetadataDescription",
      "bridgedName": "generateMetadataDescription",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "options": {
      "name": "options",
      "pointer": false,
      "type": "unsigned long long",
      "attributes": [
        "readonly"
      ]
    },
    "customSelector": {
      "name": "customSelector",
      "pointer": false,
      "type": "SEL",
      "attributes": [
        "readonly"
      ]
    },
    "rightExpression": {
      "name": "rightExpression",
      "pointer": true,
      "type": "NSExpression",
      "attributes": [
        "readonly",
        "retain"
      ]
    },
    "leftExpression": {
      "name": "leftExpression",
      "pointer": true,
      "type": "NSExpression",
      "attributes": [
        "readonly",
        "retain"
      ]
    },
    "comparisonPredicateModifier": {
      "name": "comparisonPredicateModifier",
      "pointer": false,
      "type": "unsigned long long",
      "attributes": [
        "readonly"
      ]
    },
    "predicateOperatorType": {
      "name": "predicateOperatorType",
      "pointer": false,
      "type": "unsigned long long",
      "attributes": [
        "readonly"
      ]
    }
  }
}