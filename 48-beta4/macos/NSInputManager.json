{
  "imports": [
    "NSObject.h",
    "NSTextInput.h"
  ],
  "classes": [
    "NSImage",
    "NSString"
  ],
  "protocol": false,
  "className": "NSInputManager",
  "extends": "NSObject",
  "interfaces": [
    "NSTextInput"
  ],
  "methods": {
    "worksWhenModal": {
      "name": "worksWhenModal",
      "bridgedName": "worksWhenModal",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "cycleToNextInputServerInLanguage:": {
      "name": "cycleToNextInputServerInLanguage:",
      "bridgedName": "cycleToNextInputServerInLanguage",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "class",
      "kindIndicator": "+"
    },
    "cycleToNextInputLanguage:": {
      "name": "cycleToNextInputLanguage:",
      "bridgedName": "cycleToNextInputLanguage",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "class",
      "kindIndicator": "+"
    },
    "currentInputManager": {
      "name": "currentInputManager",
      "bridgedName": "currentInputManager",
      "args": [],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "setCurrentInputManager:": {
      "name": "setCurrentInputManager:",
      "bridgedName": "setCurrentInputManager",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "class",
      "kindIndicator": "+"
    },
    "installInputManagerMenu:": {
      "name": "installInputManagerMenu:",
      "bridgedName": "installInputManagerMenu",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "class",
      "kindIndicator": "+"
    },
    "initialize": {
      "name": "initialize",
      "bridgedName": "initialize",
      "args": [],
      "returns": "void",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_nextInputManagerInScript:": {
      "name": "_nextInputManagerInScript:",
      "bridgedName": "_nextInputManagerInScript",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_inputManagerInNextScript:": {
      "name": "_inputManagerInNextScript:",
      "bridgedName": "_inputManagerInNextScript",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_switchToPlatformInput:": {
      "name": "_switchToPlatformInput:",
      "bridgedName": "_switchToPlatformInput",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_terminate:": {
      "name": "_terminate:",
      "bridgedName": "_terminate",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "class",
      "kindIndicator": "+"
    },
    "characterIndexForPoint:": {
      "name": "characterIndexForPoint:",
      "bridgedName": "characterIndexForPoint",
      "args": [
        {
          "type": "struct CGPoint"
        }
      ],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "conversationIdentifier": {
      "name": "conversationIdentifier",
      "bridgedName": "conversationIdentifier",
      "args": [],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "attributedSubstringFromRange:": {
      "name": "attributedSubstringFromRange:",
      "bridgedName": "attributedSubstringFromRange",
      "args": [
        {
          "type": "struct _NSRange"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "markedRange": {
      "name": "markedRange",
      "bridgedName": "markedRange",
      "args": [],
      "returns": "struct _NSRange",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "selectedRange": {
      "name": "selectedRange",
      "bridgedName": "selectedRange",
      "args": [],
      "returns": "struct _NSRange",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "firstRectForCharacterRange:": {
      "name": "firstRectForCharacterRange:",
      "bridgedName": "firstRectForCharacterRange",
      "args": [
        {
          "type": "struct _NSRange"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "validAttributesForMarkedText": {
      "name": "validAttributesForMarkedText",
      "bridgedName": "validAttributesForMarkedText",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "unmarkText": {
      "name": "unmarkText",
      "bridgedName": "unmarkText",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "hasMarkedText": {
      "name": "hasMarkedText",
      "bridgedName": "hasMarkedText",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "getMarkedText:selectedRange:": {
      "name": "getMarkedText:selectedRange:",
      "bridgedName": "getMarkedText_selectedRange",
      "args": [
        {
          "type": "id *"
        },
        {
          "type": "struct _NSRange *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setMarkedText:selectedRange:": {
      "name": "setMarkedText:selectedRange:",
      "bridgedName": "setMarkedText_selectedRange",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "struct _NSRange"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "doCommandBySelector:": {
      "name": "doCommandBySelector:",
      "bridgedName": "doCommandBySelector",
      "args": [
        {
          "type": "SEL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "insertText:": {
      "name": "insertText:",
      "bridgedName": "insertText",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_trueName": {
      "name": "_trueName",
      "bridgedName": "_trueName",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "description": {
      "name": "description",
      "bridgedName": "description",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_terminate": {
      "name": "_terminate",
      "bridgedName": "_terminate",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "image": {
      "name": "image",
      "bridgedName": "image",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "language": {
      "name": "language",
      "bridgedName": "language",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "wantsToHandleMouseEvents": {
      "name": "wantsToHandleMouseEvents",
      "bridgedName": "wantsToHandleMouseEvents",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "wantsToDelayTextChangeNotifications": {
      "name": "wantsToDelayTextChangeNotifications",
      "bridgedName": "wantsToDelayTextChangeNotifications",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bundleObject": {
      "name": "bundleObject",
      "bridgedName": "bundleObject",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "server": {
      "name": "server",
      "bridgedName": "server",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "markedTextSelectionChanged:client:": {
      "name": "markedTextSelectionChanged:client:",
      "bridgedName": "markedTextSelectionChanged_client",
      "args": [
        {
          "type": "struct _NSRange"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "markedTextAbandoned:": {
      "name": "markedTextAbandoned:",
      "bridgedName": "markedTextAbandoned",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "doCommandBySelector:client:": {
      "name": "doCommandBySelector:client:",
      "bridgedName": "doCommandBySelector_client",
      "args": [
        {
          "type": "SEL"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "insertText:client:": {
      "name": "insertText:client:",
      "bridgedName": "insertText_client",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "handleMouseEvent:": {
      "name": "handleMouseEvent:",
      "bridgedName": "handleMouseEvent",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isEnabled": {
      "name": "isEnabled",
      "bridgedName": "isEnabled",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "wantsToInterpretAllKeystrokes": {
      "name": "wantsToInterpretAllKeystrokes",
      "bridgedName": "wantsToInterpretAllKeystrokes",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "localizedInputManagerName": {
      "name": "localizedInputManagerName",
      "bridgedName": "localizedInputManagerName",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "activateInputManagerFromMenu:": {
      "name": "activateInputManagerFromMenu:",
      "bridgedName": "activateInputManagerFromMenu",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setCurrentClient:": {
      "name": "_setCurrentClient:",
      "bridgedName": "_setCurrentClient",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_currentClient": {
      "name": "_currentClient",
      "bridgedName": "_currentClient",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_senderIsInvalid:": {
      "name": "_senderIsInvalid:",
      "bridgedName": "_senderIsInvalid",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_keyBindingManager": {
      "name": "_keyBindingManager",
      "bridgedName": "_keyBindingManager",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_loadKeyboardBindings": {
      "name": "_loadKeyboardBindings",
      "bridgedName": "_loadKeyboardBindings",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_loadBundle": {
      "name": "_loadBundle",
      "bridgedName": "_loadBundle",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_validateBundleSecurity": {
      "name": "_validateBundleSecurity",
      "bridgedName": "_validateBundleSecurity",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_activateServer": {
      "name": "_activateServer",
      "bridgedName": "_activateServer",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithName:host:": {
      "name": "initWithName:host:",
      "bridgedName": "initWithName_host",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_isActivated": {
      "name": "_isActivated",
      "bridgedName": "_isActivated",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setActivationState:": {
      "name": "_setActivationState:",
      "bridgedName": "_setActivationState",
      "args": [
        {
          "type": "BOOL"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {}
}