{
  "imports": [
    "NSUserInterfaceCompression.h"
  ],
  "classes": [
    "NSColor",
    "NSUserInterfaceCompressionOptions"
  ],
  "protocol": false,
  "className": "NSSegmentedControl",
  "extends": "NSControl",
  "interfaces": [
    "NSUserInterfaceCompression"
  ],
  "methods": {
    "requiresConstraintBasedLayout": {
      "name": "requiresConstraintBasedLayout",
      "bridgedName": "requiresConstraintBasedLayout",
      "args": [],
      "returns": "BOOL",
      "kind": "class",
      "kindIndicator": "+"
    },
    "initialize": {
      "name": "initialize",
      "bridgedName": "initialize",
      "args": [],
      "returns": "void",
      "kind": "class",
      "kindIndicator": "+"
    },
    "segmentedControlWithSegmentImages:trackingMode:target:action:": {
      "name": "segmentedControlWithSegmentImages:trackingMode:target:action:",
      "bridgedName": "segmentedControlWithSegmentImages_trackingMode_target_action",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "id"
        },
        {
          "type": "SEL"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "segmentedControlWithSegmentLabels:trackingMode:target:action:": {
      "name": "segmentedControlWithSegmentLabels:trackingMode:target:action:",
      "bridgedName": "segmentedControlWithSegmentLabels_trackingMode_target_action",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "id"
        },
        {
          "type": "SEL"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "segmentedControlWithImages:trackingMode:target:action:": {
      "name": "segmentedControlWithImages:trackingMode:target:action:",
      "bridgedName": "segmentedControlWithImages_trackingMode_target_action",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "id"
        },
        {
          "type": "SEL"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "segmentedControlWithLabels:trackingMode:target:action:": {
      "name": "segmentedControlWithLabels:trackingMode:target:action:",
      "bridgedName": "segmentedControlWithLabels_trackingMode_target_action",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "id"
        },
        {
          "type": "SEL"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_segmentedControlWithTrackingMode:target:action:": {
      "name": "_segmentedControlWithTrackingMode:target:action:",
      "bridgedName": "_segmentedControlWithTrackingMode_target_action",
      "args": [
        {
          "type": "unsigned long long"
        },
        {
          "type": "id"
        },
        {
          "type": "SEL"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "touchBarHitTestInsets": {
      "name": "touchBarHitTestInsets",
      "bridgedName": "touchBarHitTestInsets",
      "args": [],
      "returns": "struct NSEdgeInsets",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_insetMitigationTreatment": {
      "name": "_insetMitigationTreatment",
      "bridgedName": "_insetMitigationTreatment",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "minimumSizeWithPrioritizedCompressionOptions:": {
      "name": "minimumSizeWithPrioritizedCompressionOptions:",
      "bridgedName": "minimumSizeWithPrioritizedCompressionOptions",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "struct CGSize",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "compressWithPrioritizedCompressionOptions:": {
      "name": "compressWithPrioritizedCompressionOptions:",
      "bridgedName": "compressWithPrioritizedCompressionOptions",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_supportedOptionsFromPrioritizedOptions:": {
      "name": "_supportedOptionsFromPrioritizedOptions:",
      "bridgedName": "_supportedOptionsFromPrioritizedOptions",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setHidesUnselectedLabelsWhenNecessary:": {
      "name": "setHidesUnselectedLabelsWhenNecessary:",
      "bridgedName": "setHidesUnselectedLabelsWhenNecessary",
      "args": [
        {
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "hidesUnselectedLabelsWhenNecessary": {
      "name": "hidesUnselectedLabelsWhenNecessary",
      "bridgedName": "hidesUnselectedLabelsWhenNecessary",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_badgeValueForSegment:": {
      "name": "_badgeValueForSegment:",
      "bridgedName": "_badgeValueForSegment",
      "args": [
        {
          "type": "long long"
        }
      ],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setBadgeValue:forSegment:": {
      "name": "_setBadgeValue:forSegment:",
      "bridgedName": "_setBadgeValue_forSegment",
      "args": [
        {
          "type": "long long"
        },
        {
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_showsBadgeForSegment:": {
      "name": "_showsBadgeForSegment:",
      "bridgedName": "_showsBadgeForSegment",
      "args": [
        {
          "type": "long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setShowsBadge:forSegment:": {
      "name": "_setShowsBadge:forSegment:",
      "bridgedName": "_setShowsBadge_forSegment",
      "args": [
        {
          "type": "BOOL"
        },
        {
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_updateLayerMasksToBoundsFromView": {
      "name": "_updateLayerMasksToBoundsFromView",
      "bridgedName": "_updateLayerMasksToBoundsFromView",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_highlightColorForCell:": {
      "name": "_highlightColorForCell:",
      "bridgedName": "_highlightColorForCell",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_canDisableBaseVibrancy": {
      "name": "_canDisableBaseVibrancy",
      "bridgedName": "_canDisableBaseVibrancy",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "baselineOffsetFromBottom": {
      "name": "baselineOffsetFromBottom",
      "bridgedName": "baselineOffsetFromBottom",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_hasExtra10_11BordersInToolbars": {
      "name": "_hasExtra10_11BordersInToolbars",
      "bridgedName": "_hasExtra10_11BordersInToolbars",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "alignmentRectInsets": {
      "name": "alignmentRectInsets",
      "bridgedName": "alignmentRectInsets",
      "args": [],
      "returns": "struct NSEdgeInsets",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_inToolbar": {
      "name": "_inToolbar",
      "bridgedName": "_inToolbar",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "moveDown:": {
      "name": "moveDown:",
      "bridgedName": "moveDown",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "viewDidMoveToWindow": {
      "name": "viewDidMoveToWindow",
      "bridgedName": "viewDidMoveToWindow",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "viewDidMoveToSuperview": {
      "name": "viewDidMoveToSuperview",
      "bridgedName": "viewDidMoveToSuperview",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_updateHeightToReflectNewWindowStyleIfNecessary": {
      "name": "_updateHeightToReflectNewWindowStyleIfNecessary",
      "bridgedName": "_updateHeightToReflectNewWindowStyleIfNecessary",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "showsMenuIndicatorForSegment:": {
      "name": "showsMenuIndicatorForSegment:",
      "bridgedName": "showsMenuIndicatorForSegment",
      "args": [
        {
          "type": "long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setShowsMenuIndicator:forSegment:": {
      "name": "setShowsMenuIndicator:forSegment:",
      "bridgedName": "setShowsMenuIndicator_forSegment",
      "args": [
        {
          "type": "BOOL"
        },
        {
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "toolTipForSegment:": {
      "name": "toolTipForSegment:",
      "bridgedName": "toolTipForSegment",
      "args": [
        {
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tagForSegment:": {
      "name": "tagForSegment:",
      "bridgedName": "tagForSegment",
      "args": [
        {
          "type": "long long"
        }
      ],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setTag:forSegment:": {
      "name": "setTag:forSegment:",
      "bridgedName": "setTag_forSegment",
      "args": [
        {
          "type": "long long"
        },
        {
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setToolTip:forSegment:": {
      "name": "setToolTip:forSegment:",
      "bridgedName": "setToolTip_forSegment",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "alignmentForSegment:": {
      "name": "alignmentForSegment:",
      "bridgedName": "alignmentForSegment",
      "args": [
        {
          "type": "long long"
        }
      ],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setAlignment:forSegment:": {
      "name": "setAlignment:forSegment:",
      "bridgedName": "setAlignment_forSegment",
      "args": [
        {
          "type": "unsigned long long"
        },
        {
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isEnabledForSegment:": {
      "name": "isEnabledForSegment:",
      "bridgedName": "isEnabledForSegment",
      "args": [
        {
          "type": "long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setEnabled:forSegment:": {
      "name": "setEnabled:forSegment:",
      "bridgedName": "setEnabled_forSegment",
      "args": [
        {
          "type": "BOOL"
        },
        {
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isSelectedForSegment:": {
      "name": "isSelectedForSegment:",
      "bridgedName": "isSelectedForSegment",
      "args": [
        {
          "type": "long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setSelected:forSegment:": {
      "name": "setSelected:forSegment:",
      "bridgedName": "setSelected_forSegment",
      "args": [
        {
          "type": "BOOL"
        },
        {
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "menuForSegment:": {
      "name": "menuForSegment:",
      "bridgedName": "menuForSegment",
      "args": [
        {
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setMenu:forSegment:": {
      "name": "setMenu:forSegment:",
      "bridgedName": "setMenu_forSegment",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "labelForSegment:": {
      "name": "labelForSegment:",
      "bridgedName": "labelForSegment",
      "args": [
        {
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setLabel:forSegment:": {
      "name": "setLabel:forSegment:",
      "bridgedName": "setLabel_forSegment",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setImageScaling:forSegment:": {
      "name": "setImageScaling:forSegment:",
      "bridgedName": "setImageScaling_forSegment",
      "args": [
        {
          "type": "unsigned long long"
        },
        {
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "imageScalingForSegment:": {
      "name": "imageScalingForSegment:",
      "bridgedName": "imageScalingForSegment",
      "args": [
        {
          "type": "long long"
        }
      ],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "alternateImageForSegment:": {
      "name": "alternateImageForSegment:",
      "bridgedName": "alternateImageForSegment",
      "args": [
        {
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setAlternateImage:forSegment:": {
      "name": "setAlternateImage:forSegment:",
      "bridgedName": "setAlternateImage_forSegment",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "imageForSegment:": {
      "name": "imageForSegment:",
      "bridgedName": "imageForSegment",
      "args": [
        {
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setImage:forSegment:": {
      "name": "setImage:forSegment:",
      "bridgedName": "setImage_forSegment",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "widthForSegment:": {
      "name": "widthForSegment:",
      "bridgedName": "widthForSegment",
      "args": [
        {
          "type": "long long"
        }
      ],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setWidth:forSegment:": {
      "name": "setWidth:forSegment:",
      "bridgedName": "setWidth_forSegment",
      "args": [
        {
          "type": "double"
        },
        {
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "selectSegmentWithTag:": {
      "name": "selectSegmentWithTag:",
      "bridgedName": "selectSegmentWithTag",
      "args": [
        {
          "type": "long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "springLoadingExited:": {
      "name": "springLoadingExited:",
      "bridgedName": "springLoadingExited",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "springLoadingHighlightChanged:": {
      "name": "springLoadingHighlightChanged:",
      "bridgedName": "springLoadingHighlightChanged",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "springLoadingActivated:draggingInfo:": {
      "name": "springLoadingActivated:draggingInfo:",
      "bridgedName": "springLoadingActivated_draggingInfo",
      "args": [
        {
          "type": "BOOL"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "springLoadingUpdated:": {
      "name": "springLoadingUpdated:",
      "bridgedName": "springLoadingUpdated",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "springLoadingEntered:": {
      "name": "springLoadingEntered:",
      "bridgedName": "springLoadingEntered",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "updateConstraints": {
      "name": "updateConstraints",
      "bridgedName": "updateConstraints",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_defaultContentCompressionResistancePriorities": {
      "name": "_defaultContentCompressionResistancePriorities",
      "bridgedName": "_defaultContentCompressionResistancePriorities",
      "args": [],
      "returns": "struct CGSize",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_updateConstraint:forAnchor:atMinSize:priority:": {
      "name": "_updateConstraint:forAnchor:atMinSize:priority:",
      "bridgedName": "_updateConstraint_forAnchor_atMinSize_priority",
      "args": [
        {
          "type": "id *"
        },
        {
          "type": "id"
        },
        {
          "type": "double"
        },
        {
          "type": "double"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "intrinsicContentSize": {
      "name": "intrinsicContentSize",
      "bridgedName": "intrinsicContentSize",
      "args": [],
      "returns": "struct CGSize",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "minimumIntrinsicContentSize": {
      "name": "minimumIntrinsicContentSize",
      "bridgedName": "minimumIntrinsicContentSize",
      "args": [],
      "returns": "struct CGSize",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_viewDidChangeAppearance:": {
      "name": "_viewDidChangeAppearance:",
      "bridgedName": "_viewDidChangeAppearance",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "viewDidEndLiveResize": {
      "name": "viewDidEndLiveResize",
      "bridgedName": "viewDidEndLiveResize",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_windowChangedKeyState": {
      "name": "_windowChangedKeyState",
      "bridgedName": "_windowChangedKeyState",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setWindow:": {
      "name": "_setWindow:",
      "bridgedName": "_setWindow",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_updateMenuUniquing": {
      "name": "_updateMenuUniquing",
      "bridgedName": "_updateMenuUniquing",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "moveRight:": {
      "name": "moveRight:",
      "bridgedName": "moveRight",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "moveLeft:": {
      "name": "moveLeft:",
      "bridgedName": "moveLeft",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "acceptsFirstMouse:": {
      "name": "acceptsFirstMouse:",
      "bridgedName": "acceptsFirstMouse",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_opaqueRectForWindowMoveWhenInTitlebar": {
      "name": "_opaqueRectForWindowMoveWhenInTitlebar",
      "bridgedName": "_opaqueRectForWindowMoveWhenInTitlebar",
      "args": [],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_makeSCAuxIfNeeded": {
      "name": "_makeSCAuxIfNeeded",
      "bridgedName": "_makeSCAuxIfNeeded",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithCoder:": {
      "name": "initWithCoder:",
      "bridgedName": "initWithCoder",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "encodeWithCoder:": {
      "name": "encodeWithCoder:",
      "bridgedName": "encodeWithCoder",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isFlipped": {
      "name": "isFlipped",
      "bridgedName": "isFlipped",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_descriptionForTouchBarLogging": {
      "name": "_descriptionForTouchBarLogging",
      "bridgedName": "_descriptionForTouchBarLogging",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setSpringLoadsOnDrag:": {
      "name": "_setSpringLoadsOnDrag:",
      "bridgedName": "_setSpringLoadsOnDrag",
      "args": [
        {
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_springLoadsOnDrag": {
      "name": "_springLoadsOnDrag",
      "bridgedName": "_springLoadsOnDrag",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "ns_widgetType": {
      "name": "ns_widgetType",
      "bridgedName": "ns_widgetType",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "activeCompressionOptions": {
      "name": "activeCompressionOptions",
      "pointer": true,
      "type": "NSUserInterfaceCompressionOptions",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "selectedSegmentBezelColor": {
      "name": "selectedSegmentBezelColor",
      "pointer": true,
      "type": "NSColor",
      "attributes": [
        "copy"
      ]
    },
    "doubleValueForSelectedSegment": {
      "name": "doubleValueForSelectedSegment",
      "pointer": false,
      "type": "double",
      "attributes": [
        "readonly"
      ]
    },
    "springLoaded": {
      "name": "springLoaded",
      "pointer": false,
      "type": "BOOL",
      "attributes": [
        "getter=isSpringLoaded"
      ]
    },
    "indexOfSelectedItem": {
      "name": "indexOfSelectedItem",
      "pointer": false,
      "type": "long long",
      "attributes": [
        "readonly"
      ]
    }
  }
}