{
  "imports": [
    "NSCollectionViewDataSource.h",
    "NSTouchBarCustomizationPaletteLayoutDelegate.h"
  ],
  "classes": [
    "NSArray",
    "NSCollectionView",
    "NSString"
  ],
  "protocol": false,
  "className": "NSTouchBarCustomizationPaletteViewController",
  "extends": "NSViewController",
  "interfaces": [
    "NSTouchBarCustomizationPaletteLayoutDelegate",
    "NSCollectionViewDataSource"
  ],
  "methods": {
    ".cxx_destruct": {
      "name": ".cxx_destruct",
      "bridgedName": ".cxx_destruct",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "collectionView:draggingSession:endedAtPoint:dragOperation:": {
      "name": "collectionView:draggingSession:endedAtPoint:dragOperation:",
      "bridgedName": "collectionView_draggingSession_endedAtPoint_dragOperation",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "struct CGPoint"
        },
        {
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "collectionView:draggingSession:willBeginAtPoint:forItemsAtIndexPaths:": {
      "name": "collectionView:draggingSession:willBeginAtPoint:forItemsAtIndexPaths:",
      "bridgedName": "collectionView_draggingSession_willBeginAtPoint_forItemsAtIndexPaths",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "struct CGPoint"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "collectionView:draggingImageForItemsAtIndexPaths:withEvent:offset:": {
      "name": "collectionView:draggingImageForItemsAtIndexPaths:withEvent:offset:",
      "bridgedName": "collectionView_draggingImageForItemsAtIndexPaths_withEvent_offset",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "struct CGPoint *"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "collectionView:writeItemsAtIndexPaths:toPasteboard:": {
      "name": "collectionView:writeItemsAtIndexPaths:toPasteboard:",
      "bridgedName": "collectionView_writeItemsAtIndexPaths_toPasteboard",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "collectionView:canDragItemsAtIndexPaths:withEvent:": {
      "name": "collectionView:canDragItemsAtIndexPaths:withEvent:",
      "bridgedName": "collectionView_canDragItemsAtIndexPaths_withEvent",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "collectionView:layout:maxSizeForItemAtIndexPath:": {
      "name": "collectionView:layout:maxSizeForItemAtIndexPath:",
      "bridgedName": "collectionView_layout_maxSizeForItemAtIndexPath",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "struct CGSize",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "collectionView:layout:minSizeForItemAtIndexPath:": {
      "name": "collectionView:layout:minSizeForItemAtIndexPath:",
      "bridgedName": "collectionView_layout_minSizeForItemAtIndexPath",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "struct CGSize",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "collectionView:itemForRepresentedObjectAtIndexPath:": {
      "name": "collectionView:itemForRepresentedObjectAtIndexPath:",
      "bridgedName": "collectionView_itemForRepresentedObjectAtIndexPath",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "collectionView:numberOfItemsInSection:": {
      "name": "collectionView:numberOfItemsInSection:",
      "bridgedName": "collectionView_numberOfItemsInSection",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "long long"
        }
      ],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "numberOfSectionsInCollectionView:": {
      "name": "numberOfSectionsInCollectionView:",
      "bridgedName": "numberOfSectionsInCollectionView",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "loadView": {
      "name": "loadView",
      "bridgedName": "loadView",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dragImageForItem:": {
      "name": "dragImageForItem:",
      "bridgedName": "dragImageForItem",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_visibleBarPresets": {
      "name": "_visibleBarPresets",
      "bridgedName": "_visibleBarPresets",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_visiblePaletteBarItems": {
      "name": "_visiblePaletteBarItems",
      "bridgedName": "_visiblePaletteBarItems",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_discardCachedVisiblePaletteBarItems": {
      "name": "_discardCachedVisiblePaletteBarItems",
      "bridgedName": "_discardCachedVisiblePaletteBarItems",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "itemTree": {
      "name": "itemTree",
      "bridgedName": "itemTree",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "reloadData": {
      "name": "reloadData",
      "bridgedName": "reloadData",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithNibName:bundle:": {
      "name": "initWithNibName:bundle:",
      "bridgedName": "initWithNibName_bundle",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_viewControllerSupports10_10Features": {
      "name": "_viewControllerSupports10_10Features",
      "bridgedName": "_viewControllerSupports10_10Features",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "touchBars": {
      "name": "touchBars",
      "pointer": true,
      "type": "NSArray",
      "attributes": [
        "copy"
      ]
    },
    "debugDescription": {
      "name": "debugDescription",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "description": {
      "name": "description",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "hash": {
      "name": "hash",
      "pointer": false,
      "type": "unsigned long long",
      "attributes": [
        "readonly"
      ]
    },
    "superclass": {
      "name": "superclass",
      "pointer": false,
      "type": "Class",
      "attributes": [
        "readonly"
      ]
    }
  }
}