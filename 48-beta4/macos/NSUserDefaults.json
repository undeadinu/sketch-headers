{
  "imports": [
    "NSUserDefaults.h"
  ],
  "classes": [],
  "protocol": false,
  "className": "NSUserDefaults",
  "interfaces": [],
  "methods": {
    "setValue:forKey:": {
      "name": "setValue:forKey:",
      "bridgedName": "setValue_forKey",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "valueForKey:": {
      "name": "valueForKey:",
      "bridgedName": "valueForKey",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "standardUserDefaults": {
      "name": "standardUserDefaults",
      "bridgedName": "standardUserDefaults",
      "args": [],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_copyStandardUserDefaultsIfPresent": {
      "name": "_copyStandardUserDefaultsIfPresent",
      "bridgedName": "_copyStandardUserDefaultsIfPresent",
      "args": [],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "resetStandardUserDefaults": {
      "name": "resetStandardUserDefaults",
      "bridgedName": "resetStandardUserDefaults",
      "args": [],
      "returns": "void",
      "kind": "class",
      "kindIndicator": "+"
    },
    "setStandardUserDefaults:": {
      "name": "setStandardUserDefaults:",
      "bridgedName": "setStandardUserDefaults",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "class",
      "kindIndicator": "+"
    },
    "objectIsForcedForKey:inDomain:": {
      "name": "objectIsForcedForKey:inDomain:",
      "bridgedName": "objectIsForcedForKey_inDomain",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "objectIsForcedForKey:": {
      "name": "objectIsForcedForKey:",
      "bridgedName": "objectIsForcedForKey",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "synchronize": {
      "name": "synchronize",
      "bridgedName": "synchronize",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "removePersistentDomainForName:": {
      "name": "removePersistentDomainForName:",
      "bridgedName": "removePersistentDomainForName",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setPersistentDomain:forName:": {
      "name": "setPersistentDomain:forName:",
      "bridgedName": "setPersistentDomain_forName",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "persistentDomainForName:": {
      "name": "persistentDomainForName:",
      "bridgedName": "persistentDomainForName",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "persistentDomainNames": {
      "name": "persistentDomainNames",
      "bridgedName": "persistentDomainNames",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "removeVolatileDomainForName:": {
      "name": "removeVolatileDomainForName:",
      "bridgedName": "removeVolatileDomainForName",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setVolatileDomain:forName:": {
      "name": "setVolatileDomain:forName:",
      "bridgedName": "setVolatileDomain_forName",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "volatileDomainForName:": {
      "name": "volatileDomainForName:",
      "bridgedName": "volatileDomainForName",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "volatileDomainNames": {
      "name": "volatileDomainNames",
      "bridgedName": "volatileDomainNames",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "finalize": {
      "name": "finalize",
      "bridgedName": "finalize",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "init": {
      "name": "init",
      "bridgedName": "init",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithSuiteName:": {
      "name": "initWithSuiteName:",
      "bridgedName": "initWithSuiteName",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setObservationInfo:": {
      "name": "setObservationInfo:",
      "bridgedName": "setObservationInfo",
      "args": [
        {
          "type": "void *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_initWithSuiteName:container:": {
      "name": "_initWithSuiteName:container:",
      "bridgedName": "_initWithSuiteName_container",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithUser:": {
      "name": "initWithUser:",
      "bridgedName": "initWithUser",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "registerDefaults:": {
      "name": "registerDefaults:",
      "bridgedName": "registerDefaults",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "removeSuiteNamed:": {
      "name": "removeSuiteNamed:",
      "bridgedName": "removeSuiteNamed",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "addSuiteNamed:": {
      "name": "addSuiteNamed:",
      "bridgedName": "addSuiteNamed",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setSearchList:": {
      "name": "setSearchList:",
      "bridgedName": "setSearchList",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "searchList": {
      "name": "searchList",
      "bridgedName": "searchList",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dictionaryRepresentation": {
      "name": "dictionaryRepresentation",
      "bridgedName": "dictionaryRepresentation",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setURL:forKey:": {
      "name": "setURL:forKey:",
      "bridgedName": "setURL_forKey",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setBool:forKey:": {
      "name": "setBool:forKey:",
      "bridgedName": "setBool_forKey",
      "args": [
        {
          "type": "BOOL"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setDouble:forKey:": {
      "name": "setDouble:forKey:",
      "bridgedName": "setDouble_forKey",
      "args": [
        {
          "type": "double"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setFloat:forKey:": {
      "name": "setFloat:forKey:",
      "bridgedName": "setFloat_forKey",
      "args": [
        {
          "type": "float"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setLong:forKey:": {
      "name": "setLong:forKey:",
      "bridgedName": "setLong_forKey",
      "args": [
        {
          "type": "long long"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setInteger:forKey:": {
      "name": "setInteger:forKey:",
      "bridgedName": "setInteger_forKey",
      "args": [
        {
          "type": "long long"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "URLForKey:": {
      "name": "URLForKey:",
      "bridgedName": "URLForKey",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "boolForKey:": {
      "name": "boolForKey:",
      "bridgedName": "boolForKey",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "doubleForKey:": {
      "name": "doubleForKey:",
      "bridgedName": "doubleForKey",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "floatForKey:": {
      "name": "floatForKey:",
      "bridgedName": "floatForKey",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "float",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "longForKey:": {
      "name": "longForKey:",
      "bridgedName": "longForKey",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "integerForKey:": {
      "name": "integerForKey:",
      "bridgedName": "integerForKey",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "stringArrayForKey:": {
      "name": "stringArrayForKey:",
      "bridgedName": "stringArrayForKey",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dataForKey:": {
      "name": "dataForKey:",
      "bridgedName": "dataForKey",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dictionaryForKey:": {
      "name": "dictionaryForKey:",
      "bridgedName": "dictionaryForKey",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "arrayForKey:": {
      "name": "arrayForKey:",
      "bridgedName": "arrayForKey",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "stringForKey:": {
      "name": "stringForKey:",
      "bridgedName": "stringForKey",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "removeObjectForKey:inDomain:": {
      "name": "removeObjectForKey:inDomain:",
      "bridgedName": "removeObjectForKey_inDomain",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setObject:forKey:inDomain:": {
      "name": "setObject:forKey:inDomain:",
      "bridgedName": "setObject_forKey_inDomain",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "objectForKey:inDomain:": {
      "name": "objectForKey:inDomain:",
      "bridgedName": "objectForKey_inDomain",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "removeObjectForKey:": {
      "name": "removeObjectForKey:",
      "bridgedName": "removeObjectForKey",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setObject:forKey:": {
      "name": "setObject:forKey:",
      "bridgedName": "setObject_forKey",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "objectForKey:": {
      "name": "objectForKey:",
      "bridgedName": "objectForKey",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_web_preferredLanguageCode": {
      "name": "_web_preferredLanguageCode",
      "bridgedName": "_web_preferredLanguageCode",
      "args": [],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_web_addDefaultsChangeObserver": {
      "name": "_web_addDefaultsChangeObserver",
      "bridgedName": "_web_addDefaultsChangeObserver",
      "args": [],
      "returns": "void",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_web_defaultsDidChange": {
      "name": "_web_defaultsDidChange",
      "bridgedName": "_web_defaultsDidChange",
      "args": [],
      "returns": "void",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_ensureAndLockPreferredLanguageLock": {
      "name": "_ensureAndLockPreferredLanguageLock",
      "bridgedName": "_ensureAndLockPreferredLanguageLock",
      "args": [],
      "returns": "void",
      "kind": "class",
      "kindIndicator": "+"
    }
  },
  "properties": {}
}