{
  "imports": [],
  "classes": [
    "NSObject<OS_xpc_object>",
    "NSXPCConnection"
  ],
  "protocol": false,
  "className": "NSXPCEncoder",
  "extends": "NSXPCCoder",
  "interfaces": [],
  "methods": {
    "encodeConditionalObject:forKey:": {
      "name": "encodeConditionalObject:forKey:",
      "bridgedName": "encodeConditionalObject_forKey",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "encodeXPCObject:forKey:": {
      "name": "encodeXPCObject:forKey:",
      "bridgedName": "encodeXPCObject_forKey",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_encodeCString:length:forKey:": {
      "name": "_encodeCString:length:forKey:",
      "bridgedName": "_encodeCString_length_forKey",
      "args": [
        {
          "type": "const char *"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "encodeBytes:length:forKey:": {
      "name": "encodeBytes:length:forKey:",
      "bridgedName": "encodeBytes_length_forKey",
      "args": [
        {
          "type": "const char *"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "encodeInteger:forKey:": {
      "name": "encodeInteger:forKey:",
      "bridgedName": "encodeInteger_forKey",
      "args": [
        {
          "type": "long long"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "encodeDouble:forKey:": {
      "name": "encodeDouble:forKey:",
      "bridgedName": "encodeDouble_forKey",
      "args": [
        {
          "type": "double"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "encodeFloat:forKey:": {
      "name": "encodeFloat:forKey:",
      "bridgedName": "encodeFloat_forKey",
      "args": [
        {
          "type": "float"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "encodeInt64:forKey:": {
      "name": "encodeInt64:forKey:",
      "bridgedName": "encodeInt64_forKey",
      "args": [
        {
          "type": "long long"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "encodeInt32:forKey:": {
      "name": "encodeInt32:forKey:",
      "bridgedName": "encodeInt32_forKey",
      "args": [
        {
          "type": "int"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "encodeInt:forKey:": {
      "name": "encodeInt:forKey:",
      "bridgedName": "encodeInt_forKey",
      "args": [
        {
          "type": "int"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "encodeBool:forKey:": {
      "name": "encodeBool:forKey:",
      "bridgedName": "encodeBool_forKey",
      "args": [
        {
          "type": "BOOL"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_encodeArrayOfObjects:forKey:": {
      "name": "_encodeArrayOfObjects:forKey:",
      "bridgedName": "_encodeArrayOfObjects_forKey",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_encodeInvocationObjectArgumentsOnly:count:typeString:selector:isReply:into:": {
      "name": "_encodeInvocationObjectArgumentsOnly:count:typeString:selector:isReply:into:",
      "bridgedName": "_encodeInvocationObjectArgumentsOnly_count_typeString_selector_isReply_into",
      "args": [
        {
          "type": "id *"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "const char *"
        },
        {
          "type": "SEL"
        },
        {
          "type": "BOOL"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_encodeInvocation:isReply:into:": {
      "name": "_encodeInvocation:isReply:into:",
      "bridgedName": "_encodeInvocation_isReply_into",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "BOOL"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_newRootXPCObject": {
      "name": "_newRootXPCObject",
      "bridgedName": "_newRootXPCObject",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_startTopLevelDictionary": {
      "name": "_startTopLevelDictionary",
      "bridgedName": "_startTopLevelDictionary",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_encodeUnkeyedObject:": {
      "name": "_encodeUnkeyedObject:",
      "bridgedName": "_encodeUnkeyedObject",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "encodeObject:forKey:": {
      "name": "encodeObject:forKey:",
      "bridgedName": "encodeObject_forKey",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_encodeObject:": {
      "name": "_encodeObject:",
      "bridgedName": "_encodeObject",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_checkObject:": {
      "name": "_checkObject:",
      "bridgedName": "_checkObject",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_replaceObject:": {
      "name": "_replaceObject:",
      "bridgedName": "_replaceObject",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "encodeObject:": {
      "name": "encodeObject:",
      "bridgedName": "encodeObject",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "encodeDataObject:": {
      "name": "encodeDataObject:",
      "bridgedName": "encodeDataObject",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "encodeValueOfObjCType:at:": {
      "name": "encodeValueOfObjCType:at:",
      "bridgedName": "encodeValueOfObjCType_at",
      "args": [
        {
          "type": "const char *"
        },
        {
          "type": "const void *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "allowsKeyedCoding": {
      "name": "allowsKeyedCoding",
      "bridgedName": "allowsKeyedCoding",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "debugDescription": {
      "name": "debugDescription",
      "bridgedName": "debugDescription",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "init": {
      "name": "init",
      "bridgedName": "init",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithStackSpace:size:": {
      "name": "initWithStackSpace:size:",
      "bridgedName": "initWithStackSpace_size",
      "args": [
        {
          "type": "char *"
        },
        {
          "type": "unsigned long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "connection": {
      "name": "connection",
      "bridgedName": "connection",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {}
}