{
  "imports": [
    "NSObject.h"
  ],
  "classes": [
    "NSError"
  ],
  "protocol": false,
  "className": "_NSJSONReader",
  "extends": "NSObject",
  "interfaces": [],
  "methods": {
    "validForJSON:depth:allowFragments:": {
      "name": "validForJSON:depth:allowFragments:",
      "bridgedName": "validForJSON_depth_allowFragments",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "BOOL"
        }
      ],
      "returns": "BOOL",
      "kind": "class",
      "kindIndicator": "+"
    },
    "parseStream:options:": {
      "name": "parseStream:options:",
      "bridgedName": "parseStream_options",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "unsigned long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "parseData:options:": {
      "name": "parseData:options:",
      "bridgedName": "parseData_options",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "unsigned long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "findEncodingFromData:withBOMSkipLength:": {
      "name": "findEncodingFromData:withBOMSkipLength:",
      "bridgedName": "findEncodingFromData_withBOMSkipLength",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "unsigned long long *"
        }
      ],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "parseUTF8JSONData:skipBytes:options:": {
      "name": "parseUTF8JSONData:skipBytes:options:",
      "bridgedName": "parseUTF8JSONData_skipBytes_options",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "unsigned long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setError:": {
      "name": "setError:",
      "bridgedName": "setError",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "error": {
      "name": "error",
      "bridgedName": "error",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "init": {
      "name": "init",
      "bridgedName": "init",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {}
}