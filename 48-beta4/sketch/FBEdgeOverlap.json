{
  "imports": [
    "NSObject.h"
  ],
  "classes": [
    "FBBezierCurve",
    "FBBezierIntersectRange"
  ],
  "protocol": false,
  "className": "FBEdgeOverlap",
  "extends": "NSObject",
  "interfaces": [],
  "methods": {
    "overlapWithRange:edge1:edge2:": {
      "name": "overlapWithRange:edge1:edge2:",
      "bridgedName": "overlapWithRange_edge1_edge2",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    ".cxx_destruct": {
      "name": ".cxx_destruct",
      "bridgedName": ".cxx_destruct",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "debugQuickLookObject": {
      "name": "debugQuickLookObject",
      "bridgedName": "debugQuickLookObject",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "description": {
      "name": "description",
      "bridgedName": "description",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "doesContainParameter:onEdge:startExtends:endExtends:": {
      "name": "doesContainParameter:onEdge:startExtends:endExtends:",
      "bridgedName": "doesContainParameter_onEdge_startExtends_endExtends",
      "args": [
        {
          "type": "double"
        },
        {
          "type": "id"
        },
        {
          "type": "BOOL"
        },
        {
          "type": "BOOL"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "middleIntersection": {
      "name": "middleIntersection",
      "bridgedName": "middleIntersection",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "addStopCrossing:": {
      "name": "addStopCrossing:",
      "bridgedName": "addStopCrossing",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "addMiddleCrossing:": {
      "name": "addMiddleCrossing:",
      "bridgedName": "addMiddleCrossing",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "addStartCrossing:": {
      "name": "addStartCrossing:",
      "bridgedName": "addStartCrossing",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "addIntersection:overlapRun:": {
      "name": "addIntersection:overlapRun:",
      "bridgedName": "addIntersection_overlapRun",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "fitsAfter:": {
      "name": "fitsAfter:",
      "bridgedName": "fitsAfter",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "fitsBefore:": {
      "name": "fitsBefore:",
      "bridgedName": "fitsBefore",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithRange:edge1:edge2:": {
      "name": "initWithRange:edge1:edge2:",
      "bridgedName": "initWithRange_edge1_edge2",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "edge2": {
      "name": "edge2",
      "pointer": true,
      "type": "FBBezierCurve",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    },
    "edge1": {
      "name": "edge1",
      "pointer": true,
      "type": "FBBezierCurve",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    },
    "range": {
      "name": "range",
      "pointer": true,
      "type": "FBBezierIntersectRange",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    }
  }
}