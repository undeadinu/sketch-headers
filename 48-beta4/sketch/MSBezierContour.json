{
  "imports": [
    "NSObject.h"
  ],
  "classes": [
    "MSPath",
    "NSArray"
  ],
  "protocol": false,
  "className": "MSBezierContour",
  "extends": "NSObject",
  "interfaces": [],
  "methods": {
    "contourWithRect:": {
      "name": "contourWithRect:",
      "bridgedName": "contourWithRect",
      "args": [
        {
          "type": "struct CGRect"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    ".cxx_destruct": {
      "name": ".cxx_destruct",
      "bridgedName": ".cxx_destruct",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "debugQuickLookObject": {
      "name": "debugQuickLookObject",
      "bridgedName": "debugQuickLookObject",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "contourWithInset:": {
      "name": "contourWithInset:",
      "bridgedName": "contourWithInset",
      "args": [
        {
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "rejoinSegments:closed:": {
      "name": "rejoinSegments:closed:",
      "bridgedName": "rejoinSegments_closed",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "BOOL"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "segmentsByDiscardingTinySegments:closed:": {
      "name": "segmentsByDiscardingTinySegments:closed:",
      "bridgedName": "segmentsByDiscardingTinySegments_closed",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "BOOL"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "segmentsByCheckingForPointsInJoin:": {
      "name": "segmentsByCheckingForPointsInJoin:",
      "bridgedName": "segmentsByCheckingForPointsInJoin",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "simplifiedSegments": {
      "name": "simplifiedSegments",
      "bridgedName": "simplifiedSegments",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "simplifySegment:": {
      "name": "simplifySegment:",
      "bridgedName": "simplifySegment",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "simplifiedSegmentsBySplittingSegment:atOffset:": {
      "name": "simplifiedSegmentsBySplittingSegment:atOffset:",
      "bridgedName": "simplifiedSegmentsBySplittingSegment_atOffset",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "segmentBeforeSegment:inArray:closed:": {
      "name": "segmentBeforeSegment:inArray:closed:",
      "bridgedName": "segmentBeforeSegment_inArray_closed",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "BOOL"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "segmentAfterSegment:inArray:closed:": {
      "name": "segmentAfterSegment:inArray:closed:",
      "bridgedName": "segmentAfterSegment_inArray_closed",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "BOOL"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "segmentAfter:": {
      "name": "segmentAfter:",
      "bridgedName": "segmentAfter",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "segmentBefore:": {
      "name": "segmentBefore:",
      "bridgedName": "segmentBefore",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "reversedContour": {
      "name": "reversedContour",
      "bridgedName": "reversedContour",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "doSegmentsFormARectangle:closed:": {
      "name": "doSegmentsFormARectangle:closed:",
      "bridgedName": "doSegmentsFormARectangle_closed",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "BOOL"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setBounds:": {
      "name": "setBounds:",
      "bridgedName": "setBounds",
      "args": [
        {
          "type": "struct CGRect"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithSegments:closed:": {
      "name": "initWithSegments:closed:",
      "bridgedName": "initWithSegments_closed",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "BOOL"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "cachedIsRectangular": {
      "name": "cachedIsRectangular",
      "pointer": false,
      "type": "BOOL",
      "attributes": [
        "nonatomic"
      ]
    },
    "cachedBounds": {
      "name": "cachedBounds",
      "pointer": false,
      "type": "BOOL",
      "attributes": [
        "nonatomic"
      ]
    },
    "cachedClockwise": {
      "name": "cachedClockwise",
      "pointer": false,
      "type": "BOOL",
      "attributes": [
        "nonatomic"
      ]
    },
    "path": {
      "name": "path",
      "pointer": true,
      "type": "MSPath",
      "attributes": [
        "retain",
        "nonatomic"
      ]
    },
    "segments": {
      "name": "segments",
      "pointer": true,
      "type": "NSArray",
      "attributes": [
        "readonly",
        "copy",
        "nonatomic"
      ]
    },
    "closed": {
      "name": "closed",
      "pointer": false,
      "type": "BOOL",
      "attributes": [
        "readonly",
        "nonatomic",
        "getter=isClosed"
      ]
    },
    "clockwise": {
      "name": "clockwise",
      "pointer": false,
      "type": "BOOL",
      "attributes": [
        "nonatomic",
        "getter=isClockwise"
      ]
    },
    "isRectangular": {
      "name": "isRectangular",
      "pointer": false,
      "type": "BOOL",
      "attributes": [
        "nonatomic"
      ]
    },
    "bounds": {
      "name": "bounds",
      "pointer": false,
      "type": "struct CGRect",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    }
  }
}