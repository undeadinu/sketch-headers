{
  "imports": [
    "_MSForeignSymbol.h"
  ],
  "classes": [
    "NSString"
  ],
  "protocol": false,
  "className": "MSForeignSymbol",
  "extends": "_MSForeignSymbol",
  "interfaces": [],
  "methods": {
    "foreignSymbolWithMaster:inLibrary:": {
      "name": "foreignSymbolWithMaster:inLibrary:",
      "bridgedName": "foreignSymbolWithMaster_inLibrary",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "masterFromLibrary:": {
      "name": "masterFromLibrary:",
      "bridgedName": "masterFromLibrary",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "convertToLocalSymbolMaster": {
      "name": "convertToLocalSymbolMaster",
      "bridgedName": "convertToLocalSymbolMaster",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "syncWithMaster:": {
      "name": "syncWithMaster:",
      "bridgedName": "syncWithMaster",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isOutOfDateWithLibrary:": {
      "name": "isOutOfDateWithLibrary:",
      "bridgedName": "isOutOfDateWithLibrary",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithSymbolMaster:inLibrary:": {
      "name": "initWithSymbolMaster:inLibrary:",
      "bridgedName": "initWithSymbolMaster_inLibrary",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "remoteSymbolID": {
      "name": "remoteSymbolID",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    }
  }
}