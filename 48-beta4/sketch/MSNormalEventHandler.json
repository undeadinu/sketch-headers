{
  "imports": [
    "MSNormalBaseEventHandler.h",
    "MSGestureRecognizerDelegate.h"
  ],
  "classes": [
    "MSDragToMoveOrCopyGestureRecognizer",
    "MSDragToSelectGestureRecognizer",
    "MSLayer",
    "MSLayerPositionDrawing",
    "MSNormalEventContextualMenuBuilder",
    "MSNormalEventData",
    "MSOpacityKeyboardShortcutRecognizer",
    "NSString"
  ],
  "protocol": false,
  "className": "MSNormalEventHandler",
  "extends": "MSNormalBaseEventHandler",
  "interfaces": [
    "MSGestureRecognizerDelegate"
  ],
  "methods": {
    ".cxx_destruct": {
      "name": ".cxx_destruct",
      "bridgedName": ".cxx_destruct",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "gestureRecognizer:shouldAttemptToRecognizeAtPoint:modifierFlags:": {
      "name": "gestureRecognizer:shouldAttemptToRecognizeAtPoint:modifierFlags:",
      "bridgedName": "gestureRecognizer_shouldAttemptToRecognizeAtPoint_modifierFlags",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "struct CGPoint"
        },
        {
          "type": "unsigned long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "zoomValueWillChangeTo:": {
      "name": "zoomValueWillChangeTo:",
      "bridgedName": "zoomValueWillChangeTo",
      "args": [
        {
          "type": "double"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "currentPageDidChange": {
      "name": "currentPageDidChange",
      "bridgedName": "currentPageDidChange",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "mouseDraggedOutsideViewShouldMoveScrollOrigin": {
      "name": "mouseDraggedOutsideViewShouldMoveScrollOrigin",
      "bridgedName": "mouseDraggedOutsideViewShouldMoveScrollOrigin",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "cut:": {
      "name": "cut:",
      "bridgedName": "cut",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "layerCanBeSelected:": {
      "name": "layerCanBeSelected:",
      "bridgedName": "layerCanBeSelected",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "numberOfSelectableLayers:": {
      "name": "numberOfSelectableLayers:",
      "bridgedName": "numberOfSelectableLayers",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "insertBacktab:": {
      "name": "insertBacktab:",
      "bridgedName": "insertBacktab",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "insertTab:": {
      "name": "insertTab:",
      "bridgedName": "insertTab",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tabInDirection:": {
      "name": "tabInDirection:",
      "bridgedName": "tabInDirection",
      "args": [
        {
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "layerSnapper": {
      "name": "layerSnapper",
      "bridgedName": "layerSnapper",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "changeColor:": {
      "name": "changeColor:",
      "bridgedName": "changeColor",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "deleteNormalLayers:": {
      "name": "deleteNormalLayers:",
      "bridgedName": "deleteNormalLayers",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "delete:": {
      "name": "delete:",
      "bridgedName": "delete",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "menuForEvent:": {
      "name": "menuForEvent:",
      "bridgedName": "menuForEvent",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "menu": {
      "name": "menu",
      "bridgedName": "menu",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "selectAll:": {
      "name": "selectAll:",
      "bridgedName": "selectAll",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dragToSelect:": {
      "name": "dragToSelect:",
      "bridgedName": "dragToSelect",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "ignoreNextKeyDownEventUntilModifiersChange": {
      "name": "ignoreNextKeyDownEventUntilModifiersChange",
      "bridgedName": "ignoreNextKeyDownEventUntilModifiersChange",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "moveLayer:toOffset:fromPointInAbsoluteCoordinates:": {
      "name": "moveLayer:toOffset:fromPointInAbsoluteCoordinates:",
      "bridgedName": "moveLayer_toOffset_fromPointInAbsoluteCoordinates",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "struct CGPoint"
        },
        {
          "type": "struct CGPoint"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "endDuplicateDragging:": {
      "name": "endDuplicateDragging:",
      "bridgedName": "endDuplicateDragging",
      "args": [
        {
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "beginDuplicateDragging": {
      "name": "beginDuplicateDragging",
      "bridgedName": "beginDuplicateDragging",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "moveDraggedLayersToOffset:": {
      "name": "moveDraggedLayersToOffset:",
      "bridgedName": "moveDraggedLayersToOffset",
      "args": [
        {
          "type": "struct CGPoint"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "layerDragged:": {
      "name": "layerDragged:",
      "bridgedName": "layerDragged",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "flagsChanged:": {
      "name": "flagsChanged:",
      "bridgedName": "flagsChanged",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawInRect:cache:": {
      "name": "drawInRect:cache:",
      "bridgedName": "drawInRect_cache",
      "args": [
        {
          "type": "struct CGRect"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawPathsInShapeGroup:": {
      "name": "drawPathsInShapeGroup:",
      "bridgedName": "drawPathsInShapeGroup",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawSelectedShapePathLayers": {
      "name": "drawSelectedShapePathLayers",
      "bridgedName": "drawSelectedShapePathLayers",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawMultipleSelection": {
      "name": "drawMultipleSelection",
      "bridgedName": "drawMultipleSelection",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "shouldDrawSelectionForLayer:": {
      "name": "shouldDrawSelectionForLayer:",
      "bridgedName": "shouldDrawSelectionForLayer",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawLayerHighlight:": {
      "name": "drawLayerHighlight:",
      "bridgedName": "drawLayerHighlight",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawLayerSelection": {
      "name": "drawLayerSelection",
      "bridgedName": "drawLayerSelection",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "duplicate:": {
      "name": "duplicate:",
      "bridgedName": "duplicate",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "keyDownMoveCanvasIncremental:flags:": {
      "name": "keyDownMoveCanvasIncremental:flags:",
      "bridgedName": "keyDownMoveCanvasIncremental_flags",
      "args": [
        {
          "type": "unsigned short"
        },
        {
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "keyDownMoveToEndOfCanvas:": {
      "name": "keyDownMoveToEndOfCanvas:",
      "bridgedName": "keyDownMoveToEndOfCanvas",
      "args": [
        {
          "type": "unsigned short"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "keyDownMoveCanvas:flags:": {
      "name": "keyDownMoveCanvas:flags:",
      "bridgedName": "keyDownMoveCanvas_flags",
      "args": [
        {
          "type": "unsigned short"
        },
        {
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "flashSnapsForLayer:": {
      "name": "flashSnapsForLayer:",
      "bridgedName": "flashSnapsForLayer",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "opacityShortcutRecognized:": {
      "name": "opacityShortcutRecognized:",
      "bridgedName": "opacityShortcutRecognized",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "keyDownResizeLayers:flags:": {
      "name": "keyDownResizeLayers:flags:",
      "bridgedName": "keyDownResizeLayers_flags",
      "args": [
        {
          "type": "unsigned short"
        },
        {
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "layersAreNotIntersectingTheirArtboards:": {
      "name": "layersAreNotIntersectingTheirArtboards:",
      "bridgedName": "layersAreNotIntersectingTheirArtboards",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "moveLayersFromArtboardToParentPage:": {
      "name": "moveLayersFromArtboardToParentPage:",
      "bridgedName": "moveLayersFromArtboardToParentPage",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "moveLayers:toArtboard:": {
      "name": "moveLayers:toArtboard:",
      "bridgedName": "moveLayers_toArtboard",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "parentArtboardWeCanMoveLayersTo:": {
      "name": "parentArtboardWeCanMoveLayersTo:",
      "bridgedName": "parentArtboardWeCanMoveLayersTo",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "moveLayersOnOrOffArtboard:": {
      "name": "moveLayersOnOrOffArtboard:",
      "bridgedName": "moveLayersOnOrOffArtboard",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "keyDownMoveLayers:flags:": {
      "name": "keyDownMoveLayers:flags:",
      "bridgedName": "keyDownMoveLayers_flags",
      "args": [
        {
          "type": "unsigned short"
        },
        {
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "cancelOperation:": {
      "name": "cancelOperation:",
      "bridgedName": "cancelOperation",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "artboardsInReadingOrder": {
      "name": "artboardsInReadingOrder",
      "bridgedName": "artboardsInReadingOrder",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "currentFocussedArtboard": {
      "name": "currentFocussedArtboard",
      "bridgedName": "currentFocussedArtboard",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "artboardRectInViewCoordinates:withScrollOrigin:": {
      "name": "artboardRectInViewCoordinates:withScrollOrigin:",
      "bridgedName": "artboardRectInViewCoordinates_withScrollOrigin",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "struct CGPoint"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "artboardRectInViewCoordinates:": {
      "name": "artboardRectInViewCoordinates:",
      "bridgedName": "artboardRectInViewCoordinates",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "focusOnArtboard:": {
      "name": "focusOnArtboard:",
      "bridgedName": "focusOnArtboard",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "moveToNextArtboard": {
      "name": "moveToNextArtboard",
      "bridgedName": "moveToNextArtboard",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "moveToPreviousArtboard": {
      "name": "moveToPreviousArtboard",
      "bridgedName": "moveToPreviousArtboard",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "keyDown:": {
      "name": "keyDown:",
      "bridgedName": "keyDown",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "trackMouse:": {
      "name": "trackMouse:",
      "bridgedName": "trackMouse",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setHighlightedLayer:": {
      "name": "setHighlightedLayer:",
      "bridgedName": "setHighlightedLayer",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "highlightedLayer": {
      "name": "highlightedLayer",
      "bridgedName": "highlightedLayer",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isMouseHoveringMultipleSelectedLayerCorner": {
      "name": "isMouseHoveringMultipleSelectedLayerCorner",
      "bridgedName": "isMouseHoveringMultipleSelectedLayerCorner",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "multipleSelectedLayerCornerAtPoint:": {
      "name": "multipleSelectedLayerCornerAtPoint:",
      "bridgedName": "multipleSelectedLayerCornerAtPoint",
      "args": [
        {
          "type": "struct CGPoint"
        }
      ],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isMouseHoveringLayer:corner:flags:": {
      "name": "isMouseHoveringLayer:corner:flags:",
      "bridgedName": "isMouseHoveringLayer_corner_flags",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "struct CGPoint"
        },
        {
          "type": "unsigned long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isMouseHoveringLayerCorner": {
      "name": "isMouseHoveringLayerCorner",
      "bridgedName": "isMouseHoveringLayerCorner",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "shouldNotChangeSelectionForFlags:": {
      "name": "shouldNotChangeSelectionForFlags:",
      "bridgedName": "shouldNotChangeSelectionForFlags",
      "args": [
        {
          "type": "unsigned long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "absoluteMouseUp:flags:": {
      "name": "absoluteMouseUp:flags:",
      "bridgedName": "absoluteMouseUp_flags",
      "args": [
        {
          "type": "struct CGPoint"
        },
        {
          "type": "unsigned long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "mouseExited": {
      "name": "mouseExited",
      "bridgedName": "mouseExited",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "selectLayer:": {
      "name": "selectLayer:",
      "bridgedName": "selectLayer",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "refreshPositionDrawingIfApplicable:": {
      "name": "refreshPositionDrawingIfApplicable:",
      "bridgedName": "refreshPositionDrawingIfApplicable",
      "args": [
        {
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "absoluteMouseDragged:flags:": {
      "name": "absoluteMouseDragged:flags:",
      "bridgedName": "absoluteMouseDragged_flags",
      "args": [
        {
          "type": "struct CGPoint"
        },
        {
          "type": "unsigned long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "selectLayer:extendSelection:": {
      "name": "selectLayer:extendSelection:",
      "bridgedName": "selectLayer_extendSelection",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "mouseDownOnLayer:atPoint:clickCount:flags:": {
      "name": "mouseDownOnLayer:atPoint:clickCount:flags:",
      "bridgedName": "mouseDownOnLayer_atPoint_clickCount_flags",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "struct CGPoint"
        },
        {
          "type": "long long"
        },
        {
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "mouseDownDoubleClick:onLayer:": {
      "name": "mouseDownDoubleClick:onLayer:",
      "bridgedName": "mouseDownDoubleClick_onLayer",
      "args": [
        {
          "type": "struct CGPoint"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "enterMultipleResizeModeWithMouse:clickCount:flags:handle:manager:": {
      "name": "enterMultipleResizeModeWithMouse:clickCount:flags:handle:manager:",
      "bridgedName": "enterMultipleResizeModeWithMouse_clickCount_flags_handle_manager",
      "args": [
        {
          "type": "struct CGPoint"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "long long *"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "enterLineResizeModeWithMouse:clickCount:flags:manager:": {
      "name": "enterLineResizeModeWithMouse:clickCount:flags:manager:",
      "bridgedName": "enterLineResizeModeWithMouse_clickCount_flags_manager",
      "args": [
        {
          "type": "struct CGPoint"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "enterRotateModeWithMouse:clickCount:flags:manager:": {
      "name": "enterRotateModeWithMouse:clickCount:flags:manager:",
      "bridgedName": "enterRotateModeWithMouse_clickCount_flags_manager",
      "args": [
        {
          "type": "struct CGPoint"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "enterResizeModeWithMouse:clickCount:flags:manager:": {
      "name": "enterResizeModeWithMouse:clickCount:flags:manager:",
      "bridgedName": "enterResizeModeWithMouse_clickCount_flags_manager",
      "args": [
        {
          "type": "struct CGPoint"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "absoluteMouseDown:clickCount:flags:": {
      "name": "absoluteMouseDown:clickCount:flags:",
      "bridgedName": "absoluteMouseDown_clickCount_flags",
      "args": [
        {
          "type": "struct CGPoint"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "unsigned long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "handlerWillLoseFocus": {
      "name": "handlerWillLoseFocus",
      "bridgedName": "handlerWillLoseFocus",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "handlerGotFocus": {
      "name": "handlerGotFocus",
      "bridgedName": "handlerGotFocus",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "toolbarIdentifier": {
      "name": "toolbarIdentifier",
      "bridgedName": "toolbarIdentifier",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithManager:": {
      "name": "initWithManager:",
      "bridgedName": "initWithManager",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "activeLayer": {
      "name": "activeLayer",
      "pointer": true,
      "type": "MSLayer",
      "attributes": [
        "retain",
        "nonatomic"
      ]
    },
    "dragGestureRecognizer": {
      "name": "dragGestureRecognizer",
      "pointer": true,
      "type": "MSDragToMoveOrCopyGestureRecognizer",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    },
    "selectionGestureRecognizer": {
      "name": "selectionGestureRecognizer",
      "pointer": true,
      "type": "MSDragToSelectGestureRecognizer",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    },
    "duplicatedObjectID": {
      "name": "duplicatedObjectID",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "retain",
        "nonatomic"
      ]
    },
    "duplicateOffset": {
      "name": "duplicateOffset",
      "pointer": false,
      "type": "struct CGSize",
      "attributes": [
        "nonatomic"
      ]
    },
    "opacityShortcutRecognizer": {
      "name": "opacityShortcutRecognizer",
      "pointer": true,
      "type": "MSOpacityKeyboardShortcutRecognizer",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    },
    "nextModifierKeyChangeShouldRefreshView": {
      "name": "nextModifierKeyChangeShouldRefreshView",
      "pointer": false,
      "type": "BOOL",
      "attributes": [
        "nonatomic"
      ]
    },
    "eventData": {
      "name": "eventData",
      "pointer": true,
      "type": "MSNormalEventData",
      "attributes": [
        "retain",
        "nonatomic"
      ]
    },
    "menuBuilder": {
      "name": "menuBuilder",
      "pointer": true,
      "type": "MSNormalEventContextualMenuBuilder",
      "attributes": [
        "retain",
        "nonatomic"
      ]
    },
    "positionDrawing": {
      "name": "positionDrawing",
      "pointer": true,
      "type": "MSLayerPositionDrawing",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    },
    "debugDescription": {
      "name": "debugDescription",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "description": {
      "name": "description",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "hash": {
      "name": "hash",
      "pointer": false,
      "type": "unsigned long long",
      "attributes": [
        "readonly"
      ]
    },
    "superclass": {
      "name": "superclass",
      "pointer": false,
      "type": "Class",
      "attributes": [
        "readonly"
      ]
    }
  }
}