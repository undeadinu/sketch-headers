{
  "imports": [
    "NSObject.h"
  ],
  "classes": [
    "NSArray"
  ],
  "protocol": false,
  "className": "MSPasteboardLayerArrayEncoder",
  "extends": "NSObject",
  "interfaces": [],
  "methods": {
    "arrayEncoderWithLayers:": {
      "name": "arrayEncoderWithLayers:",
      "bridgedName": "arrayEncoderWithLayers",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    ".cxx_destruct": {
      "name": ".cxx_destruct",
      "bridgedName": ".cxx_destruct",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithJSONDecoder:": {
      "name": "initWithJSONDecoder:",
      "bridgedName": "initWithJSONDecoder",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "encodeAsJSON:": {
      "name": "encodeAsJSON:",
      "bridgedName": "encodeAsJSON",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "finishEncodingObject:": {
      "name": "finishEncodingObject:",
      "bridgedName": "finishEncodingObject",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "startEncodingObject:": {
      "name": "startEncodingObject:",
      "bridgedName": "startEncodingObject",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "previousArchiveObjectIDs": {
      "name": "previousArchiveObjectIDs",
      "pointer": false,
      "type": "BOOL",
      "attributes": [
        "nonatomic"
      ]
    },
    "layers": {
      "name": "layers",
      "pointer": true,
      "type": "NSArray",
      "attributes": [
        "retain",
        "nonatomic"
      ]
    }
  }
}