{
  "imports": [
    "NSIndexPath.h"
  ],
  "classes": [],
  "protocol": false,
  "className": "NSIndexPath",
  "interfaces": [],
  "methods": {
    "indexPathForPoint:ofShape:": {
      "name": "indexPathForPoint:ofShape:",
      "bridgedName": "indexPathForPoint_ofShape",
      "args": [
        {
          "type": "unsigned long long"
        },
        {
          "type": "unsigned long long"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "indexPathForHandle:point:ofShape:": {
      "name": "indexPathForHandle:point:ofShape:",
      "bridgedName": "indexPathForHandle_point_ofShape",
      "args": [
        {
          "type": "unsigned long long"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "unsigned long long"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "checkIfHandleIndexPath": {
      "name": "checkIfHandleIndexPath",
      "bridgedName": "checkIfHandleIndexPath",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "indexPathWithHandle:": {
      "name": "indexPathWithHandle:",
      "bridgedName": "indexPathWithHandle",
      "args": [
        {
          "type": "unsigned long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "shape": {
      "name": "shape",
      "pointer": false,
      "type": "unsigned long long",
      "attributes": [
        "readonly",
        "nonatomic",
        "getter=shape_ms"
      ]
    },
    "point": {
      "name": "point",
      "pointer": false,
      "type": "unsigned long long",
      "attributes": [
        "readonly",
        "nonatomic",
        "getter=point_ms"
      ]
    },
    "handle": {
      "name": "handle",
      "pointer": false,
      "type": "unsigned long long",
      "attributes": [
        "readonly",
        "nonatomic",
        "getter=handle_ms"
      ]
    }
  }
}