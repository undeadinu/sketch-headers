{
  "imports": [],
  "classes": [
    "NSArray",
    "NSFontManager",
    "NSView"
  ],
  "protocol": false,
  "className": "NSFontPanel",
  "extends": "NSPanel",
  "interfaces": [],
  "methods": {
    "_createFontPanelSizeRep": {
      "name": "_createFontPanelSizeRep",
      "bridgedName": "_createFontPanelSizeRep",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "restoreWindowWithIdentifier:state:completionHandler:": {
      "name": "restoreWindowWithIdentifier:state:completionHandler:",
      "bridgedName": "restoreWindowWithIdentifier_state_completionHandler",
      "args": [
        {
          "name": "restoreWindowWithIdentifier",
          "type": "id"
        },
        {
          "name": "state",
          "type": "id"
        },
        {
          "name": "completionHandler",
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "void",
      "kind": "class",
      "kindIndicator": "+"
    },
    "sharedFontPanel": {
      "name": "sharedFontPanel",
      "bridgedName": "sharedFontPanel",
      "args": [],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "sharedFontPanelExists": {
      "name": "sharedFontPanelExists",
      "bridgedName": "sharedFontPanelExists",
      "args": [],
      "returns": "BOOL",
      "kind": "class",
      "kindIndicator": "+"
    },
    "removeItemForTableView:pasteboard:operation:": {
      "name": "removeItemForTableView:pasteboard:operation:",
      "bridgedName": "removeItemForTableView_pasteboard_operation",
      "args": [
        {
          "name": "removeItemForTableView",
          "type": "id"
        },
        {
          "name": "pasteboard",
          "type": "id"
        },
        {
          "name": "operation",
          "type": "unsigned long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "draggingSourceOperationMaskForTableView:": {
      "name": "draggingSourceOperationMaskForTableView:",
      "bridgedName": "draggingSourceOperationMaskForTableView",
      "args": [
        {
          "name": "draggingSourceOperationMaskForTableView",
          "type": "id"
        }
      ],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tableView:writeRowsWithIndexes:toPasteboard:": {
      "name": "tableView:writeRowsWithIndexes:toPasteboard:",
      "bridgedName": "tableView_writeRowsWithIndexes_toPasteboard",
      "args": [
        {
          "name": "tableView",
          "type": "id"
        },
        {
          "name": "writeRowsWithIndexes",
          "type": "id"
        },
        {
          "name": "toPasteboard",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tableView:acceptDrop:row:dropOperation:": {
      "name": "tableView:acceptDrop:row:dropOperation:",
      "bridgedName": "tableView_acceptDrop_row_dropOperation",
      "args": [
        {
          "name": "tableView",
          "type": "id"
        },
        {
          "name": "acceptDrop",
          "type": "id"
        },
        {
          "name": "row",
          "type": "long long"
        },
        {
          "name": "dropOperation",
          "type": "unsigned long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tableView:validateDrop:proposedRow:proposedDropOperation:": {
      "name": "tableView:validateDrop:proposedRow:proposedDropOperation:",
      "bridgedName": "tableView_validateDrop_proposedRow_proposedDropOperation",
      "args": [
        {
          "name": "tableView",
          "type": "id"
        },
        {
          "name": "validateDrop",
          "type": "id"
        },
        {
          "name": "proposedRow",
          "type": "long long"
        },
        {
          "name": "proposedDropOperation",
          "type": "unsigned long long"
        }
      ],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_openExtrasPopup:": {
      "name": "_openExtrasPopup:",
      "bridgedName": "_openExtrasPopup",
      "args": [
        {
          "name": "_openExtrasPopup",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_chooseSizeFromSlider:": {
      "name": "_chooseSizeFromSlider:",
      "bridgedName": "_chooseSizeFromSlider",
      "args": [
        {
          "name": "_chooseSizeFromSlider",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_chooseSize:": {
      "name": "_chooseSize:",
      "bridgedName": "_chooseSize",
      "args": [
        {
          "name": "_chooseSize",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_chooseSizeFromField:": {
      "name": "_chooseSizeFromField:",
      "bridgedName": "_chooseSizeFromField",
      "args": [
        {
          "name": "_chooseSizeFromField",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_chooseFamily:": {
      "name": "_chooseFamily:",
      "bridgedName": "_chooseFamily",
      "args": [
        {
          "name": "_chooseFamily",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_chooseFace:": {
      "name": "_chooseFace:",
      "bridgedName": "_chooseFace",
      "args": [
        {
          "name": "_chooseFace",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_chooseCollection:": {
      "name": "_chooseCollection:",
      "bridgedName": "_chooseCollection",
      "args": [
        {
          "name": "_chooseCollection",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "collectionButtonPressed:": {
      "name": "collectionButtonPressed:",
      "bridgedName": "collectionButtonPressed",
      "args": [
        {
          "name": "collectionButtonPressed",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_fontPanelRemoveCollectionSheet:returnCode:contextInfo:": {
      "name": "_fontPanelRemoveCollectionSheet:returnCode:contextInfo:",
      "bridgedName": "_fontPanelRemoveCollectionSheet_returnCode_contextInfo",
      "args": [
        {
          "name": "_fontPanelRemoveCollectionSheet",
          "type": "id"
        },
        {
          "name": "returnCode",
          "type": "long long"
        },
        {
          "name": "contextInfo",
          "type": "void *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_validateExtrasButton:": {
      "name": "_validateExtrasButton:",
      "bridgedName": "_validateExtrasButton",
      "args": [
        {
          "name": "_validateExtrasButton",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setPreviewFont:": {
      "name": "_setPreviewFont:",
      "bridgedName": "_setPreviewFont",
      "args": [
        {
          "name": "_setPreviewFont",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_updateFontPreviewFont": {
      "name": "_updateFontPreviewFont",
      "bridgedName": "_updateFontPreviewFont",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_updateFontPreview": {
      "name": "_updateFontPreview",
      "bridgedName": "_updateFontPreview",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_togglePreview:animated:": {
      "name": "_togglePreview:animated:",
      "bridgedName": "_togglePreview_animated",
      "args": [
        {
          "name": "_togglePreview",
          "type": "BOOL"
        },
        {
          "name": "animated",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_fontAttributes": {
      "name": "_fontAttributes",
      "bridgedName": "_fontAttributes",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setFont:": {
      "name": "_setFont:",
      "bridgedName": "_setFont",
      "args": [
        {
          "name": "_setFont",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_reflectFont": {
      "name": "_reflectFont",
      "bridgedName": "_reflectFont",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_currentFont": {
      "name": "_currentFont",
      "bridgedName": "_currentFont",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_typographyPanel": {
      "name": "_typographyPanel",
      "bridgedName": "_typographyPanel",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_toggleTypographyPanel": {
      "name": "_toggleTypographyPanel",
      "bridgedName": "_toggleTypographyPanel",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_notifyTypographyPanel": {
      "name": "_notifyTypographyPanel",
      "bridgedName": "_notifyTypographyPanel",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_collectionsChanged:": {
      "name": "_collectionsChanged:",
      "bridgedName": "_collectionsChanged",
      "args": [
        {
          "name": "_collectionsChanged",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_sizeListChanged:": {
      "name": "_sizeListChanged:",
      "bridgedName": "_sizeListChanged",
      "args": [
        {
          "name": "_sizeListChanged",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "convertAttributes:": {
      "name": "convertAttributes:",
      "bridgedName": "convertAttributes",
      "args": [
        {
          "name": "convertAttributes",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_validateFontPanelFontAttributes": {
      "name": "_validateFontPanelFontAttributes",
      "bridgedName": "_validateFontPanelFontAttributes",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setAttributes:isMultiple:": {
      "name": "_setAttributes:isMultiple:",
      "bridgedName": "_setAttributes_isMultiple",
      "args": [
        {
          "name": "_setAttributes",
          "type": "id"
        },
        {
          "name": "isMultiple",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "panelConvertFont:": {
      "name": "panelConvertFont:",
      "bridgedName": "panelConvertFont",
      "args": [
        {
          "name": "panelConvertFont",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setPanelFont:isMultiple:": {
      "name": "setPanelFont:isMultiple:",
      "bridgedName": "setPanelFont_isMultiple",
      "args": [
        {
          "name": "setPanelFont",
          "type": "id"
        },
        {
          "name": "isMultiple",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_inHideFaceMode": {
      "name": "_inHideFaceMode",
      "bridgedName": "_inHideFaceMode",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_inHideCollectionsMode": {
      "name": "_inHideCollectionsMode",
      "bridgedName": "_inHideCollectionsMode",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_checkCollectionMoveOut:": {
      "name": "_checkCollectionMoveOut:",
      "bridgedName": "_checkCollectionMoveOut",
      "args": [
        {
          "name": "_checkCollectionMoveOut",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_reflectSize": {
      "name": "_reflectSize",
      "bridgedName": "_reflectSize",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "windowWillResize:toSize:": {
      "name": "windowWillResize:toSize:",
      "bridgedName": "windowWillResize_toSize",
      "args": [
        {
          "name": "windowWillResize",
          "type": "id"
        },
        {
          "name": "toSize",
          "type": "struct CGSize"
        }
      ],
      "returns": "struct CGSize",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_toggleCollections:animate:": {
      "name": "_toggleCollections:animate:",
      "bridgedName": "_toggleCollections_animate",
      "args": [
        {
          "name": "_toggleCollections",
          "type": "long long"
        },
        {
          "name": "animate",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_validateFaces:": {
      "name": "_validateFaces:",
      "bridgedName": "_validateFaces",
      "args": [
        {
          "name": "_validateFaces",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_validateSizes:": {
      "name": "_validateSizes:",
      "bridgedName": "_validateSizes",
      "args": [
        {
          "name": "_validateSizes",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "applicationDidBecomeActive:": {
      "name": "applicationDidBecomeActive:",
      "bridgedName": "applicationDidBecomeActive",
      "args": [
        {
          "name": "applicationDidBecomeActive",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "windowDidUpdate:": {
      "name": "windowDidUpdate:",
      "bridgedName": "windowDidUpdate",
      "args": [
        {
          "name": "windowDidUpdate",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_populateMiniMode": {
      "name": "_populateMiniMode",
      "bridgedName": "_populateMiniMode",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_populatePopup:withTableView:": {
      "name": "_populatePopup:withTableView:",
      "bridgedName": "_populatePopup_withTableView",
      "args": [
        {
          "name": "_populatePopup",
          "type": "id"
        },
        {
          "name": "withTableView",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_checkMiniMode:": {
      "name": "_checkMiniMode:",
      "bridgedName": "_checkMiniMode",
      "args": [
        {
          "name": "_checkMiniMode",
          "type": "double"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_inMiniMode": {
      "name": "_inMiniMode",
      "bridgedName": "_inMiniMode",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_chooseSizeFromList:": {
      "name": "_chooseSizeFromList:",
      "bridgedName": "_chooseSizeFromList",
      "args": [
        {
          "name": "_chooseSizeFromList",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_changeSizeStyle:": {
      "name": "_changeSizeStyle:",
      "bridgedName": "_changeSizeStyle",
      "args": [
        {
          "name": "_changeSizeStyle",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_resetSizeList:": {
      "name": "_resetSizeList:",
      "bridgedName": "_resetSizeList",
      "args": [
        {
          "name": "_resetSizeList",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_removeSizeFromList:": {
      "name": "_removeSizeFromList:",
      "bridgedName": "_removeSizeFromList",
      "args": [
        {
          "name": "_removeSizeFromList",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_addSizeToList:": {
      "name": "_addSizeToList:",
      "bridgedName": "_addSizeToList",
      "args": [
        {
          "name": "_addSizeToList",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_sizeEditDone:": {
      "name": "_sizeEditDone:",
      "bridgedName": "_sizeEditDone",
      "args": [
        {
          "name": "_sizeEditDone",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "comboBox:indexOfItemWithStringValue:": {
      "name": "comboBox:indexOfItemWithStringValue:",
      "bridgedName": "comboBox_indexOfItemWithStringValue",
      "args": [
        {
          "name": "comboBox",
          "type": "id"
        },
        {
          "name": "indexOfItemWithStringValue",
          "type": "id"
        }
      ],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "comboBox:objectValueForItemAtIndex:": {
      "name": "comboBox:objectValueForItemAtIndex:",
      "bridgedName": "comboBox_objectValueForItemAtIndex",
      "args": [
        {
          "name": "comboBox",
          "type": "id"
        },
        {
          "name": "objectValueForItemAtIndex",
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "numberOfItemsInComboBox:": {
      "name": "numberOfItemsInComboBox:",
      "bridgedName": "numberOfItemsInComboBox",
      "args": [
        {
          "name": "numberOfItemsInComboBox",
          "type": "id"
        }
      ],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "splitView:canCollapseSubview:": {
      "name": "splitView:canCollapseSubview:",
      "bridgedName": "splitView_canCollapseSubview",
      "args": [
        {
          "name": "splitView",
          "type": "id"
        },
        {
          "name": "canCollapseSubview",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "numberOfRowsInTableView:": {
      "name": "numberOfRowsInTableView:",
      "bridgedName": "numberOfRowsInTableView",
      "args": [
        {
          "name": "numberOfRowsInTableView",
          "type": "id"
        }
      ],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tableView:setObjectValue:forTableColumn:row:": {
      "name": "tableView:setObjectValue:forTableColumn:row:",
      "bridgedName": "tableView_setObjectValue_forTableColumn_row",
      "args": [
        {
          "name": "tableView",
          "type": "id"
        },
        {
          "name": "setObjectValue",
          "type": "id"
        },
        {
          "name": "forTableColumn",
          "type": "id"
        },
        {
          "name": "row",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tableView:willDisplayCell:forTableColumn:row:": {
      "name": "tableView:willDisplayCell:forTableColumn:row:",
      "bridgedName": "tableView_willDisplayCell_forTableColumn_row",
      "args": [
        {
          "name": "tableView",
          "type": "id"
        },
        {
          "name": "willDisplayCell",
          "type": "id"
        },
        {
          "name": "forTableColumn",
          "type": "id"
        },
        {
          "name": "row",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tableView:objectValueForTableColumn:row:": {
      "name": "tableView:objectValueForTableColumn:row:",
      "bridgedName": "tableView_objectValueForTableColumn_row",
      "args": [
        {
          "name": "tableView",
          "type": "id"
        },
        {
          "name": "objectValueForTableColumn",
          "type": "id"
        },
        {
          "name": "row",
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tableView:shouldEditTableColumn:row:": {
      "name": "tableView:shouldEditTableColumn:row:",
      "bridgedName": "tableView_shouldEditTableColumn_row",
      "args": [
        {
          "name": "tableView",
          "type": "id"
        },
        {
          "name": "shouldEditTableColumn",
          "type": "id"
        },
        {
          "name": "row",
          "type": "long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "conformsToProtocol:": {
      "name": "conformsToProtocol:",
      "bridgedName": "conformsToProtocol",
      "args": [
        {
          "name": "conformsToProtocol",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "encodeWithCoder:": {
      "name": "encodeWithCoder:",
      "bridgedName": "encodeWithCoder",
      "args": [
        {
          "name": "encodeWithCoder",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithCoder:": {
      "name": "initWithCoder:",
      "bridgedName": "initWithCoder",
      "args": [
        {
          "name": "initWithCoder",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setChooser:": {
      "name": "setChooser:",
      "bridgedName": "setChooser",
      "args": [
        {
          "name": "setChooser",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setSizeTitle:": {
      "name": "setSizeTitle:",
      "bridgedName": "setSizeTitle",
      "args": [
        {
          "name": "setSizeTitle",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setSize:": {
      "name": "setSize:",
      "bridgedName": "setSize",
      "args": [
        {
          "name": "setSize",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_chooseBestMatchingFace": {
      "name": "_chooseBestMatchingFace",
      "bridgedName": "_chooseBestMatchingFace",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "loadFaces:": {
      "name": "loadFaces:",
      "bridgedName": "loadFaces",
      "args": [
        {
          "name": "loadFaces",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setRecents:": {
      "name": "_setRecents:",
      "bridgedName": "_setRecents",
      "args": [
        {
          "name": "_setRecents",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_sortCollections": {
      "name": "_sortCollections",
      "bridgedName": "_sortCollections",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_installAccessoryView:": {
      "name": "_installAccessoryView:",
      "bridgedName": "_installAccessoryView",
      "args": [
        {
          "name": "_installAccessoryView",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setDelegate:": {
      "name": "setDelegate:",
      "bridgedName": "setDelegate",
      "args": [
        {
          "name": "setDelegate",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "reloadDefaultFontFamilies": {
      "name": "reloadDefaultFontFamilies",
      "bridgedName": "reloadDefaultFontFamilies",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_selectedSize": {
      "name": "_selectedSize",
      "bridgedName": "_selectedSize",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_showEffects": {
      "name": "_showEffects",
      "bridgedName": "_showEffects",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_canShowEffects": {
      "name": "_canShowEffects",
      "bridgedName": "_canShowEffects",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_searchChanged:": {
      "name": "_searchChanged:",
      "bridgedName": "_searchChanged",
      "args": [
        {
          "name": "_searchChanged",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_sendCarbonNotification": {
      "name": "_sendCarbonNotification",
      "bridgedName": "_sendCarbonNotification",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setCarbonNotification:": {
      "name": "setCarbonNotification:",
      "bridgedName": "setCarbonNotification",
      "args": [
        {
          "name": "setCarbonNotification",
          "type": "void *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_carbonNotification": {
      "name": "_carbonNotification",
      "bridgedName": "_carbonNotification",
      "args": [],
      "returns": "void *",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "release": {
      "name": "release",
      "bridgedName": "release",
      "args": [],
      "returns": "oneway void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_fontPanelDidLoad": {
      "name": "_fontPanelDidLoad",
      "bridgedName": "_fontPanelDidLoad",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithContentRect:styleMask:backing:defer:": {
      "name": "initWithContentRect:styleMask:backing:defer:",
      "bridgedName": "initWithContentRect_styleMask_backing_defer",
      "args": [
        {
          "name": "initWithContentRect",
          "type": "struct CGRect"
        },
        {
          "name": "styleMask",
          "type": "unsigned long long"
        },
        {
          "name": "backing",
          "type": "unsigned long long"
        },
        {
          "name": "defer",
          "type": "BOOL"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setup": {
      "name": "_setup",
      "bridgedName": "_setup",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_currentFamilyName": {
      "name": "_currentFamilyName",
      "bridgedName": "_currentFamilyName",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_currentCollectionName": {
      "name": "_currentCollectionName",
      "bridgedName": "_currentCollectionName",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "enabled": {
      "name": "enabled",
      "pointer": false,
      "type": "BOOL",
      "attributes": [
        "getter=isEnabled"
      ]
    },
    "accessoryView": {
      "name": "accessoryView",
      "pointer": true,
      "type": "NSView",
      "attributes": [
        "retain"
      ]
    }
  }
}