{
  "imports": [
    "NSObject.h",
    "NSSliderCellMetricsStrategy.h"
  ],
  "classes": [
    "NSString"
  ],
  "protocol": false,
  "className": "_NSSliderCellLegacyMetrics",
  "extends": "NSObject",
  "interfaces": [
    "NSSliderCellMetricsStrategy"
  ],
  "methods": {
    "requiresLegacyMetricsForSlider:": {
      "name": "requiresLegacyMetricsForSlider:",
      "bridgedName": "requiresLegacyMetricsForSlider",
      "args": [
        {
          "name": "requiresLegacyMetricsForSlider",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "class",
      "kindIndicator": "+"
    },
    "rectOfMaxValueImageFlipped:": {
      "name": "rectOfMaxValueImageFlipped:",
      "bridgedName": "rectOfMaxValueImageFlipped",
      "args": [
        {
          "name": "rectOfMaxValueImageFlipped",
          "type": "BOOL"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "rectOfMinValueImageFlipped:": {
      "name": "rectOfMinValueImageFlipped:",
      "bridgedName": "rectOfMinValueImageFlipped",
      "args": [
        {
          "name": "rectOfMinValueImageFlipped",
          "type": "BOOL"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "rectOfTickMarkForValue:knobRect:barRect:": {
      "name": "rectOfTickMarkForValue:knobRect:barRect:",
      "bridgedName": "rectOfTickMarkForValue_knobRect_barRect",
      "args": [
        {
          "name": "rectOfTickMarkForValue",
          "type": "double"
        },
        {
          "name": "knobRect",
          "type": "struct CGRect"
        },
        {
          "name": "barRect",
          "type": "struct CGRect"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "alignmentRectInsets": {
      "name": "alignmentRectInsets",
      "bridgedName": "alignmentRectInsets",
      "args": [],
      "returns": "struct NSEdgeInsets",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "knobAlignmentRectInsets": {
      "name": "knobAlignmentRectInsets",
      "bridgedName": "knobAlignmentRectInsets",
      "args": [],
      "returns": "struct NSEdgeInsets",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "knobRectFlipped:value:knobValueRangeRect:": {
      "name": "knobRectFlipped:value:knobValueRangeRect:",
      "bridgedName": "knobRectFlipped_value_knobValueRangeRect",
      "args": [
        {
          "name": "knobRectFlipped",
          "type": "BOOL"
        },
        {
          "name": "value",
          "type": "double"
        },
        {
          "name": "knobValueRangeRect",
          "type": "struct CGRect"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "knobValueRangeRect:": {
      "name": "knobValueRangeRect:",
      "bridgedName": "knobValueRangeRect",
      "args": [
        {
          "name": "knobValueRangeRect",
          "type": "BOOL"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "barRectFlipped:": {
      "name": "barRectFlipped:",
      "bridgedName": "barRectFlipped",
      "args": [
        {
          "name": "barRectFlipped",
          "type": "BOOL"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_oldGetBarBounds:": {
      "name": "_oldGetBarBounds:",
      "bridgedName": "_oldGetBarBounds",
      "args": [
        {
          "name": "_oldGetBarBounds",
          "type": "struct CGRect"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "cellSizeForBounds:": {
      "name": "cellSizeForBounds:",
      "bridgedName": "cellSizeForBounds",
      "args": [
        {
          "name": "cellSizeForBounds",
          "type": "struct CGRect"
        }
      ],
      "returns": "struct CGSize",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_orthogonalTickMarkInset": {
      "name": "_orthogonalTickMarkInset",
      "bridgedName": "_orthogonalTickMarkInset",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_primaryTickMarkInset": {
      "name": "_primaryTickMarkInset",
      "bridgedName": "_primaryTickMarkInset",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_postBarLength": {
      "name": "_postBarLength",
      "bridgedName": "_postBarLength",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_preBarLength": {
      "name": "_preBarLength",
      "bridgedName": "_preBarLength",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_knobPointOverhang": {
      "name": "_knobPointOverhang",
      "bridgedName": "_knobPointOverhang",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_knobTailOverhang": {
      "name": "_knobTailOverhang",
      "bridgedName": "_knobTailOverhang",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "copyWithZone:": {
      "name": "copyWithZone:",
      "bridgedName": "copyWithZone",
      "args": [
        {
          "name": "copyWithZone",
          "type": "struct _NSZone *"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "debugDescription": {
      "name": "debugDescription",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "description": {
      "name": "description",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "hash": {
      "name": "hash",
      "pointer": false,
      "type": "unsigned long long",
      "attributes": [
        "readonly"
      ]
    },
    "superclass": {
      "name": "superclass",
      "pointer": false,
      "type": "Class",
      "attributes": [
        "readonly"
      ]
    }
  }
}