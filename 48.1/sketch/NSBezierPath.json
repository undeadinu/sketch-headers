{
  "imports": [
    "NSBezierPath.h"
  ],
  "classes": [],
  "protocol": false,
  "className": "NSBezierPath",
  "interfaces": [],
  "methods": {
    "fb_xor:": {
      "name": "fb_xor:",
      "bridgedName": "fb_xor",
      "args": [
        {
          "name": "fb_xor",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "fb_difference:": {
      "name": "fb_difference:",
      "bridgedName": "fb_difference",
      "args": [
        {
          "name": "fb_difference",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "fb_intersect:": {
      "name": "fb_intersect:",
      "bridgedName": "fb_intersect",
      "args": [
        {
          "name": "fb_intersect",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "fb_union:": {
      "name": "fb_union:",
      "bridgedName": "fb_union",
      "args": [
        {
          "name": "fb_union",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bezierCurveFromPoint:toPoint:controlPoint1:controlPoint2:": {
      "name": "bezierCurveFromPoint:toPoint:controlPoint1:controlPoint2:",
      "bridgedName": "bezierCurveFromPoint_toPoint_controlPoint1_controlPoint2",
      "args": [
        {
          "name": "bezierCurveFromPoint",
          "type": "struct CGPoint"
        },
        {
          "name": "toPoint",
          "type": "struct CGPoint"
        },
        {
          "name": "controlPoint1",
          "type": "struct CGPoint"
        },
        {
          "name": "controlPoint2",
          "type": "struct CGPoint"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "bezierPathFromPoint:toPoint:": {
      "name": "bezierPathFromPoint:toPoint:",
      "bridgedName": "bezierPathFromPoint_toPoint",
      "args": [
        {
          "name": "bezierPathFromPoint",
          "type": "struct CGPoint"
        },
        {
          "name": "toPoint",
          "type": "struct CGPoint"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "writeDebugFileNamed:": {
      "name": "writeDebugFileNamed:",
      "bridgedName": "writeDebugFileNamed",
      "args": [
        {
          "name": "writeDebugFileNamed",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isClosed": {
      "name": "isClosed",
      "bridgedName": "isClosed",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "safeBounds": {
      "name": "safeBounds",
      "bridgedName": "safeBounds",
      "args": [],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bezierPathByGrowingBy:": {
      "name": "bezierPathByGrowingBy:",
      "bridgedName": "bezierPathByGrowingBy",
      "args": [
        {
          "name": "bezierPathByGrowingBy",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawInnerShadow:": {
      "name": "drawInnerShadow:",
      "bridgedName": "drawInnerShadow",
      "args": [
        {
          "name": "drawInnerShadow",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bezierPathWithOuterPathOfSize:": {
      "name": "bezierPathWithOuterPathOfSize:",
      "bridgedName": "bezierPathWithOuterPathOfSize",
      "args": [
        {
          "name": "bezierPathWithOuterPathOfSize",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "mutableCGPathCopy": {
      "name": "mutableCGPathCopy",
      "bridgedName": "mutableCGPathCopy",
      "args": [],
      "returns": "struct CGPath *",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "createCGPath_bc": {
      "name": "createCGPath_bc",
      "bridgedName": "createCGPath_bc",
      "args": [],
      "returns": "struct CGPath *",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "outlinePath": {
      "name": "outlinePath",
      "bridgedName": "outlinePath",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "applyPropertiesToContext:": {
      "name": "applyPropertiesToContext:",
      "bridgedName": "applyPropertiesToContext",
      "args": [
        {
          "name": "applyPropertiesToContext",
          "type": "struct CGContext *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "clipInBlock:": {
      "name": "clipInBlock:",
      "bridgedName": "clipInBlock",
      "args": [
        {
          "name": "clipInBlock",
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "strokeInside": {
      "name": "strokeInside",
      "bridgedName": "strokeInside",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "strokeOutside": {
      "name": "strokeOutside",
      "bridgedName": "strokeOutside",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "subPathsOrderedBySizeAfterOutlining": {
      "name": "subPathsOrderedBySizeAfterOutlining",
      "bridgedName": "subPathsOrderedBySizeAfterOutlining",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "direction": {
      "name": "direction",
      "bridgedName": "direction",
      "args": [],
      "returns": "int",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bezierPathByMakingAntiClockwiseIfNecessary": {
      "name": "bezierPathByMakingAntiClockwiseIfNecessary",
      "bridgedName": "bezierPathByMakingAntiClockwiseIfNecessary",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bezierPathByMakingClockwiseIfNecessary": {
      "name": "bezierPathByMakingClockwiseIfNecessary",
      "bridgedName": "bezierPathByMakingClockwiseIfNecessary",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "appendArrowAtPoint_ms:tangent:size:scale:": {
      "name": "appendArrowAtPoint_ms:tangent:size:scale:",
      "bridgedName": "appendArrowAtPoint_ms_tangent_size_scale",
      "args": [
        {
          "name": "appendArrowAtPoint_ms",
          "type": "struct CGPoint"
        },
        {
          "name": "tangent",
          "type": "struct MSTangent"
        },
        {
          "name": "size",
          "type": "double"
        },
        {
          "name": "scale",
          "type": "double"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "appendCircleAtPoint_ms:radius:scale:": {
      "name": "appendCircleAtPoint_ms:radius:scale:",
      "bridgedName": "appendCircleAtPoint_ms_radius_scale",
      "args": [
        {
          "name": "appendCircleAtPoint_ms",
          "type": "struct CGPoint"
        },
        {
          "name": "radius",
          "type": "double"
        },
        {
          "name": "scale",
          "type": "double"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "appendSquareAtPoint_ms:size:scale:": {
      "name": "appendSquareAtPoint_ms:size:scale:",
      "bridgedName": "appendSquareAtPoint_ms_size_scale",
      "args": [
        {
          "name": "appendSquareAtPoint_ms",
          "type": "struct CGPoint"
        },
        {
          "name": "size",
          "type": "double"
        },
        {
          "name": "scale",
          "type": "double"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "debugScale_ms": {
      "name": "debugScale_ms",
      "bridgedName": "debugScale_ms",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bezierPathFromEPSString:": {
      "name": "bezierPathFromEPSString:",
      "bridgedName": "bezierPathFromEPSString",
      "args": [
        {
          "name": "bezierPathFromEPSString",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "epsStringByTrimmingHeaderAndFooter:": {
      "name": "epsStringByTrimmingHeaderAndFooter:",
      "bridgedName": "epsStringByTrimmingHeaderAndFooter",
      "args": [
        {
          "name": "epsStringByTrimmingHeaderAndFooter",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "fb_appendElement:": {
      "name": "fb_appendElement:",
      "bridgedName": "fb_appendElement",
      "args": [
        {
          "name": "fb_appendElement",
          "type": "struct NSBezierElement"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "fb_appendPath:": {
      "name": "fb_appendPath:",
      "bridgedName": "fb_appendPath",
      "args": [
        {
          "name": "fb_appendPath",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "fb_copyAttributesFrom:": {
      "name": "fb_copyAttributesFrom:",
      "bridgedName": "fb_copyAttributesFrom",
      "args": [
        {
          "name": "fb_copyAttributesFrom",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "fb_subpathWithRange:": {
      "name": "fb_subpathWithRange:",
      "bridgedName": "fb_subpathWithRange",
      "args": [
        {
          "name": "fb_subpathWithRange",
          "type": "struct _NSRange"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "fb_elementAtIndex:": {
      "name": "fb_elementAtIndex:",
      "bridgedName": "fb_elementAtIndex",
      "args": [
        {
          "name": "fb_elementAtIndex",
          "type": "unsigned long long"
        }
      ],
      "returns": "struct NSBezierElement",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "fb_pointAtIndex:": {
      "name": "fb_pointAtIndex:",
      "bridgedName": "fb_pointAtIndex",
      "args": [
        {
          "name": "fb_pointAtIndex",
          "type": "unsigned long long"
        }
      ],
      "returns": "struct CGPoint",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "fb_fitCurve:": {
      "name": "fb_fitCurve:",
      "bridgedName": "fb_fitCurve",
      "args": [
        {
          "name": "fb_fitCurve",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "fb_computeCenterTangentAtIndex:": {
      "name": "fb_computeCenterTangentAtIndex:",
      "bridgedName": "fb_computeCenterTangentAtIndex",
      "args": [
        {
          "name": "fb_computeCenterTangentAtIndex",
          "type": "unsigned long long"
        }
      ],
      "returns": "struct CGPoint",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "fb_computeRightTangentAtIndex:": {
      "name": "fb_computeRightTangentAtIndex:",
      "bridgedName": "fb_computeRightTangentAtIndex",
      "args": [
        {
          "name": "fb_computeRightTangentAtIndex",
          "type": "unsigned long long"
        }
      ],
      "returns": "struct CGPoint",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "fb_computeLeftTangentAtIndex:": {
      "name": "fb_computeLeftTangentAtIndex:",
      "bridgedName": "fb_computeLeftTangentAtIndex",
      "args": [
        {
          "name": "fb_computeLeftTangentAtIndex",
          "type": "unsigned long long"
        }
      ],
      "returns": "struct CGPoint",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "fb_estimateParametersUsingChordLengthMethodInRange:": {
      "name": "fb_estimateParametersUsingChordLengthMethodInRange:",
      "bridgedName": "fb_estimateParametersUsingChordLengthMethodInRange",
      "args": [
        {
          "name": "fb_estimateParametersUsingChordLengthMethodInRange",
          "type": "struct _NSRange"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "fb_fitBezierInRange:withParameters:leftTangent:rightTangent:": {
      "name": "fb_fitBezierInRange:withParameters:leftTangent:rightTangent:",
      "bridgedName": "fb_fitBezierInRange_withParameters_leftTangent_rightTangent",
      "args": [
        {
          "name": "fb_fitBezierInRange",
          "type": "struct _NSRange"
        },
        {
          "name": "withParameters",
          "type": "id"
        },
        {
          "name": "leftTangent",
          "type": "struct CGPoint"
        },
        {
          "name": "rightTangent",
          "type": "struct CGPoint"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "fb_fitBezierUsingNaiveMethodInRange:leftTangent:rightTangent:": {
      "name": "fb_fitBezierUsingNaiveMethodInRange:leftTangent:rightTangent:",
      "bridgedName": "fb_fitBezierUsingNaiveMethodInRange_leftTangent_rightTangent",
      "args": [
        {
          "name": "fb_fitBezierUsingNaiveMethodInRange",
          "type": "struct _NSRange"
        },
        {
          "name": "leftTangent",
          "type": "struct CGPoint"
        },
        {
          "name": "rightTangent",
          "type": "struct CGPoint"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "fb_findMaximumErrorForBezier:inRange:parameters:maximumIndex:": {
      "name": "fb_findMaximumErrorForBezier:inRange:parameters:maximumIndex:",
      "bridgedName": "fb_findMaximumErrorForBezier_inRange_parameters_maximumIndex",
      "args": [
        {
          "name": "fb_findMaximumErrorForBezier",
          "type": "id"
        },
        {
          "name": "inRange",
          "type": "struct _NSRange"
        },
        {
          "name": "parameters",
          "type": "id"
        },
        {
          "name": "maximumIndex",
          "type": "unsigned long long *"
        }
      ],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "fb_refineParameters:forRange:bezier:": {
      "name": "fb_refineParameters:forRange:bezier:",
      "bridgedName": "fb_refineParameters_forRange_bezier",
      "args": [
        {
          "name": "fb_refineParameters",
          "type": "id"
        },
        {
          "name": "forRange",
          "type": "struct _NSRange"
        },
        {
          "name": "bezier",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "fb_fitCubicToRange:leftTangent:rightTangent:errorThreshold:": {
      "name": "fb_fitCubicToRange:leftTangent:rightTangent:errorThreshold:",
      "bridgedName": "fb_fitCubicToRange_leftTangent_rightTangent_errorThreshold",
      "args": [
        {
          "name": "fb_fitCubicToRange",
          "type": "struct _NSRange"
        },
        {
          "name": "leftTangent",
          "type": "struct CGPoint"
        },
        {
          "name": "rightTangent",
          "type": "struct CGPoint"
        },
        {
          "name": "errorThreshold",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bezierPathByCurveFitting": {
      "name": "bezierPathByCurveFitting",
      "bridgedName": "bezierPathByCurveFitting",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "animatedGIFRepresentation_ms": {
      "name": "animatedGIFRepresentation_ms",
      "bridgedName": "animatedGIFRepresentation_ms",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bezierPathWithJSONString_ms:": {
      "name": "bezierPathWithJSONString_ms:",
      "bridgedName": "bezierPathWithJSONString_ms",
      "args": [
        {
          "name": "bezierPathWithJSONString_ms",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "bezierPathWithJSON_ms:": {
      "name": "bezierPathWithJSON_ms:",
      "bridgedName": "bezierPathWithJSON_ms",
      "args": [
        {
          "name": "bezierPathWithJSON_ms",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "JSONDescription_ms": {
      "name": "JSONDescription_ms",
      "bridgedName": "JSONDescription_ms",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "JSONRepresetation_ms": {
      "name": "JSONRepresetation_ms",
      "bridgedName": "JSONRepresetation_ms",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bezierPathBySubtractingPaths:": {
      "name": "bezierPathBySubtractingPaths:",
      "bridgedName": "bezierPathBySubtractingPaths",
      "args": [
        {
          "name": "bezierPathBySubtractingPaths",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "booleanExclusiveOrWith:": {
      "name": "booleanExclusiveOrWith:",
      "bridgedName": "booleanExclusiveOrWith",
      "args": [
        {
          "name": "booleanExclusiveOrWith",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "booleanSubtractWith:": {
      "name": "booleanSubtractWith:",
      "bridgedName": "booleanSubtractWith",
      "args": [
        {
          "name": "booleanSubtractWith",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "booleanIntersectWith:": {
      "name": "booleanIntersectWith:",
      "bridgedName": "booleanIntersectWith",
      "args": [
        {
          "name": "booleanIntersectWith",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "booleanUnionWith:": {
      "name": "booleanUnionWith:",
      "bridgedName": "booleanUnionWith",
      "args": [
        {
          "name": "booleanUnionWith",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "debugWriteBooleanOp:withPath:": {
      "name": "debugWriteBooleanOp:withPath:",
      "bridgedName": "debugWriteBooleanOp_withPath",
      "args": [
        {
          "name": "debugWriteBooleanOp",
          "type": "long long"
        },
        {
          "name": "withPath",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "booleanOp:withPath:": {
      "name": "booleanOp:withPath:",
      "bridgedName": "booleanOp_withPath",
      "args": [
        {
          "name": "booleanOp",
          "type": "long long"
        },
        {
          "name": "withPath",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "customIsEqual:": {
      "name": "customIsEqual:",
      "bridgedName": "customIsEqual",
      "args": [
        {
          "name": "customIsEqual",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "appendBezierPathItem:": {
      "name": "appendBezierPathItem:",
      "bridgedName": "appendBezierPathItem",
      "args": [
        {
          "name": "appendBezierPathItem",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "lastItem": {
      "name": "lastItem",
      "bridgedName": "lastItem",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "itemAtIndex:": {
      "name": "itemAtIndex:",
      "bridgedName": "itemAtIndex",
      "args": [
        {
          "name": "itemAtIndex",
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bezierCurves": {
      "name": "bezierCurves",
      "bridgedName": "bezierCurves",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "reverseEnumerator": {
      "name": "reverseEnumerator",
      "bridgedName": "reverseEnumerator",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "enumerator": {
      "name": "enumerator",
      "bridgedName": "enumerator",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bezierPathByRearrangingSubPathsIfNecessary": {
      "name": "bezierPathByRearrangingSubPathsIfNecessary",
      "bridgedName": "bezierPathByRearrangingSubPathsIfNecessary",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bezierPathByReplacingElementAtIndexWithMoveTo:": {
      "name": "bezierPathByReplacingElementAtIndexWithMoveTo:",
      "bridgedName": "bezierPathByReplacingElementAtIndexWithMoveTo",
      "args": [
        {
          "name": "bezierPathByReplacingElementAtIndexWithMoveTo",
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bezierPathByReplacingClosePathByLineToComponents": {
      "name": "bezierPathByReplacingClosePathByLineToComponents",
      "bridgedName": "bezierPathByReplacingClosePathByLineToComponents",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bezierPathByRemovingSubsequentMoveToComponents": {
      "name": "bezierPathByRemovingSubsequentMoveToComponents",
      "bridgedName": "bezierPathByRemovingSubsequentMoveToComponents",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bezierPathByReplacingMoveToByLineToComponents": {
      "name": "bezierPathByReplacingMoveToByLineToComponents",
      "bridgedName": "bezierPathByReplacingMoveToByLineToComponents",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bezierPathByApplyingModifierBlock:": {
      "name": "bezierPathByApplyingModifierBlock:",
      "bridgedName": "bezierPathByApplyingModifierBlock",
      "args": [
        {
          "name": "bezierPathByApplyingModifierBlock",
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "subDivideAtPoint:": {
      "name": "subDivideAtPoint:",
      "bridgedName": "subDivideAtPoint",
      "args": [
        {
          "name": "subDivideAtPoint",
          "type": "struct CGPoint"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawDebugWithZoom:": {
      "name": "drawDebugWithZoom:",
      "bridgedName": "drawDebugWithZoom",
      "args": [
        {
          "name": "drawDebugWithZoom",
          "type": "double"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bezierPathBySmootheningSubPath:": {
      "name": "bezierPathBySmootheningSubPath:",
      "bridgedName": "bezierPathBySmootheningSubPath",
      "args": [
        {
          "name": "bezierPathBySmootheningSubPath",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "pointAtIndex:": {
      "name": "pointAtIndex:",
      "bridgedName": "pointAtIndex",
      "args": [
        {
          "name": "pointAtIndex",
          "type": "long long"
        }
      ],
      "returns": "struct CGPoint",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "appendBezierPathByRemovingMoveToPoint:": {
      "name": "appendBezierPathByRemovingMoveToPoint:",
      "bridgedName": "appendBezierPathByRemovingMoveToPoint",
      "args": [
        {
          "name": "appendBezierPathByRemovingMoveToPoint",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bezierPathByJoiningWithBezierPath:": {
      "name": "bezierPathByJoiningWithBezierPath:",
      "bridgedName": "bezierPathByJoiningWithBezierPath",
      "args": [
        {
          "name": "bezierPathByJoiningWithBezierPath",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isEqualToBezierPath:": {
      "name": "isEqualToBezierPath:",
      "bridgedName": "isEqualToBezierPath",
      "args": [
        {
          "name": "isEqualToBezierPath",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "lengthWithMaximumError:": {
      "name": "lengthWithMaximumError:",
      "bridgedName": "lengthWithMaximumError",
      "args": [
        {
          "name": "lengthWithMaximumError",
          "type": "double"
        }
      ],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "length": {
      "name": "length",
      "bridgedName": "length",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bezierPathByTrimmingToLength:withMaximumError:": {
      "name": "bezierPathByTrimmingToLength:withMaximumError:",
      "bridgedName": "bezierPathByTrimmingToLength_withMaximumError",
      "args": [
        {
          "name": "bezierPathByTrimmingToLength",
          "type": "double"
        },
        {
          "name": "withMaximumError",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bezierPathByTrimmingToLength:": {
      "name": "bezierPathByTrimmingToLength:",
      "bridgedName": "bezierPathByTrimmingToLength",
      "args": [
        {
          "name": "bezierPathByTrimmingToLength",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bezierPathFromIndex:toIndex:": {
      "name": "bezierPathFromIndex:toIndex:",
      "bridgedName": "bezierPathFromIndex_toIndex",
      "args": [
        {
          "name": "bezierPathFromIndex",
          "type": "unsigned long long"
        },
        {
          "name": "toIndex",
          "type": "unsigned long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bezierPathByTrimmingFromLength:withMaximumError:": {
      "name": "bezierPathByTrimmingFromLength:withMaximumError:",
      "bridgedName": "bezierPathByTrimmingFromLength_withMaximumError",
      "args": [
        {
          "name": "bezierPathByTrimmingFromLength",
          "type": "double"
        },
        {
          "name": "withMaximumError",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bezierPathByTrimmingFromLength:": {
      "name": "bezierPathByTrimmingFromLength:",
      "bridgedName": "bezierPathByTrimmingFromLength",
      "args": [
        {
          "name": "bezierPathByTrimmingFromLength",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "pointOnPathAtLength:slope:": {
      "name": "pointOnPathAtLength:slope:",
      "bridgedName": "pointOnPathAtLength_slope",
      "args": [
        {
          "name": "pointOnPathAtLength",
          "type": "double"
        },
        {
          "name": "slope",
          "type": "double *"
        }
      ],
      "returns": "struct CGPoint",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "pointOnPathAtLength:": {
      "name": "pointOnPathAtLength:",
      "bridgedName": "pointOnPathAtLength",
      "args": [
        {
          "name": "pointOnPathAtLength",
          "type": "double"
        }
      ],
      "returns": "struct CGPoint",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "slopeOnPathAtLength:": {
      "name": "slopeOnPathAtLength:",
      "bridgedName": "slopeOnPathAtLength",
      "args": [
        {
          "name": "slopeOnPathAtLength",
          "type": "double"
        }
      ],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "firstPoint": {
      "name": "firstPoint",
      "bridgedName": "firstPoint",
      "args": [],
      "returns": "struct CGPoint",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "lastPoint": {
      "name": "lastPoint",
      "bridgedName": "lastPoint",
      "args": [],
      "returns": "struct CGPoint",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "impliedDashPatternFromDashPattern:paddingToLength:": {
      "name": "impliedDashPatternFromDashPattern:paddingToLength:",
      "bridgedName": "impliedDashPatternFromDashPattern_paddingToLength",
      "args": [
        {
          "name": "impliedDashPatternFromDashPattern",
          "type": "id"
        },
        {
          "name": "paddingToLength",
          "type": "unsigned long long"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "validDashPatternFromProposedDashPattern:padIfNeeded:": {
      "name": "validDashPatternFromProposedDashPattern:padIfNeeded:",
      "bridgedName": "validDashPatternFromProposedDashPattern_padIfNeeded",
      "args": [
        {
          "name": "validDashPatternFromProposedDashPattern",
          "type": "id"
        },
        {
          "name": "padIfNeeded",
          "type": "BOOL"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "validDashLengthFromProposedDashLength:": {
      "name": "validDashLengthFromProposedDashLength:",
      "bridgedName": "validDashLengthFromProposedDashLength",
      "args": [
        {
          "name": "validDashLengthFromProposedDashLength",
          "type": "double"
        }
      ],
      "returns": "double",
      "kind": "class",
      "kindIndicator": "+"
    },
    "bezierPathWithSubPaths:": {
      "name": "bezierPathWithSubPaths:",
      "bridgedName": "bezierPathWithSubPaths",
      "args": [
        {
          "name": "bezierPathWithSubPaths",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "setDashPattern:": {
      "name": "setDashPattern:",
      "bridgedName": "setDashPattern",
      "args": [
        {
          "name": "setDashPattern",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "clampDashPattern:count:": {
      "name": "clampDashPattern:count:",
      "bridgedName": "clampDashPattern_count",
      "args": [
        {
          "name": "clampDashPattern",
          "type": "double *"
        },
        {
          "name": "count",
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "strokeWithWidth:": {
      "name": "strokeWithWidth:",
      "bridgedName": "strokeWithWidth",
      "args": [
        {
          "name": "strokeWithWidth",
          "type": "double"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "fillNonZero": {
      "name": "fillNonZero",
      "bridgedName": "fillNonZero",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "fillEvenOdd": {
      "name": "fillEvenOdd",
      "bridgedName": "fillEvenOdd",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bezierPathWithSquareLineCapStyle": {
      "name": "bezierPathWithSquareLineCapStyle",
      "bridgedName": "bezierPathWithSquareLineCapStyle",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bezierPathWithLineWidth:": {
      "name": "bezierPathWithLineWidth:",
      "bridgedName": "bezierPathWithLineWidth",
      "args": [
        {
          "name": "bezierPathWithLineWidth",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "outerPathWithRect:": {
      "name": "outerPathWithRect:",
      "bridgedName": "outerPathWithRect",
      "args": [
        {
          "name": "outerPathWithRect",
          "type": "struct CGRect"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "insetPathBy:": {
      "name": "insetPathBy:",
      "bridgedName": "insetPathBy",
      "args": [
        {
          "name": "insetPathBy",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "outlinePathWithWidth:": {
      "name": "outlinePathWithWidth:",
      "bridgedName": "outlinePathWithWidth",
      "args": [
        {
          "name": "outlinePathWithWidth",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "containsRect:": {
      "name": "containsRect:",
      "bridgedName": "containsRect",
      "args": [
        {
          "name": "containsRect",
          "type": "struct CGRect"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "debugWriteToFileNamed:": {
      "name": "debugWriteToFileNamed:",
      "bridgedName": "debugWriteToFileNamed",
      "args": [
        {
          "name": "debugWriteToFileNamed",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "simplifyWithMargin:": {
      "name": "simplifyWithMargin:",
      "bridgedName": "simplifyWithMargin",
      "args": [
        {
          "name": "simplifyWithMargin",
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "simplify": {
      "name": "simplify",
      "bridgedName": "simplify",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "subPaths": {
      "name": "subPaths",
      "bridgedName": "subPaths",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "scaleBy:": {
      "name": "scaleBy:",
      "bridgedName": "scaleBy",
      "args": [
        {
          "name": "scaleBy",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bezierPathWithCGPath:": {
      "name": "bezierPathWithCGPath:",
      "bridgedName": "bezierPathWithCGPath",
      "args": [
        {
          "name": "bezierPathWithCGPath",
          "type": "struct CGPath *"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "bezierPathWithPathFromContext:": {
      "name": "bezierPathWithPathFromContext:",
      "bridgedName": "bezierPathWithPathFromContext",
      "args": [
        {
          "name": "bezierPathWithPathFromContext",
          "type": "struct CGContext *"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "strokedPathHelperContext": {
      "name": "strokedPathHelperContext",
      "bridgedName": "strokedPathHelperContext",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setCGPath:inContext:": {
      "name": "setCGPath:inContext:",
      "bridgedName": "setCGPath_inContext",
      "args": [
        {
          "name": "setCGPath",
          "type": "struct CGPath *"
        },
        {
          "name": "inContext",
          "type": "struct CGContext *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "nanSafeSwizzleSelector:overrideSelector:": {
      "name": "nanSafeSwizzleSelector:overrideSelector:",
      "bridgedName": "nanSafeSwizzleSelector_overrideSelector",
      "args": [
        {
          "name": "nanSafeSwizzleSelector",
          "type": "SEL"
        },
        {
          "name": "overrideSelector",
          "type": "SEL"
        }
      ],
      "returns": "void",
      "kind": "class",
      "kindIndicator": "+"
    },
    "load": {
      "name": "load",
      "bridgedName": "load",
      "args": [],
      "returns": "void",
      "kind": "class",
      "kindIndicator": "+"
    },
    "bc_nan_curveToPoint:controlPoint1:controlPoint2:": {
      "name": "bc_nan_curveToPoint:controlPoint1:controlPoint2:",
      "bridgedName": "bc_nan_curveToPoint_controlPoint1_controlPoint2",
      "args": [
        {
          "name": "bc_nan_curveToPoint",
          "type": "struct CGPoint"
        },
        {
          "name": "controlPoint1",
          "type": "struct CGPoint"
        },
        {
          "name": "controlPoint2",
          "type": "struct CGPoint"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bc_nan_lineToPoint:": {
      "name": "bc_nan_lineToPoint:",
      "bridgedName": "bc_nan_lineToPoint",
      "args": [
        {
          "name": "bc_nan_lineToPoint",
          "type": "struct CGPoint"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bc_nan_moveToPoint:": {
      "name": "bc_nan_moveToPoint:",
      "bridgedName": "bc_nan_moveToPoint",
      "args": [
        {
          "name": "bc_nan_moveToPoint",
          "type": "struct CGPoint"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bezierPathFromSVGString:": {
      "name": "bezierPathFromSVGString:",
      "bridgedName": "bezierPathFromSVGString",
      "args": [
        {
          "name": "bezierPathFromSVGString",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "svgPathAttribute": {
      "name": "svgPathAttribute",
      "bridgedName": "svgPathAttribute",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "addSVGArcWithAngle:radius:from:to:largeArc:sweep:": {
      "name": "addSVGArcWithAngle:radius:from:to:largeArc:sweep:",
      "bridgedName": "addSVGArcWithAngle_radius_from_to_largeArc_sweep",
      "args": [
        {
          "name": "addSVGArcWithAngle",
          "type": "double"
        },
        {
          "name": "radius",
          "type": "struct CGSize"
        },
        {
          "name": "from",
          "type": "struct CGPoint"
        },
        {
          "name": "to",
          "type": "struct CGPoint"
        },
        {
          "name": "largeArc",
          "type": "BOOL"
        },
        {
          "name": "sweep",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bezierPathByCuttingBeforeIndex:": {
      "name": "bezierPathByCuttingBeforeIndex:",
      "bridgedName": "bezierPathByCuttingBeforeIndex",
      "args": [
        {
          "name": "bezierPathByCuttingBeforeIndex",
          "type": "unsigned long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bezierIndexForPoint:": {
      "name": "bezierIndexForPoint:",
      "bridgedName": "bezierIndexForPoint",
      "args": [
        {
          "name": "bezierIndexForPoint",
          "type": "struct CGPoint"
        }
      ],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "fb_simplify:": {
      "name": "fb_simplify:",
      "bridgedName": "fb_simplify",
      "args": [
        {
          "name": "fb_simplify",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {}
}