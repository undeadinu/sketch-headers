{
  "imports": [
    "NSObject.h",
    "NSTextInput.h"
  ],
  "classes": [],
  "protocol": false,
  "className": "NSInputClientWrapper",
  "extends": "NSObject",
  "interfaces": [
    "NSTextInput"
  ],
  "methods": {
    "terminateForClient:": {
      "name": "terminateForClient:",
      "bridgedName": "terminateForClient",
      "args": [
        {
          "name": "terminateForClient",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "class",
      "kindIndicator": "+"
    },
    "clientWrapperWithRealClient:": {
      "name": "clientWrapperWithRealClient:",
      "bridgedName": "clientWrapperWithRealClient",
      "args": [
        {
          "name": "clientWrapperWithRealClient",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "invalidateConnectionsAsNecessary:": {
      "name": "invalidateConnectionsAsNecessary:",
      "bridgedName": "invalidateConnectionsAsNecessary",
      "args": [
        {
          "name": "invalidateConnectionsAsNecessary",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "class",
      "kindIndicator": "+"
    },
    "validAttributesForMarkedText": {
      "name": "validAttributesForMarkedText",
      "bridgedName": "validAttributesForMarkedText",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "characterIndexForPoint:": {
      "name": "characterIndexForPoint:",
      "bridgedName": "characterIndexForPoint",
      "args": [
        {
          "name": "characterIndexForPoint",
          "type": "struct CGPoint"
        }
      ],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "firstRectForCharacterRange:": {
      "name": "firstRectForCharacterRange:",
      "bridgedName": "firstRectForCharacterRange",
      "args": [
        {
          "name": "firstRectForCharacterRange",
          "type": "struct _NSRange"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "selectedRange": {
      "name": "selectedRange",
      "bridgedName": "selectedRange",
      "args": [],
      "returns": "struct _NSRange",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "markedRange": {
      "name": "markedRange",
      "bridgedName": "markedRange",
      "args": [],
      "returns": "struct _NSRange",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "attributedSubstringFromRange:": {
      "name": "attributedSubstringFromRange:",
      "bridgedName": "attributedSubstringFromRange",
      "args": [
        {
          "name": "attributedSubstringFromRange",
          "type": "struct _NSRange"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "conversationIdentifier": {
      "name": "conversationIdentifier",
      "bridgedName": "conversationIdentifier",
      "args": [],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "hasMarkedText": {
      "name": "hasMarkedText",
      "bridgedName": "hasMarkedText",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "unmarkText": {
      "name": "unmarkText",
      "bridgedName": "unmarkText",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setMarkedText:selectedRange:": {
      "name": "setMarkedText:selectedRange:",
      "bridgedName": "setMarkedText_selectedRange",
      "args": [
        {
          "name": "setMarkedText",
          "type": "id"
        },
        {
          "name": "selectedRange",
          "type": "struct _NSRange"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "doCommandBySelector:": {
      "name": "doCommandBySelector:",
      "bridgedName": "doCommandBySelector",
      "args": [
        {
          "name": "doCommandBySelector",
          "type": "SEL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "insertText:": {
      "name": "insertText:",
      "bridgedName": "insertText",
      "args": [
        {
          "name": "insertText",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithRealClient:": {
      "name": "initWithRealClient:",
      "bridgedName": "initWithRealClient",
      "args": [
        {
          "name": "initWithRealClient",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "resetState": {
      "name": "resetState",
      "bridgedName": "resetState",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {}
}