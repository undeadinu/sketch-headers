{
  "imports": [
    "NSUserInterfaceValidations.h"
  ],
  "classes": [
    "NSArray",
    "NSCell",
    "NSColor",
    "NSMutableArray"
  ],
  "protocol": false,
  "className": "NSMatrix",
  "extends": "NSControl",
  "interfaces": [
    "NSUserInterfaceValidations"
  ],
  "methods": {
    "isCompatibleWithResponsiveScrolling": {
      "name": "isCompatibleWithResponsiveScrolling",
      "bridgedName": "isCompatibleWithResponsiveScrolling",
      "args": [],
      "returns": "BOOL",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_dropHighlightColor": {
      "name": "_dropHighlightColor",
      "bridgedName": "_dropHighlightColor",
      "args": [],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "requiresConstraintBasedLayout": {
      "name": "requiresConstraintBasedLayout",
      "bridgedName": "requiresConstraintBasedLayout",
      "args": [],
      "returns": "BOOL",
      "kind": "class",
      "kindIndicator": "+"
    },
    "initialize": {
      "name": "initialize",
      "bridgedName": "initialize",
      "args": [],
      "returns": "void",
      "kind": "class",
      "kindIndicator": "+"
    },
    "accessibilityIsSingleCelled": {
      "name": "accessibilityIsSingleCelled",
      "bridgedName": "accessibilityIsSingleCelled",
      "args": [],
      "returns": "BOOL",
      "kind": "class",
      "kindIndicator": "+"
    },
    ".cxx_destruct": {
      "name": ".cxx_destruct",
      "bridgedName": ".cxx_destruct",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "heartBeat:": {
      "name": "heartBeat:",
      "bridgedName": "heartBeat",
      "args": [
        {
          "name": "heartBeat",
          "type": "CDStruct_fadd2e06 *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_wantsHeartBeat": {
      "name": "_wantsHeartBeat",
      "bridgedName": "_wantsHeartBeat",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_windowChangedKeyState": {
      "name": "_windowChangedKeyState",
      "bridgedName": "_windowChangedKeyState",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_rightMouseUpOrDown:": {
      "name": "_rightMouseUpOrDown:",
      "bridgedName": "_rightMouseUpOrDown",
      "args": [
        {
          "name": "_rightMouseUpOrDown",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_resetBrowserClickedRowAndColumn": {
      "name": "_resetBrowserClickedRowAndColumn",
      "bridgedName": "_resetBrowserClickedRowAndColumn",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_menuDidEndTracking:": {
      "name": "_menuDidEndTracking:",
      "bridgedName": "_menuDidEndTracking",
      "args": [
        {
          "name": "_menuDidEndTracking",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "menuForEvent:": {
      "name": "menuForEvent:",
      "bridgedName": "menuForEvent",
      "args": [
        {
          "name": "menuForEvent",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "helpRequested:": {
      "name": "helpRequested:",
      "bridgedName": "helpRequested",
      "args": [
        {
          "name": "helpRequested",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_doResetOfCursorRects:revealovers:": {
      "name": "_doResetOfCursorRects:revealovers:",
      "bridgedName": "_doResetOfCursorRects_revealovers",
      "args": [
        {
          "name": "_doResetOfCursorRects",
          "type": "BOOL"
        },
        {
          "name": "revealovers",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_finishedMakingConnections": {
      "name": "_finishedMakingConnections",
      "bridgedName": "_finishedMakingConnections",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithCoder:": {
      "name": "initWithCoder:",
      "bridgedName": "initWithCoder",
      "args": [
        {
          "name": "initWithCoder",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "encodeWithCoder:": {
      "name": "encodeWithCoder:",
      "bridgedName": "encodeWithCoder",
      "args": [
        {
          "name": "encodeWithCoder",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_selectCellIfRequired": {
      "name": "_selectCellIfRequired",
      "bridgedName": "_selectCellIfRequired",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_checkForSimpleTrackingMode": {
      "name": "_checkForSimpleTrackingMode",
      "bridgedName": "_checkForSimpleTrackingMode",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setUseSimpleTrackingMode:": {
      "name": "_setUseSimpleTrackingMode:",
      "bridgedName": "_setUseSimpleTrackingMode",
      "args": [
        {
          "name": "_setUseSimpleTrackingMode",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_useSimpleTrackingMode": {
      "name": "_useSimpleTrackingMode",
      "bridgedName": "_useSimpleTrackingMode",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "toolTipForCell:": {
      "name": "toolTipForCell:",
      "bridgedName": "toolTipForCell",
      "args": [
        {
          "name": "toolTipForCell",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setToolTip:forCell:": {
      "name": "setToolTip:forCell:",
      "bridgedName": "setToolTip_forCell",
      "args": [
        {
          "name": "setToolTip",
          "type": "id"
        },
        {
          "name": "forCell",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "acceptsFirstMouse:": {
      "name": "acceptsFirstMouse:",
      "bridgedName": "acceptsFirstMouse",
      "args": [
        {
          "name": "acceptsFirstMouse",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "selectTextAtRow:column:": {
      "name": "selectTextAtRow:column:",
      "bridgedName": "selectTextAtRow_column",
      "args": [
        {
          "name": "selectTextAtRow",
          "type": "long long"
        },
        {
          "name": "column",
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "selectText:": {
      "name": "selectText:",
      "bridgedName": "selectText",
      "args": [
        {
          "name": "selectText",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_selectTextOfCell:": {
      "name": "_selectTextOfCell:",
      "bridgedName": "_selectTextOfCell",
      "args": [
        {
          "name": "_selectTextOfCell",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "textView:completions:forPartialWordRange:indexOfSelectedItem:": {
      "name": "textView:completions:forPartialWordRange:indexOfSelectedItem:",
      "bridgedName": "textView_completions_forPartialWordRange_indexOfSelectedItem",
      "args": [
        {
          "name": "textView",
          "type": "id"
        },
        {
          "name": "completions",
          "type": "id"
        },
        {
          "name": "forPartialWordRange",
          "type": "struct _NSRange"
        },
        {
          "name": "indexOfSelectedItem",
          "type": "long long *"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "textView:doCommandBySelector:": {
      "name": "textView:doCommandBySelector:",
      "bridgedName": "textView_doCommandBySelector",
      "args": [
        {
          "name": "textView",
          "type": "id"
        },
        {
          "name": "doCommandBySelector",
          "type": "SEL"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "textDidChange:": {
      "name": "textDidChange:",
      "bridgedName": "textDidChange",
      "args": [
        {
          "name": "textDidChange",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "textDidBeginEditing:": {
      "name": "textDidBeginEditing:",
      "bridgedName": "textDidBeginEditing",
      "args": [
        {
          "name": "textDidBeginEditing",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "textDidEndEditing:": {
      "name": "textDidEndEditing:",
      "bridgedName": "textDidEndEditing",
      "args": [
        {
          "name": "textDidEndEditing",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "textShouldBeginEditing:": {
      "name": "textShouldBeginEditing:",
      "bridgedName": "textShouldBeginEditing",
      "args": [
        {
          "name": "textShouldBeginEditing",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "textShouldEndEditing:": {
      "name": "textShouldEndEditing:",
      "bridgedName": "textShouldEndEditing",
      "args": [
        {
          "name": "textShouldEndEditing",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "textView:shouldChangeTextInRange:replacementString:": {
      "name": "textView:shouldChangeTextInRange:replacementString:",
      "bridgedName": "textView_shouldChangeTextInRange_replacementString",
      "args": [
        {
          "name": "textView",
          "type": "id"
        },
        {
          "name": "shouldChangeTextInRange",
          "type": "struct _NSRange"
        },
        {
          "name": "replacementString",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "validateUserInterfaceItem:": {
      "name": "validateUserInterfaceItem:",
      "bridgedName": "validateUserInterfaceItem",
      "args": [
        {
          "name": "validateUserInterfaceItem",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "stopSpeaking:": {
      "name": "stopSpeaking:",
      "bridgedName": "stopSpeaking",
      "args": [
        {
          "name": "stopSpeaking",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "startSpeaking:": {
      "name": "startSpeaking:",
      "bridgedName": "startSpeaking",
      "args": [
        {
          "name": "startSpeaking",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "sendDoubleAction": {
      "name": "sendDoubleAction",
      "bridgedName": "sendDoubleAction",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_sendDoubleActionToCellAt:": {
      "name": "_sendDoubleActionToCellAt:",
      "bridgedName": "_sendDoubleActionToCellAt",
      "args": [
        {
          "name": "_sendDoubleActionToCellAt",
          "type": "struct CGPoint"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "sendAction": {
      "name": "sendAction",
      "bridgedName": "sendAction",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "sendAction:to:": {
      "name": "sendAction:to:",
      "bridgedName": "sendAction_to",
      "args": [
        {
          "name": "sendAction",
          "type": "SEL"
        },
        {
          "name": "to",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setWindow:": {
      "name": "_setWindow:",
      "bridgedName": "_setWindow",
      "args": [
        {
          "name": "_setWindow",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_recursiveFindDefaultButtonCell": {
      "name": "_recursiveFindDefaultButtonCell",
      "bridgedName": "_recursiveFindDefaultButtonCell",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_performKeyEquivalent:conditionally:": {
      "name": "_performKeyEquivalent:conditionally:",
      "bridgedName": "_performKeyEquivalent_conditionally",
      "args": [
        {
          "name": "_performKeyEquivalent",
          "type": "id"
        },
        {
          "name": "conditionally",
          "type": "BOOL"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "performKeyEquivalent:": {
      "name": "performKeyEquivalent:",
      "bridgedName": "performKeyEquivalent",
      "args": [
        {
          "name": "performKeyEquivalent",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_keyEquivalentModifierMask:matchesModifierFlags:": {
      "name": "_keyEquivalentModifierMask:matchesModifierFlags:",
      "bridgedName": "_keyEquivalentModifierMask_matchesModifierFlags",
      "args": [
        {
          "name": "_keyEquivalentModifierMask",
          "type": "unsigned long long"
        },
        {
          "name": "matchesModifierFlags",
          "type": "unsigned long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_allowAnimationInCells:": {
      "name": "_allowAnimationInCells:",
      "bridgedName": "_allowAnimationInCells",
      "args": [
        {
          "name": "_allowAnimationInCells",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "mouseDown:": {
      "name": "mouseDown:",
      "bridgedName": "mouseDown",
      "args": [
        {
          "name": "mouseDown",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_mouseLoop:long)arg3:_SelectionAnchor *)arg5:": {
      "name": "_mouseLoop:long)arg3:_SelectionAnchor *)arg5:",
      "bridgedName": "_mouseLoop_long)arg3__SelectionAnchor *)arg5",
      "args": [
        {
          "name": "_mouseLoop",
          "type": "id"
        },
        {
          "name": "long)arg3",
          "type": "long long"
        },
        {
          "name": "_SelectionAnchor *)arg5",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_normalListmodeDown:long)arg3:": {
      "name": "_normalListmodeDown:long)arg3:",
      "bridgedName": "_normalListmodeDown_long)arg3",
      "args": [
        {
          "name": "_normalListmodeDown",
          "type": "id"
        },
        {
          "name": "long)arg3",
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_alternateDown:long)arg3:": {
      "name": "_alternateDown:long)arg3:",
      "bridgedName": "_alternateDown_long)arg3",
      "args": [
        {
          "name": "_alternateDown",
          "type": "id"
        },
        {
          "name": "long)arg3",
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_shiftDown:long)arg3:": {
      "name": "_shiftDown:long)arg3:",
      "bridgedName": "_shiftDown_long)arg3",
      "args": [
        {
          "name": "_shiftDown",
          "type": "id"
        },
        {
          "name": "long)arg3",
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_cellFurthestFrom:andCol:": {
      "name": "_cellFurthestFrom:andCol:",
      "bridgedName": "_cellFurthestFrom_andCol",
      "args": [
        {
          "name": "_cellFurthestFrom",
          "type": "long long"
        },
        {
          "name": "andCol",
          "type": "long long"
        }
      ],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_firstHighlightedCell": {
      "name": "_firstHighlightedCell",
      "bridgedName": "_firstHighlightedCell",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_selectRowRange:": {
      "name": "_selectRowRange:",
      "bridgedName": "_selectRowRange",
      "args": [
        {
          "name": "_selectRowRange",
          "type": "struct _SelectionAnchor *"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_selectRectRange:": {
      "name": "_selectRectRange:",
      "bridgedName": "_selectRectRange",
      "args": [
        {
          "name": "_selectRectRange",
          "type": "struct _SelectionAnchor *"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_selectRange:oldArea:lit:includeX:": {
      "name": "_selectRange:oldArea:lit:includeX:",
      "bridgedName": "_selectRange_oldArea_lit_includeX",
      "args": [
        {
          "name": "_selectRange",
          "type": "struct _SelectionAnchor *"
        },
        {
          "name": "oldArea",
          "type": "struct _SelectionAnchor *"
        },
        {
          "name": "lit",
          "type": "BOOL"
        },
        {
          "name": "includeX",
          "type": "BOOL"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setSelectionRange:": {
      "name": "_setSelectionRange:",
      "bridgedName": "_setSelectionRange",
      "args": [
        {
          "name": "_setSelectionRange",
          "type": "struct _SelectionAnchor *"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setSelectionFrom:to:anchor:highlight:": {
      "name": "setSelectionFrom:to:anchor:highlight:",
      "bridgedName": "setSelectionFrom_to_anchor_highlight",
      "args": [
        {
          "name": "setSelectionFrom",
          "type": "long long"
        },
        {
          "name": "to",
          "type": "long long"
        },
        {
          "name": "anchor",
          "type": "long long"
        },
        {
          "name": "highlight",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_mouseDownSimpleTrackingMode:": {
      "name": "_mouseDownSimpleTrackingMode:",
      "bridgedName": "_mouseDownSimpleTrackingMode",
      "args": [
        {
          "name": "_mouseDownSimpleTrackingMode",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_mouseDownNonListmode:": {
      "name": "_mouseDownNonListmode:",
      "bridgedName": "_mouseDownNonListmode",
      "args": [
        {
          "name": "_mouseDownNonListmode",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_mouseDownListmode:": {
      "name": "_mouseDownListmode:",
      "bridgedName": "_mouseDownListmode",
      "args": [
        {
          "name": "_mouseDownListmode",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_performDragFromMouseDown:": {
      "name": "_performDragFromMouseDown:",
      "bridgedName": "_performDragFromMouseDown",
      "args": [
        {
          "name": "_performDragFromMouseDown",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "altModifySelection:": {
      "name": "altModifySelection:",
      "bridgedName": "altModifySelection",
      "args": [
        {
          "name": "altModifySelection",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "shiftModifySelection:": {
      "name": "shiftModifySelection:",
      "bridgedName": "shiftModifySelection",
      "args": [
        {
          "name": "shiftModifySelection",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_makeEditable:long)arg2:": {
      "name": "_makeEditable:long)arg2:",
      "bridgedName": "_makeEditable_long)arg2",
      "args": [
        {
          "name": "_makeEditable",
          "type": "id"
        },
        {
          "name": "long)arg2",
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_hasEditableCell": {
      "name": "_hasEditableCell",
      "bridgedName": "_hasEditableCell",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "resignKeyWindow": {
      "name": "resignKeyWindow",
      "bridgedName": "resignKeyWindow",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "becomeKeyWindow": {
      "name": "becomeKeyWindow",
      "bridgedName": "becomeKeyWindow",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "resignFirstResponder": {
      "name": "resignFirstResponder",
      "bridgedName": "resignFirstResponder",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "becomeFirstResponder": {
      "name": "becomeFirstResponder",
      "bridgedName": "becomeFirstResponder",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setAllowsNonVisibleCellsToBecomeFirstResponder:": {
      "name": "_setAllowsNonVisibleCellsToBecomeFirstResponder:",
      "bridgedName": "_setAllowsNonVisibleCellsToBecomeFirstResponder",
      "args": [
        {
          "name": "_setAllowsNonVisibleCellsToBecomeFirstResponder",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_browserOptimizationsEnabled": {
      "name": "_browserOptimizationsEnabled",
      "bridgedName": "_browserOptimizationsEnabled",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setBrowserOptimizationsEnabled:": {
      "name": "_setBrowserOptimizationsEnabled:",
      "bridgedName": "_setBrowserOptimizationsEnabled",
      "args": [
        {
          "name": "_setBrowserOptimizationsEnabled",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "keyUp:": {
      "name": "keyUp:",
      "bridgedName": "keyUp",
      "args": [
        {
          "name": "keyUp",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "keyDown:": {
      "name": "keyDown:",
      "bridgedName": "keyDown",
      "args": [
        {
          "name": "keyDown",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_pageUpWithEvent:": {
      "name": "_pageUpWithEvent:",
      "bridgedName": "_pageUpWithEvent",
      "args": [
        {
          "name": "_pageUpWithEvent",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_pageDownWithEvent:": {
      "name": "_pageDownWithEvent:",
      "bridgedName": "_pageDownWithEvent",
      "args": [
        {
          "name": "_pageDownWithEvent",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_keyboardModifyRow:column:withEvent:": {
      "name": "_keyboardModifyRow:column:withEvent:",
      "bridgedName": "_keyboardModifyRow_column_withEvent",
      "args": [
        {
          "name": "_keyboardModifyRow",
          "type": "long long"
        },
        {
          "name": "column",
          "type": "long long"
        },
        {
          "name": "withEvent",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_acceptableRowAboveRow:tryBelowPoint:": {
      "name": "_acceptableRowAboveRow:tryBelowPoint:",
      "bridgedName": "_acceptableRowAboveRow_tryBelowPoint",
      "args": [
        {
          "name": "_acceptableRowAboveRow",
          "type": "long long"
        },
        {
          "name": "tryBelowPoint",
          "type": "struct CGPoint"
        }
      ],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_acceptableRowBelowRow:tryAbovePoint:": {
      "name": "_acceptableRowBelowRow:tryAbovePoint:",
      "bridgedName": "_acceptableRowBelowRow_tryAbovePoint",
      "args": [
        {
          "name": "_acceptableRowBelowRow",
          "type": "long long"
        },
        {
          "name": "tryAbovePoint",
          "type": "struct CGPoint"
        }
      ],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_acceptableRowAboveKeyInVisibleRect:": {
      "name": "_acceptableRowAboveKeyInVisibleRect:",
      "bridgedName": "_acceptableRowAboveKeyInVisibleRect",
      "args": [
        {
          "name": "_acceptableRowAboveKeyInVisibleRect",
          "type": "struct CGRect"
        }
      ],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_acceptableRowBelowKeyInVisibleRect:": {
      "name": "_acceptableRowBelowKeyInVisibleRect:",
      "bridgedName": "_acceptableRowBelowKeyInVisibleRect",
      "args": [
        {
          "name": "_acceptableRowBelowKeyInVisibleRect",
          "type": "struct CGRect"
        }
      ],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_acceptableRowBelowRow:maxRow:": {
      "name": "_acceptableRowBelowRow:maxRow:",
      "bridgedName": "_acceptableRowBelowRow_maxRow",
      "args": [
        {
          "name": "_acceptableRowBelowRow",
          "type": "long long"
        },
        {
          "name": "maxRow",
          "type": "long long"
        }
      ],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_acceptableRowAboveRow:minRow:": {
      "name": "_acceptableRowAboveRow:minRow:",
      "bridgedName": "_acceptableRowAboveRow_minRow",
      "args": [
        {
          "name": "_acceptableRowAboveRow",
          "type": "long long"
        },
        {
          "name": "minRow",
          "type": "long long"
        }
      ],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_cellForRow:browser:browserColumn:": {
      "name": "_cellForRow:browser:browserColumn:",
      "bridgedName": "_cellForRow_browser_browserColumn",
      "args": [
        {
          "name": "_cellForRow",
          "type": "long long"
        },
        {
          "name": "browser",
          "type": "id"
        },
        {
          "name": "browserColumn",
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_browserColumnController": {
      "name": "_browserColumnController",
      "bridgedName": "_browserColumnController",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_getBrowser:browserColumn:": {
      "name": "_getBrowser:browserColumn:",
      "bridgedName": "_getBrowser_browserColumn",
      "args": [
        {
          "name": "_getBrowser",
          "type": "id *"
        },
        {
          "name": "browserColumn",
          "type": "long long *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setKeyCellFromBottom": {
      "name": "_setKeyCellFromBottom",
      "bridgedName": "_setKeyCellFromBottom",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setKeyCellFromTop": {
      "name": "_setKeyCellFromTop",
      "bridgedName": "_setKeyCellFromTop",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_moveLeftWithEvent:": {
      "name": "_moveLeftWithEvent:",
      "bridgedName": "_moveLeftWithEvent",
      "args": [
        {
          "name": "_moveLeftWithEvent",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_moveRightWithEvent:": {
      "name": "_moveRightWithEvent:",
      "bridgedName": "_moveRightWithEvent",
      "args": [
        {
          "name": "_moveRightWithEvent",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_moveUpWithEvent:": {
      "name": "_moveUpWithEvent:",
      "bridgedName": "_moveUpWithEvent",
      "args": [
        {
          "name": "_moveUpWithEvent",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_moveDownWithEvent:": {
      "name": "_moveDownWithEvent:",
      "bridgedName": "_moveDownWithEvent",
      "args": [
        {
          "name": "_moveDownWithEvent",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_changeSelectionWithEvent:": {
      "name": "_changeSelectionWithEvent:",
      "bridgedName": "_changeSelectionWithEvent",
      "args": [
        {
          "name": "_changeSelectionWithEvent",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_changingSelectionWithKeyboard": {
      "name": "_changingSelectionWithKeyboard",
      "bridgedName": "_changingSelectionWithKeyboard",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "moveDown:": {
      "name": "moveDown:",
      "bridgedName": "moveDown",
      "args": [
        {
          "name": "moveDown",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "moveUp:": {
      "name": "moveUp:",
      "bridgedName": "moveUp",
      "args": [
        {
          "name": "moveUp",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "moveRight:": {
      "name": "moveRight:",
      "bridgedName": "moveRight",
      "args": [
        {
          "name": "moveRight",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "moveLeft:": {
      "name": "moveLeft:",
      "bridgedName": "moveLeft",
      "args": [
        {
          "name": "moveLeft",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "selectPreviousKeyView:": {
      "name": "selectPreviousKeyView:",
      "bridgedName": "selectPreviousKeyView",
      "args": [
        {
          "name": "selectPreviousKeyView",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "selectNextKeyView:": {
      "name": "selectNextKeyView:",
      "bridgedName": "selectNextKeyView",
      "args": [
        {
          "name": "selectNextKeyView",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_makeDownCellKey": {
      "name": "_makeDownCellKey",
      "bridgedName": "_makeDownCellKey",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_makeUpCellKey": {
      "name": "_makeUpCellKey",
      "bridgedName": "_makeUpCellKey",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_makeRightCellKey": {
      "name": "_makeRightCellKey",
      "bridgedName": "_makeRightCellKey",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_makeLeftCellKey": {
      "name": "_makeLeftCellKey",
      "bridgedName": "_makeLeftCellKey",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_makePreviousCellOrViewKey": {
      "name": "_makePreviousCellOrViewKey",
      "bridgedName": "_makePreviousCellOrViewKey",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_makePreviousCellKey": {
      "name": "_makePreviousCellKey",
      "bridgedName": "_makePreviousCellKey",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_makeNextCellOrViewKey": {
      "name": "_makeNextCellOrViewKey",
      "bridgedName": "_makeNextCellOrViewKey",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_makeNextCellKey": {
      "name": "_makeNextCellKey",
      "bridgedName": "_makeNextCellKey",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_selectNextCellKeyStartingAtRow:column:": {
      "name": "_selectNextCellKeyStartingAtRow:column:",
      "bridgedName": "_selectNextCellKeyStartingAtRow_column",
      "args": [
        {
          "name": "_selectNextCellKeyStartingAtRow",
          "type": "long long"
        },
        {
          "name": "column",
          "type": "long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_selectKeyCellAtRow:column:": {
      "name": "_selectKeyCellAtRow:column:",
      "bridgedName": "_selectKeyCellAtRow_column",
      "args": [
        {
          "name": "_selectKeyCellAtRow",
          "type": "long long"
        },
        {
          "name": "column",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "keyCell": {
      "name": "keyCell",
      "bridgedName": "keyCell",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "__keyCol": {
      "name": "__keyCol",
      "bridgedName": "__keyCol",
      "args": [],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "__keyRow": {
      "name": "__keyRow",
      "bridgedName": "__keyRow",
      "args": [],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setKeyCell:": {
      "name": "setKeyCell:",
      "bridgedName": "setKeyCell",
      "args": [
        {
          "name": "setKeyCell",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_clearKeyCell": {
      "name": "_clearKeyCell",
      "bridgedName": "_clearKeyCell",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setKeyCellAtRow:column:": {
      "name": "_setKeyCellAtRow:column:",
      "bridgedName": "_setKeyCellAtRow_column",
      "args": [
        {
          "name": "_setKeyCellAtRow",
          "type": "long long"
        },
        {
          "name": "column",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setKeyCellNeedsDisplay": {
      "name": "_setKeyCellNeedsDisplay",
      "bridgedName": "_setKeyCellNeedsDisplay",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "performClick:": {
      "name": "performClick:",
      "bridgedName": "performClick",
      "args": [
        {
          "name": "performClick",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setTabKeyTraversesCells:": {
      "name": "setTabKeyTraversesCells:",
      "bridgedName": "setTabKeyTraversesCells",
      "args": [
        {
          "name": "setTabKeyTraversesCells",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tabKeyTraversesCells": {
      "name": "tabKeyTraversesCells",
      "bridgedName": "tabKeyTraversesCells",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "acceptsFirstResponder": {
      "name": "acceptsFirstResponder",
      "bridgedName": "acceptsFirstResponder",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "refusesFirstResponder": {
      "name": "refusesFirstResponder",
      "bridgedName": "refusesFirstResponder",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setRefusesFirstResponder:": {
      "name": "setRefusesFirstResponder:",
      "bridgedName": "setRefusesFirstResponder",
      "args": [
        {
          "name": "setRefusesFirstResponder",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "needsPanelToBecomeKey": {
      "name": "needsPanelToBecomeKey",
      "bridgedName": "needsPanelToBecomeKey",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_shouldShowFirstResponderForCell:": {
      "name": "_shouldShowFirstResponderForCell:",
      "bridgedName": "_shouldShowFirstResponderForCell",
      "args": [
        {
          "name": "_shouldShowFirstResponderForCell",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_shouldShowFirstResponderAtRow:column:ignoringWindowKeyState:": {
      "name": "_shouldShowFirstResponderAtRow:column:ignoringWindowKeyState:",
      "bridgedName": "_shouldShowFirstResponderAtRow_column_ignoringWindowKeyState",
      "args": [
        {
          "name": "_shouldShowFirstResponderAtRow",
          "type": "long long"
        },
        {
          "name": "column",
          "type": "long long"
        },
        {
          "name": "ignoringWindowKeyState",
          "type": "BOOL"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_deselectAllExcept:long)arg2 andDraw:": {
      "name": "_deselectAllExcept:long)arg2 andDraw:",
      "bridgedName": "_deselectAllExcept_long)arg2 andDraw",
      "args": [
        {
          "name": "_deselectAllExcept",
          "type": "long long"
        },
        {
          "name": "long)arg2 andDraw",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_findFirstOne:long *)arg2": {
      "name": "_findFirstOne:long *)arg2",
      "bridgedName": "_findFirstOne_long *)arg2",
      "args": [
        {
          "name": "_findFirstOne",
          "type": "long long *"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_radioHit:row:col:": {
      "name": "_radioHit:row:col:",
      "bridgedName": "_radioHit_row_col",
      "args": [
        {
          "name": "_radioHit",
          "type": "struct CGPoint"
        },
        {
          "name": "row",
          "type": "long long *"
        },
        {
          "name": "col",
          "type": "long long *"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_loopHit:row:col:": {
      "name": "_loopHit:row:col:",
      "bridgedName": "_loopHit_row_col",
      "args": [
        {
          "name": "_loopHit",
          "type": "struct CGPoint"
        },
        {
          "name": "row",
          "type": "long long *"
        },
        {
          "name": "col",
          "type": "long long *"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_mouseHit:row:col:": {
      "name": "_mouseHit:row:col:",
      "bridgedName": "_mouseHit_row_col",
      "args": [
        {
          "name": "_mouseHit",
          "type": "struct CGPoint"
        },
        {
          "name": "row",
          "type": "long long *"
        },
        {
          "name": "col",
          "type": "long long *"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "scrollCellToVisibleAtRow:column:": {
      "name": "scrollCellToVisibleAtRow:column:",
      "bridgedName": "scrollCellToVisibleAtRow_column",
      "args": [
        {
          "name": "scrollCellToVisibleAtRow",
          "type": "long long"
        },
        {
          "name": "column",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_scrollRowToCenter:": {
      "name": "_scrollRowToCenter:",
      "bridgedName": "_scrollRowToCenter",
      "args": [
        {
          "name": "_scrollRowToCenter",
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_toolTipManagerWillRecomputeToolTipsByRemoving:adding:": {
      "name": "_toolTipManagerWillRecomputeToolTipsByRemoving:adding:",
      "bridgedName": "_toolTipManagerWillRecomputeToolTipsByRemoving_adding",
      "args": [
        {
          "name": "_toolTipManagerWillRecomputeToolTipsByRemoving",
          "type": "BOOL"
        },
        {
          "name": "adding",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawContextMenuHighlightForCellIndexes:": {
      "name": "drawContextMenuHighlightForCellIndexes:",
      "bridgedName": "drawContextMenuHighlightForCellIndexes",
      "args": [
        {
          "name": "drawContextMenuHighlightForCellIndexes",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_shouldDrawContextMenuHighlightForRow:column:": {
      "name": "_shouldDrawContextMenuHighlightForRow:column:",
      "bridgedName": "_shouldDrawContextMenuHighlightForRow_column",
      "args": [
        {
          "name": "_shouldDrawContextMenuHighlightForRow",
          "type": "long long"
        },
        {
          "name": "column",
          "type": "long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawRect:": {
      "name": "drawRect:",
      "bridgedName": "drawRect",
      "args": [
        {
          "name": "drawRect",
          "type": "struct CGRect"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_drawCellAtRow:column:inFrame:": {
      "name": "_drawCellAtRow:column:inFrame:",
      "bridgedName": "_drawCellAtRow_column_inFrame",
      "args": [
        {
          "name": "_drawCellAtRow",
          "type": "long long"
        },
        {
          "name": "column",
          "type": "long long"
        },
        {
          "name": "inFrame",
          "type": "struct CGRect"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setNeedsDisplayInRect:": {
      "name": "setNeedsDisplayInRect:",
      "bridgedName": "setNeedsDisplayInRect",
      "args": [
        {
          "name": "setNeedsDisplayInRect",
          "type": "struct CGRect"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_propagateDownNeedsDisplayInRect:": {
      "name": "_propagateDownNeedsDisplayInRect:",
      "bridgedName": "_propagateDownNeedsDisplayInRect",
      "args": [
        {
          "name": "_propagateDownNeedsDisplayInRect",
          "type": "struct CGRect"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_liveResizeHighlightSelectionInClipRect:": {
      "name": "_liveResizeHighlightSelectionInClipRect:",
      "bridgedName": "_liveResizeHighlightSelectionInClipRect",
      "args": [
        {
          "name": "_liveResizeHighlightSelectionInClipRect",
          "type": "struct CGRect"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_getRowRange:andColumnRange:intersectingRect:": {
      "name": "_getRowRange:andColumnRange:intersectingRect:",
      "bridgedName": "_getRowRange_andColumnRange_intersectingRect",
      "args": [
        {
          "name": "_getRowRange",
          "type": "struct _NSRange *"
        },
        {
          "name": "andColumnRange",
          "type": "struct _NSRange *"
        },
        {
          "name": "intersectingRect",
          "type": "struct CGRect"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_selectFirstEnabledCell": {
      "name": "_selectFirstEnabledCell",
      "bridgedName": "_selectFirstEnabledCell",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_firstSelectableRow": {
      "name": "_firstSelectableRow",
      "bridgedName": "_firstSelectableRow",
      "args": [],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_removeAllCellMouseTracking": {
      "name": "_removeAllCellMouseTracking",
      "bridgedName": "_removeAllCellMouseTracking",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_clearMouseTrackingForCell:": {
      "name": "_clearMouseTrackingForCell:",
      "bridgedName": "_clearMouseTrackingForCell",
      "args": [
        {
          "name": "_clearMouseTrackingForCell",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setMouseTrackingForCell:": {
      "name": "_setMouseTrackingForCell:",
      "bridgedName": "_setMouseTrackingForCell",
      "args": [
        {
          "name": "_setMouseTrackingForCell",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "updateTrackingAreas": {
      "name": "updateTrackingAreas",
      "bridgedName": "updateTrackingAreas",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "highlightCell:atRow:column:": {
      "name": "highlightCell:atRow:column:",
      "bridgedName": "highlightCell_atRow_column",
      "args": [
        {
          "name": "highlightCell",
          "type": "BOOL"
        },
        {
          "name": "atRow",
          "type": "long long"
        },
        {
          "name": "column",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_highlightCell:atRow:column:andDraw:": {
      "name": "_highlightCell:atRow:column:andDraw:",
      "bridgedName": "_highlightCell_atRow_column_andDraw",
      "args": [
        {
          "name": "_highlightCell",
          "type": "BOOL"
        },
        {
          "name": "atRow",
          "type": "long long"
        },
        {
          "name": "column",
          "type": "long long"
        },
        {
          "name": "andDraw",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawCellAtRow:column:": {
      "name": "drawCellAtRow:column:",
      "bridgedName": "drawCellAtRow_column",
      "args": [
        {
          "name": "drawCellAtRow",
          "type": "long long"
        },
        {
          "name": "column",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_drawCellAt:col:insideOnly:": {
      "name": "_drawCellAt:col:insideOnly:",
      "bridgedName": "_drawCellAt_col_insideOnly",
      "args": [
        {
          "name": "_drawCellAt",
          "type": "long long"
        },
        {
          "name": "col",
          "type": "long long"
        },
        {
          "name": "insideOnly",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawCellInside:": {
      "name": "drawCellInside:",
      "bridgedName": "drawCellInside",
      "args": [
        {
          "name": "drawCellInside",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "updateCellInside:": {
      "name": "updateCellInside:",
      "bridgedName": "updateCellInside",
      "args": [
        {
          "name": "updateCellInside",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_updateCellImage:": {
      "name": "_updateCellImage:",
      "bridgedName": "_updateCellImage",
      "args": [
        {
          "name": "_updateCellImage",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "invalidateIntrinsicContentSizeForCell:": {
      "name": "invalidateIntrinsicContentSizeForCell:",
      "bridgedName": "invalidateIntrinsicContentSizeForCell",
      "args": [
        {
          "name": "invalidateIntrinsicContentSizeForCell",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "updateCell:": {
      "name": "updateCell:",
      "bridgedName": "updateCell",
      "args": [
        {
          "name": "updateCell",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setNeedsDisplayForSelectedCells": {
      "name": "_setNeedsDisplayForSelectedCells",
      "bridgedName": "_setNeedsDisplayForSelectedCells",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_getVisibleRowRange:columnRange:": {
      "name": "_getVisibleRowRange:columnRange:",
      "bridgedName": "_getVisibleRowRange_columnRange",
      "args": [
        {
          "name": "_getVisibleRowRange",
          "type": "struct _NSRange *"
        },
        {
          "name": "columnRange",
          "type": "struct _NSRange *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setNeedsDisplayInRow:column:": {
      "name": "_setNeedsDisplayInRow:column:",
      "bridgedName": "_setNeedsDisplayInRow_column",
      "args": [
        {
          "name": "_setNeedsDisplayInRow",
          "type": "long long"
        },
        {
          "name": "column",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawFocusRingMask": {
      "name": "drawFocusRingMask",
      "bridgedName": "drawFocusRingMask",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "focusRingMaskBounds": {
      "name": "focusRingMaskBounds",
      "bridgedName": "focusRingMaskBounds",
      "args": [],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawCell:": {
      "name": "drawCell:",
      "bridgedName": "drawCell",
      "args": [
        {
          "name": "drawCell",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "calcSize": {
      "name": "calcSize",
      "bridgedName": "calcSize",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setValidateSize:": {
      "name": "setValidateSize:",
      "bridgedName": "setValidateSize",
      "args": [
        {
          "name": "setValidateSize",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "sizeToFit": {
      "name": "sizeToFit",
      "bridgedName": "sizeToFit",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "sizeToCells": {
      "name": "sizeToCells",
      "bridgedName": "sizeToCells",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "intrinsicContentSize": {
      "name": "intrinsicContentSize",
      "bridgedName": "intrinsicContentSize",
      "args": [],
      "returns": "struct CGSize",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "updateConstraints": {
      "name": "updateConstraints",
      "bridgedName": "updateConstraints",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_autorecalculateCellSize": {
      "name": "_autorecalculateCellSize",
      "bridgedName": "_autorecalculateCellSize",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setFrameSize:": {
      "name": "setFrameSize:",
      "bridgedName": "setFrameSize",
      "args": [
        {
          "name": "setFrameSize",
          "type": "struct CGSize"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "resizeWithOldSuperviewSize:": {
      "name": "resizeWithOldSuperviewSize:",
      "bridgedName": "resizeWithOldSuperviewSize",
      "args": [
        {
          "name": "resizeWithOldSuperviewSize",
          "type": "struct CGSize"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "resetCursorRects": {
      "name": "resetCursorRects",
      "bridgedName": "resetCursorRects",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_recursiveWindowDidEnableToolTipCreationAndDisplay": {
      "name": "_recursiveWindowDidEnableToolTipCreationAndDisplay",
      "bridgedName": "_recursiveWindowDidEnableToolTipCreationAndDisplay",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_computeAllRevealovers": {
      "name": "_computeAllRevealovers",
      "bridgedName": "_computeAllRevealovers",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "viewDidEndLiveResize": {
      "name": "viewDidEndLiveResize",
      "bridgedName": "viewDidEndLiveResize",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "view:stringForToolTip:point:userData:": {
      "name": "view:stringForToolTip:point:userData:",
      "bridgedName": "view_stringForToolTip_point_userData",
      "args": [
        {
          "name": "view",
          "type": "id"
        },
        {
          "name": "stringForToolTip",
          "type": "long long"
        },
        {
          "name": "point",
          "type": "struct CGPoint"
        },
        {
          "name": "userData",
          "type": "void *"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setTag:target:action:atRow:column:": {
      "name": "setTag:target:action:atRow:column:",
      "bridgedName": "setTag_target_action_atRow_column",
      "args": [
        {
          "name": "setTag",
          "type": "long long"
        },
        {
          "name": "target",
          "type": "id"
        },
        {
          "name": "action",
          "type": "SEL"
        },
        {
          "name": "atRow",
          "type": "long long"
        },
        {
          "name": "column",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setAction:atRow:column:": {
      "name": "setAction:atRow:column:",
      "bridgedName": "setAction_atRow_column",
      "args": [
        {
          "name": "setAction",
          "type": "SEL"
        },
        {
          "name": "atRow",
          "type": "long long"
        },
        {
          "name": "column",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setTarget:atRow:column:": {
      "name": "setTarget:atRow:column:",
      "bridgedName": "setTarget_atRow_column",
      "args": [
        {
          "name": "setTarget",
          "type": "id"
        },
        {
          "name": "atRow",
          "type": "long long"
        },
        {
          "name": "column",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_shouldDelegateTargetActionForSelector:": {
      "name": "_shouldDelegateTargetActionForSelector:",
      "bridgedName": "_shouldDelegateTargetActionForSelector",
      "args": [
        {
          "name": "_shouldDelegateTargetActionForSelector",
          "type": "SEL"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setTag:atRow:column:": {
      "name": "setTag:atRow:column:",
      "bridgedName": "setTag_atRow_column",
      "args": [
        {
          "name": "setTag",
          "type": "long long"
        },
        {
          "name": "atRow",
          "type": "long long"
        },
        {
          "name": "column",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "cellWithTag:": {
      "name": "cellWithTag:",
      "bridgedName": "cellWithTag",
      "args": [
        {
          "name": "cellWithTag",
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "removeColumn:": {
      "name": "removeColumn:",
      "bridgedName": "removeColumn",
      "args": [
        {
          "name": "removeColumn",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "insertColumn:withCells:": {
      "name": "insertColumn:withCells:",
      "bridgedName": "insertColumn_withCells",
      "args": [
        {
          "name": "insertColumn",
          "type": "long long"
        },
        {
          "name": "withCells",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_needsDisplayfromColumn:": {
      "name": "_needsDisplayfromColumn:",
      "bridgedName": "_needsDisplayfromColumn",
      "args": [
        {
          "name": "_needsDisplayfromColumn",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "insertColumn:": {
      "name": "insertColumn:",
      "bridgedName": "insertColumn",
      "args": [
        {
          "name": "insertColumn",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "addColumnWithCells:": {
      "name": "addColumnWithCells:",
      "bridgedName": "addColumnWithCells",
      "args": [
        {
          "name": "addColumnWithCells",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "addColumn": {
      "name": "addColumn",
      "bridgedName": "addColumn",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "removeRow:": {
      "name": "removeRow:",
      "bridgedName": "removeRow",
      "args": [
        {
          "name": "removeRow",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "insertRow:withCells:": {
      "name": "insertRow:withCells:",
      "bridgedName": "insertRow_withCells",
      "args": [
        {
          "name": "insertRow",
          "type": "long long"
        },
        {
          "name": "withCells",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_needsDisplayfromRow:": {
      "name": "_needsDisplayfromRow:",
      "bridgedName": "_needsDisplayfromRow",
      "args": [
        {
          "name": "_needsDisplayfromRow",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "insertRow:": {
      "name": "insertRow:",
      "bridgedName": "insertRow",
      "args": [
        {
          "name": "insertRow",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "addRowWithCells:": {
      "name": "addRowWithCells:",
      "bridgedName": "addRowWithCells",
      "args": [
        {
          "name": "addRowWithCells",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "addRow": {
      "name": "addRow",
      "bridgedName": "addRow",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "putCell:atRow:column:": {
      "name": "putCell:atRow:column:",
      "bridgedName": "putCell_atRow_column",
      "args": [
        {
          "name": "putCell",
          "type": "id"
        },
        {
          "name": "atRow",
          "type": "long long"
        },
        {
          "name": "column",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "renewRows:columns:": {
      "name": "renewRows:columns:",
      "bridgedName": "renewRows_columns",
      "args": [
        {
          "name": "renewRows",
          "type": "long long"
        },
        {
          "name": "columns",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_getRow:column:nearPoint:": {
      "name": "_getRow:column:nearPoint:",
      "bridgedName": "_getRow_column_nearPoint",
      "args": [
        {
          "name": "_getRow",
          "type": "long long *"
        },
        {
          "name": "column",
          "type": "long long *"
        },
        {
          "name": "nearPoint",
          "type": "struct CGPoint"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "getRow:column:forPoint:": {
      "name": "getRow:column:forPoint:",
      "bridgedName": "getRow_column_forPoint",
      "args": [
        {
          "name": "getRow",
          "type": "long long *"
        },
        {
          "name": "column",
          "type": "long long *"
        },
        {
          "name": "forPoint",
          "type": "struct CGPoint"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "getRow:column:ofCell:": {
      "name": "getRow:column:ofCell:",
      "bridgedName": "getRow_column_ofCell",
      "args": [
        {
          "name": "getRow",
          "type": "long long *"
        },
        {
          "name": "column",
          "type": "long long *"
        },
        {
          "name": "ofCell",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_getRow:andCol:ofCell:atRect:": {
      "name": "_getRow:andCol:ofCell:atRect:",
      "bridgedName": "_getRow_andCol_ofCell_atRect",
      "args": [
        {
          "name": "_getRow",
          "type": "long long *"
        },
        {
          "name": "andCol",
          "type": "long long *"
        },
        {
          "name": "ofCell",
          "type": "id"
        },
        {
          "name": "atRect",
          "type": "const struct CGRect *"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_getDrawingRow:andCol:": {
      "name": "_getDrawingRow:andCol:",
      "bridgedName": "_getDrawingRow_andCol",
      "args": [
        {
          "name": "_getDrawingRow",
          "type": "long long *"
        },
        {
          "name": "andCol",
          "type": "long long *"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_boundsRectOccupiedByCells": {
      "name": "_boundsRectOccupiedByCells",
      "bridgedName": "_boundsRectOccupiedByCells",
      "args": [],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "cellFrameAtRow:column:": {
      "name": "cellFrameAtRow:column:",
      "bridgedName": "cellFrameAtRow_column",
      "args": [
        {
          "name": "cellFrameAtRow",
          "type": "long long"
        },
        {
          "name": "column",
          "type": "long long"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "cellAtRow:column:": {
      "name": "cellAtRow:column:",
      "bridgedName": "cellAtRow_column",
      "args": [
        {
          "name": "cellAtRow",
          "type": "long long"
        },
        {
          "name": "column",
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "getNumberOfRows:columns:": {
      "name": "getNumberOfRows:columns:",
      "bridgedName": "getNumberOfRows_columns",
      "args": [
        {
          "name": "getNumberOfRows",
          "type": "long long *"
        },
        {
          "name": "columns",
          "type": "long long *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setState:atRow:column:": {
      "name": "setState:atRow:column:",
      "bridgedName": "setState_atRow_column",
      "args": [
        {
          "name": "setState",
          "type": "long long"
        },
        {
          "name": "atRow",
          "type": "long long"
        },
        {
          "name": "column",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setFont:": {
      "name": "setFont:",
      "bridgedName": "setFont",
      "args": [
        {
          "name": "setFont",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "font": {
      "name": "font",
      "bridgedName": "font",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setScrollable:": {
      "name": "setScrollable:",
      "bridgedName": "setScrollable",
      "args": [
        {
          "name": "setScrollable",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setEnabled:": {
      "name": "setEnabled:",
      "bridgedName": "setEnabled",
      "args": [
        {
          "name": "setEnabled",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "selectCellWithTag:": {
      "name": "selectCellWithTag:",
      "bridgedName": "selectCellWithTag",
      "args": [
        {
          "name": "selectCellWithTag",
          "type": "long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "selectCell:": {
      "name": "selectCell:",
      "bridgedName": "selectCell",
      "args": [
        {
          "name": "selectCell",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "selectAll:": {
      "name": "selectAll:",
      "bridgedName": "selectAll",
      "args": [
        {
          "name": "selectAll",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_selectAllNoRecurse:": {
      "name": "_selectAllNoRecurse:",
      "bridgedName": "_selectAllNoRecurse",
      "args": [
        {
          "name": "_selectAllNoRecurse",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "selectCellAtRow:column:": {
      "name": "selectCellAtRow:column:",
      "bridgedName": "selectCellAtRow_column",
      "args": [
        {
          "name": "selectCellAtRow",
          "type": "long long"
        },
        {
          "name": "column",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "deselectAllCells": {
      "name": "deselectAllCells",
      "bridgedName": "deselectAllCells",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "deselectSelectedCell": {
      "name": "deselectSelectedCell",
      "bridgedName": "deselectSelectedCell",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_clearSelectedCell": {
      "name": "_clearSelectedCell",
      "bridgedName": "_clearSelectedCell",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "sortUsingSelector:": {
      "name": "sortUsingSelector:",
      "bridgedName": "sortUsingSelector",
      "args": [
        {
          "name": "sortUsingSelector",
          "type": "SEL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "sortUsingFunction:context:": {
      "name": "sortUsingFunction:context:",
      "bridgedName": "sortUsingFunction_context",
      "args": [
        {
          "name": "sortUsingFunction",
          "type": "CDUnknownFunctionPointerType"
        },
        {
          "name": "context",
          "type": "void *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "sendAction:to:forAllCells:": {
      "name": "sendAction:to:forAllCells:",
      "bridgedName": "sendAction_to_forAllCells",
      "args": [
        {
          "name": "sendAction",
          "type": "SEL"
        },
        {
          "name": "to",
          "type": "id"
        },
        {
          "name": "forAllCells",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "allowEmptySel:": {
      "name": "allowEmptySel:",
      "bridgedName": "allowEmptySel",
      "args": [
        {
          "name": "allowEmptySel",
          "type": "BOOL"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_isRTL": {
      "name": "_isRTL",
      "bridgedName": "_isRTL",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isFlipped": {
      "name": "isFlipped",
      "bridgedName": "isFlipped",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isOpaque": {
      "name": "isOpaque",
      "bridgedName": "isOpaque",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "makeCellAtRow:column:": {
      "name": "makeCellAtRow:column:",
      "bridgedName": "makeCellAtRow_column",
      "args": [
        {
          "name": "makeCellAtRow",
          "type": "long long"
        },
        {
          "name": "column",
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_containedInSingleColumnClipView": {
      "name": "_containedInSingleColumnClipView",
      "bridgedName": "_containedInSingleColumnClipView",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithFrame:mode:cellClass:numberOfRows:numberOfColumns:": {
      "name": "initWithFrame:mode:cellClass:numberOfRows:numberOfColumns:",
      "bridgedName": "initWithFrame_mode_cellClass_numberOfRows_numberOfColumns",
      "args": [
        {
          "name": "initWithFrame",
          "type": "struct CGRect"
        },
        {
          "name": "mode",
          "type": "unsigned long long"
        },
        {
          "name": "cellClass",
          "type": "Class"
        },
        {
          "name": "numberOfRows",
          "type": "long long"
        },
        {
          "name": "numberOfColumns",
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithFrame:mode:prototype:numberOfRows:numberOfColumns:": {
      "name": "initWithFrame:mode:prototype:numberOfRows:numberOfColumns:",
      "bridgedName": "initWithFrame_mode_prototype_numberOfRows_numberOfColumns",
      "args": [
        {
          "name": "initWithFrame",
          "type": "struct CGRect"
        },
        {
          "name": "mode",
          "type": "unsigned long long"
        },
        {
          "name": "prototype",
          "type": "id"
        },
        {
          "name": "numberOfRows",
          "type": "long long"
        },
        {
          "name": "numberOfColumns",
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithFrame:": {
      "name": "initWithFrame:",
      "bridgedName": "initWithFrame",
      "args": [
        {
          "name": "initWithFrame",
          "type": "struct CGRect"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_initialize:long)arg2:": {
      "name": "_initialize:long)arg2:",
      "bridgedName": "_initialize_long)arg2",
      "args": [
        {
          "name": "_initialize",
          "type": "long long"
        },
        {
          "name": "long)arg2",
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_maintainCell": {
      "name": "_maintainCell",
      "bridgedName": "_maintainCell",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setSelectedCell:": {
      "name": "_setSelectedCell:",
      "bridgedName": "_setSelectedCell",
      "args": [
        {
          "name": "_setSelectedCell",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setSelectedCell:atRow:column:": {
      "name": "_setSelectedCell:atRow:column:",
      "bridgedName": "_setSelectedCell_atRow_column",
      "args": [
        {
          "name": "_setSelectedCell",
          "type": "id"
        },
        {
          "name": "atRow",
          "type": "long long"
        },
        {
          "name": "column",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setFont:forCell:": {
      "name": "_setFont:forCell:",
      "bridgedName": "_setFont_forCell",
      "args": [
        {
          "name": "_setFont",
          "type": "id"
        },
        {
          "name": "forCell",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_allocAndInitPrivateIvars": {
      "name": "_allocAndInitPrivateIvars",
      "bridgedName": "_allocAndInitPrivateIvars",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setErrorAction:": {
      "name": "setErrorAction:",
      "bridgedName": "setErrorAction",
      "args": [
        {
          "name": "setErrorAction",
          "type": "SEL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "errorAction": {
      "name": "errorAction",
      "bridgedName": "errorAction",
      "args": [],
      "returns": "SEL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_isAccessibilityTopLevelNavigatorSectionCandidate": {
      "name": "_isAccessibilityTopLevelNavigatorSectionCandidate",
      "bridgedName": "_isAccessibilityTopLevelNavigatorSectionCandidate",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_isAccessibilityContentNavigatorSectionCandidate": {
      "name": "_isAccessibilityContentNavigatorSectionCandidate",
      "bridgedName": "_isAccessibilityContentNavigatorSectionCandidate",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilitySizeOfChild:": {
      "name": "accessibilitySizeOfChild:",
      "bridgedName": "accessibilitySizeOfChild",
      "args": [
        {
          "name": "accessibilitySizeOfChild",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityPositionOfChild:": {
      "name": "accessibilityPositionOfChild:",
      "bridgedName": "accessibilityPositionOfChild",
      "args": [
        {
          "name": "accessibilityPositionOfChild",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilitySetFocus:forChild:": {
      "name": "accessibilitySetFocus:forChild:",
      "bridgedName": "accessibilitySetFocus_forChild",
      "args": [
        {
          "name": "accessibilitySetFocus",
          "type": "id"
        },
        {
          "name": "forChild",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityIsChildFocusable:": {
      "name": "accessibilityIsChildFocusable:",
      "bridgedName": "accessibilityIsChildFocusable",
      "args": [
        {
          "name": "accessibilityIsChildFocusable",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityHelpStringForChild:": {
      "name": "accessibilityHelpStringForChild:",
      "bridgedName": "accessibilityHelpStringForChild",
      "args": [
        {
          "name": "accessibilityHelpStringForChild",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityFocusedUIElement": {
      "name": "accessibilityFocusedUIElement",
      "bridgedName": "accessibilityFocusedUIElement",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityHitTest:": {
      "name": "accessibilityHitTest:",
      "bridgedName": "accessibilityHitTest",
      "args": [
        {
          "name": "accessibilityHitTest",
          "type": "struct CGPoint"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityIsVisibleChildrenAttributeSettable": {
      "name": "accessibilityIsVisibleChildrenAttributeSettable",
      "bridgedName": "accessibilityIsVisibleChildrenAttributeSettable",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityVisibleChildrenAttribute": {
      "name": "accessibilityVisibleChildrenAttribute",
      "bridgedName": "accessibilityVisibleChildrenAttribute",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityIsValueAttributeSettable": {
      "name": "accessibilityIsValueAttributeSettable",
      "bridgedName": "accessibilityIsValueAttributeSettable",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityValueAttribute": {
      "name": "accessibilityValueAttribute",
      "bridgedName": "accessibilityValueAttribute",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilitySetSelectedChildrenAttribute:": {
      "name": "accessibilitySetSelectedChildrenAttribute:",
      "bridgedName": "accessibilitySetSelectedChildrenAttribute",
      "args": [
        {
          "name": "accessibilitySetSelectedChildrenAttribute",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityIsSelectedChildrenAttributeSettable": {
      "name": "accessibilityIsSelectedChildrenAttributeSettable",
      "bridgedName": "accessibilityIsSelectedChildrenAttributeSettable",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilitySelectedChildrenAttribute": {
      "name": "accessibilitySelectedChildrenAttribute",
      "bridgedName": "accessibilitySelectedChildrenAttribute",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityArrayAttributeValues:index:maxCount:": {
      "name": "accessibilityArrayAttributeValues:index:maxCount:",
      "bridgedName": "accessibilityArrayAttributeValues_index_maxCount",
      "args": [
        {
          "name": "accessibilityArrayAttributeValues",
          "type": "id"
        },
        {
          "name": "index",
          "type": "unsigned long long"
        },
        {
          "name": "maxCount",
          "type": "unsigned long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityArrayAttributeCount:": {
      "name": "accessibilityArrayAttributeCount:",
      "bridgedName": "accessibilityArrayAttributeCount",
      "args": [
        {
          "name": "accessibilityArrayAttributeCount",
          "type": "id"
        }
      ],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityIndexOfChild:": {
      "name": "accessibilityIndexOfChild:",
      "bridgedName": "accessibilityIndexOfChild",
      "args": [
        {
          "name": "accessibilityIndexOfChild",
          "type": "id"
        }
      ],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityIsOrientationAttributeSettable": {
      "name": "accessibilityIsOrientationAttributeSettable",
      "bridgedName": "accessibilityIsOrientationAttributeSettable",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityOrientationAttribute": {
      "name": "accessibilityOrientationAttribute",
      "bridgedName": "accessibilityOrientationAttribute",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityChildrenAttribute": {
      "name": "accessibilityChildrenAttribute",
      "bridgedName": "accessibilityChildrenAttribute",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessiblityChildCells": {
      "name": "accessiblityChildCells",
      "bridgedName": "accessiblityChildCells",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityIsFocusedAttributeSettable": {
      "name": "accessibilityIsFocusedAttributeSettable",
      "bridgedName": "accessibilityIsFocusedAttributeSettable",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_accessibilityLoadBrowserCellsAtRow:count:": {
      "name": "_accessibilityLoadBrowserCellsAtRow:count:",
      "bridgedName": "_accessibilityLoadBrowserCellsAtRow_count",
      "args": [
        {
          "name": "_accessibilityLoadBrowserCellsAtRow",
          "type": "long long"
        },
        {
          "name": "count",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_accessibilityCorrectlyParentedCells:": {
      "name": "_accessibilityCorrectlyParentedCells:",
      "bridgedName": "_accessibilityCorrectlyParentedCells",
      "args": [
        {
          "name": "_accessibilityCorrectlyParentedCells",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityRoleAttribute": {
      "name": "accessibilityRoleAttribute",
      "bridgedName": "accessibilityRoleAttribute",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityAttributeNames": {
      "name": "accessibilityAttributeNames",
      "bridgedName": "accessibilityAttributeNames",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_accessibilityIsRadioGroup": {
      "name": "_accessibilityIsRadioGroup",
      "bridgedName": "_accessibilityIsRadioGroup",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityCurrentEditorForCell:": {
      "name": "accessibilityCurrentEditorForCell:",
      "bridgedName": "accessibilityCurrentEditorForCell",
      "args": [
        {
          "name": "accessibilityCurrentEditorForCell",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "mouseDownFlags": {
      "name": "mouseDownFlags",
      "pointer": false,
      "type": "long long",
      "attributes": [
        "readonly"
      ]
    },
    "autoscroll": {
      "name": "autoscroll",
      "pointer": false,
      "type": "BOOL",
      "attributes": [
        "getter=isAutoscroll"
      ]
    },
    "numberOfColumns": {
      "name": "numberOfColumns",
      "pointer": false,
      "type": "long long",
      "attributes": [
        "readonly"
      ]
    },
    "numberOfRows": {
      "name": "numberOfRows",
      "pointer": false,
      "type": "long long",
      "attributes": [
        "readonly"
      ]
    },
    "cellBackgroundColor": {
      "name": "cellBackgroundColor",
      "pointer": true,
      "type": "NSColor",
      "attributes": [
        "copy"
      ]
    },
    "backgroundColor": {
      "name": "backgroundColor",
      "pointer": true,
      "type": "NSColor",
      "attributes": [
        "copy"
      ]
    },
    "selectionByRect": {
      "name": "selectionByRect",
      "pointer": false,
      "type": "BOOL",
      "attributes": [
        "getter=isSelectionByRect"
      ]
    },
    "selectedColumn": {
      "name": "selectedColumn",
      "pointer": false,
      "type": "long long",
      "attributes": [
        "readonly"
      ]
    },
    "selectedRow": {
      "name": "selectedRow",
      "pointer": false,
      "type": "long long",
      "attributes": [
        "readonly"
      ]
    },
    "selectedCells": {
      "name": "selectedCells",
      "pointer": true,
      "type": "NSArray",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "selectedCell": {
      "name": "selectedCell",
      "pointer": true,
      "type": "NSCell",
      "attributes": [
        "readonly"
      ]
    },
    "cells": {
      "name": "cells",
      "pointer": true,
      "type": "NSArray",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "prototype": {
      "name": "prototype",
      "pointer": true,
      "type": "NSCell",
      "attributes": [
        "copy"
      ]
    }
  }
}