{
  "imports": [
    "NSObject.h"
  ],
  "classes": [
    "NSEvent",
    "NSImage",
    "NSMenu",
    "NSString",
    "NSTabBar",
    "NSTabBarItem",
    "NSWindow"
  ],
  "protocol": true,
  "className": "NSTabBarDelegate",
  "interfaces": [],
  "methods": {
    "tabBar:acceptDrop:index:": {
      "name": "tabBar:acceptDrop:index:",
      "bridgedName": "tabBar_acceptDrop_index",
      "args": [
        {
          "name": "tabBar",
          "type": "NSTabBar *"
        },
        {
          "name": "acceptDrop",
          "type": "id <NSDraggingInfo>"
        },
        {
          "name": "index",
          "type": "unsigned long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tabBar:validateDrop:": {
      "name": "tabBar:validateDrop:",
      "bridgedName": "tabBar_validateDrop",
      "args": [
        {
          "name": "tabBar",
          "type": "NSTabBar *"
        },
        {
          "name": "validateDrop",
          "type": "id <NSDraggingInfo>"
        }
      ],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tabBar:didFinishTransitionAnimationForWindow:": {
      "name": "tabBar:didFinishTransitionAnimationForWindow:",
      "bridgedName": "tabBar_didFinishTransitionAnimationForWindow",
      "args": [
        {
          "name": "tabBar",
          "type": "NSTabBar *"
        },
        {
          "name": "didFinishTransitionAnimationForWindow",
          "type": "NSWindow *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tabBar:destinationWindowForDetachedTabBarViewItem:": {
      "name": "tabBar:destinationWindowForDetachedTabBarViewItem:",
      "bridgedName": "tabBar_destinationWindowForDetachedTabBarViewItem",
      "args": [
        {
          "name": "tabBar",
          "type": "NSTabBar *"
        },
        {
          "name": "destinationWindowForDetachedTabBarViewItem",
          "type": "NSTabBarItem *"
        }
      ],
      "returns": "NSWindow *",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tabBar:detachedWindowImageForDraggedTabBarViewItem:": {
      "name": "tabBar:detachedWindowImageForDraggedTabBarViewItem:",
      "bridgedName": "tabBar_detachedWindowImageForDraggedTabBarViewItem",
      "args": [
        {
          "name": "tabBar",
          "type": "NSTabBar *"
        },
        {
          "name": "detachedWindowImageForDraggedTabBarViewItem",
          "type": "NSTabBarItem *"
        }
      ],
      "returns": "NSImage *",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tabBar:acceptTabDrop:index:": {
      "name": "tabBar:acceptTabDrop:index:",
      "bridgedName": "tabBar_acceptTabDrop_index",
      "args": [
        {
          "name": "tabBar",
          "type": "NSTabBar *"
        },
        {
          "name": "acceptTabDrop",
          "type": "id <NSTabDraggingInfo>"
        },
        {
          "name": "index",
          "type": "unsigned long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tabBar:validateTabDrop:": {
      "name": "tabBar:validateTabDrop:",
      "bridgedName": "tabBar_validateTabDrop",
      "args": [
        {
          "name": "tabBar",
          "type": "NSTabBar *"
        },
        {
          "name": "validateTabDrop",
          "type": "id <NSTabDraggingInfo>"
        }
      ],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tabBar:menuForTabBarViewItem:event:": {
      "name": "tabBar:menuForTabBarViewItem:event:",
      "bridgedName": "tabBar_menuForTabBarViewItem_event",
      "args": [
        {
          "name": "tabBar",
          "type": "NSTabBar *"
        },
        {
          "name": "menuForTabBarViewItem",
          "type": "NSTabBarItem *"
        },
        {
          "name": "event",
          "type": "NSEvent *"
        }
      ],
      "returns": "NSMenu *",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tabBar:didMoveTabBarViewItem:fromIndex:toIndex:isChangingPinnedness:": {
      "name": "tabBar:didMoveTabBarViewItem:fromIndex:toIndex:isChangingPinnedness:",
      "bridgedName": "tabBar_didMoveTabBarViewItem_fromIndex_toIndex_isChangingPinnedness",
      "args": [
        {
          "name": "tabBar",
          "type": "NSTabBar *"
        },
        {
          "name": "didMoveTabBarViewItem",
          "type": "NSTabBarItem *"
        },
        {
          "name": "fromIndex",
          "type": "unsigned long long"
        },
        {
          "name": "toIndex",
          "type": "unsigned long long"
        },
        {
          "name": "isChangingPinnedness",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tabBar:closeTabBarViewItem:": {
      "name": "tabBar:closeTabBarViewItem:",
      "bridgedName": "tabBar_closeTabBarViewItem",
      "args": [
        {
          "name": "tabBar",
          "type": "NSTabBar *"
        },
        {
          "name": "closeTabBarViewItem",
          "type": "NSTabBarItem *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "selectedTabBarViewItemAfterClosingCurrentTabInTabBar:": {
      "name": "selectedTabBarViewItemAfterClosingCurrentTabInTabBar:",
      "bridgedName": "selectedTabBarViewItemAfterClosingCurrentTabInTabBar",
      "args": [
        {
          "name": "selectedTabBarViewItemAfterClosingCurrentTabInTabBar",
          "type": "NSTabBar *"
        }
      ],
      "returns": "NSTabBarItem *",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tabBar:selectTabBarViewItem:": {
      "name": "tabBar:selectTabBarViewItem:",
      "bridgedName": "tabBar_selectTabBarViewItem",
      "args": [
        {
          "name": "tabBar",
          "type": "NSTabBar *"
        },
        {
          "name": "selectTabBarViewItem",
          "type": "NSTabBarItem *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "createNewTabInTabBar:": {
      "name": "createNewTabInTabBar:",
      "bridgedName": "createNewTabInTabBar",
      "args": [
        {
          "name": "createNewTabInTabBar",
          "type": "NSTabBar *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tabBar:showWindowForDraggingItemAtIndex:": {
      "name": "tabBar:showWindowForDraggingItemAtIndex:",
      "bridgedName": "tabBar_showWindowForDraggingItemAtIndex",
      "args": [
        {
          "name": "tabBar",
          "type": "NSTabBar *"
        },
        {
          "name": "showWindowForDraggingItemAtIndex",
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tabBar:hideWindowForDraggingItemAtIndex:": {
      "name": "tabBar:hideWindowForDraggingItemAtIndex:",
      "bridgedName": "tabBar_hideWindowForDraggingItemAtIndex",
      "args": [
        {
          "name": "tabBar",
          "type": "NSTabBar *"
        },
        {
          "name": "hideWindowForDraggingItemAtIndex",
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tabBar:canCloseTabBarViewItem:": {
      "name": "tabBar:canCloseTabBarViewItem:",
      "bridgedName": "tabBar_canCloseTabBarViewItem",
      "args": [
        {
          "name": "tabBar",
          "type": "NSTabBar *"
        },
        {
          "name": "canCloseTabBarViewItem",
          "type": "NSTabBarItem *"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "placeholderTextInEmptyUnpinnedRegionOfTabBar:": {
      "name": "placeholderTextInEmptyUnpinnedRegionOfTabBar:",
      "bridgedName": "placeholderTextInEmptyUnpinnedRegionOfTabBar",
      "args": [
        {
          "name": "placeholderTextInEmptyUnpinnedRegionOfTabBar",
          "type": "NSTabBar *"
        }
      ],
      "returns": "NSString *",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tabBar:canDetachTabBarViewItem:": {
      "name": "tabBar:canDetachTabBarViewItem:",
      "bridgedName": "tabBar_canDetachTabBarViewItem",
      "args": [
        {
          "name": "tabBar",
          "type": "NSTabBar *"
        },
        {
          "name": "canDetachTabBarViewItem",
          "type": "NSTabBarItem *"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tabBar:canDragToPinTab:": {
      "name": "tabBar:canDragToPinTab:",
      "bridgedName": "tabBar_canDragToPinTab",
      "args": [
        {
          "name": "tabBar",
          "type": "NSTabBar *"
        },
        {
          "name": "canDragToPinTab",
          "type": "NSTabBarItem *"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tabBar:didBeginDraggingTab:": {
      "name": "tabBar:didBeginDraggingTab:",
      "bridgedName": "tabBar_didBeginDraggingTab",
      "args": [
        {
          "name": "tabBar",
          "type": "NSTabBar *"
        },
        {
          "name": "didBeginDraggingTab",
          "type": "NSTabBarItem *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tabBarCanDragItems:": {
      "name": "tabBarCanDragItems:",
      "bridgedName": "tabBarCanDragItems",
      "args": [
        {
          "name": "tabBarCanDragItems",
          "type": "NSTabBar *"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tabBar:droppedWindowTabShouldMoveToSpace:": {
      "name": "tabBar:droppedWindowTabShouldMoveToSpace:",
      "bridgedName": "tabBar_droppedWindowTabShouldMoveToSpace",
      "args": [
        {
          "name": "tabBar",
          "type": "NSTabBar *"
        },
        {
          "name": "droppedWindowTabShouldMoveToSpace",
          "type": "long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {}
}