{
  "imports": [],
  "classes": [
    "NSArray"
  ],
  "protocol": false,
  "className": "NSToolbarItemGroup",
  "extends": "NSToolbarItem",
  "interfaces": [],
  "methods": {
    "_menuFormRepresentationForOverflowMenu": {
      "name": "_menuFormRepresentationForOverflowMenu",
      "bridgedName": "_menuFormRepresentationForOverflowMenu",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "menuFormRepresentation": {
      "name": "menuFormRepresentation",
      "bridgedName": "menuFormRepresentation",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_selectableToolbarViews": {
      "name": "_selectableToolbarViews",
      "bridgedName": "_selectableToolbarViews",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_initialViewToSelectFromDirection:": {
      "name": "_initialViewToSelectFromDirection:",
      "bridgedName": "_initialViewToSelectFromDirection",
      "args": [
        {
          "name": "_initialViewToSelectFromDirection",
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_isEnabledAndHasEnabledSubitem": {
      "name": "_isEnabledAndHasEnabledSubitem",
      "bridgedName": "_isEnabledAndHasEnabledSubitem",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_buttonAtIndex:": {
      "name": "_buttonAtIndex:",
      "bridgedName": "_buttonAtIndex",
      "args": [
        {
          "name": "_buttonAtIndex",
          "type": "unsigned long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "invalidateLayout": {
      "name": "invalidateLayout",
      "bridgedName": "invalidateLayout",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_itemLayoutChanged": {
      "name": "_itemLayoutChanged",
      "bridgedName": "_itemLayoutChanged",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "configureForDisplayMode:andSizeMode:": {
      "name": "configureForDisplayMode:andSizeMode:",
      "bridgedName": "configureForDisplayMode_andSizeMode",
      "args": [
        {
          "name": "configureForDisplayMode",
          "type": "unsigned long long"
        },
        {
          "name": "andSizeMode",
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setItemViewer:": {
      "name": "_setItemViewer:",
      "bridgedName": "_setItemViewer",
      "args": [
        {
          "name": "_setItemViewer",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_collectItemRectsForViews:count:inBounds:controlBounds:": {
      "name": "_collectItemRectsForViews:count:inBounds:controlBounds:",
      "bridgedName": "_collectItemRectsForViews_count_inBounds_controlBounds",
      "args": [
        {
          "name": "_collectItemRectsForViews",
          "type": "struct CGRect *"
        },
        {
          "name": "count",
          "type": "unsigned long long"
        },
        {
          "name": "inBounds",
          "type": "struct CGRect"
        },
        {
          "name": "controlBounds",
          "type": "struct CGRect"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_collectItemRectsForViews:count:inBounds:": {
      "name": "_collectItemRectsForViews:count:inBounds:",
      "bridgedName": "_collectItemRectsForViews_count_inBounds",
      "args": [
        {
          "name": "_collectItemRectsForViews",
          "type": "struct CGRect *"
        },
        {
          "name": "count",
          "type": "unsigned long long"
        },
        {
          "name": "inBounds",
          "type": "struct CGRect"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_collectItemRectsForLabels:count:inBounds:controlBounds:": {
      "name": "_collectItemRectsForLabels:count:inBounds:controlBounds:",
      "bridgedName": "_collectItemRectsForLabels_count_inBounds_controlBounds",
      "args": [
        {
          "name": "_collectItemRectsForLabels",
          "type": "struct CGRect *"
        },
        {
          "name": "count",
          "type": "unsigned long long"
        },
        {
          "name": "inBounds",
          "type": "struct CGRect"
        },
        {
          "name": "controlBounds",
          "type": "struct CGRect"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_collectItemRectsForLabels:count:inBounds:": {
      "name": "_collectItemRectsForLabels:count:inBounds:",
      "bridgedName": "_collectItemRectsForLabels_count_inBounds",
      "args": [
        {
          "name": "_collectItemRectsForLabels",
          "type": "struct CGRect *"
        },
        {
          "name": "count",
          "type": "unsigned long long"
        },
        {
          "name": "inBounds",
          "type": "struct CGRect"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_viewIsEnabledAtIndex:": {
      "name": "_viewIsEnabledAtIndex:",
      "bridgedName": "_viewIsEnabledAtIndex",
      "args": [
        {
          "name": "_viewIsEnabledAtIndex",
          "type": "long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_itemAtViewIndex:": {
      "name": "_itemAtViewIndex:",
      "bridgedName": "_itemAtViewIndex",
      "args": [
        {
          "name": "_itemAtViewIndex",
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_itemAtLabelIndex:": {
      "name": "_itemAtLabelIndex:",
      "bridgedName": "_itemAtLabelIndex",
      "args": [
        {
          "name": "_itemAtLabelIndex",
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_applicableLabelsArrayForDisplayMode:isInPalette:": {
      "name": "_applicableLabelsArrayForDisplayMode:isInPalette:",
      "bridgedName": "_applicableLabelsArrayForDisplayMode_isInPalette",
      "args": [
        {
          "name": "_applicableLabelsArrayForDisplayMode",
          "type": "unsigned long long"
        },
        {
          "name": "isInPalette",
          "type": "BOOL"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_applicableLabelIsEnabledAtIndex:forDisplayMode:isInPalette:": {
      "name": "_applicableLabelIsEnabledAtIndex:forDisplayMode:isInPalette:",
      "bridgedName": "_applicableLabelIsEnabledAtIndex_forDisplayMode_isInPalette",
      "args": [
        {
          "name": "_applicableLabelIsEnabledAtIndex",
          "type": "long long"
        },
        {
          "name": "forDisplayMode",
          "type": "unsigned long long"
        },
        {
          "name": "isInPalette",
          "type": "BOOL"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_viewsArray": {
      "name": "_viewsArray",
      "bridgedName": "_viewsArray",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "rectForItem:inBounds:controlBounds:": {
      "name": "rectForItem:inBounds:controlBounds:",
      "bridgedName": "rectForItem_inBounds_controlBounds",
      "args": [
        {
          "name": "rectForItem",
          "type": "id"
        },
        {
          "name": "inBounds",
          "type": "struct CGRect"
        },
        {
          "name": "controlBounds",
          "type": "struct CGRect"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "rectForItem:inBounds:": {
      "name": "rectForItem:inBounds:",
      "bridgedName": "rectForItem_inBounds",
      "args": [
        {
          "name": "rectForItem",
          "type": "id"
        },
        {
          "name": "inBounds",
          "type": "struct CGRect"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_labelOnlyModeRectForItemAtIndex:inBounds:": {
      "name": "_labelOnlyModeRectForItemAtIndex:inBounds:",
      "bridgedName": "_labelOnlyModeRectForItemAtIndex_inBounds",
      "args": [
        {
          "name": "_labelOnlyModeRectForItemAtIndex",
          "type": "long long"
        },
        {
          "name": "inBounds",
          "type": "struct CGRect"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_segmentedControlRectForItemAtIndex:inBounds:controlBounds:": {
      "name": "_segmentedControlRectForItemAtIndex:inBounds:controlBounds:",
      "bridgedName": "_segmentedControlRectForItemAtIndex_inBounds_controlBounds",
      "args": [
        {
          "name": "_segmentedControlRectForItemAtIndex",
          "type": "long long"
        },
        {
          "name": "inBounds",
          "type": "struct CGRect"
        },
        {
          "name": "controlBounds",
          "type": "struct CGRect"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_segmentedControlRectForItemAtIndex:inBounds:": {
      "name": "_segmentedControlRectForItemAtIndex:inBounds:",
      "bridgedName": "_segmentedControlRectForItemAtIndex_inBounds",
      "args": [
        {
          "name": "_segmentedControlRectForItemAtIndex",
          "type": "long long"
        },
        {
          "name": "inBounds",
          "type": "struct CGRect"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_evenlySpacedRectForItemAtIndex:inBounds:": {
      "name": "_evenlySpacedRectForItemAtIndex:inBounds:",
      "bridgedName": "_evenlySpacedRectForItemAtIndex_inBounds",
      "args": [
        {
          "name": "_evenlySpacedRectForItemAtIndex",
          "type": "long long"
        },
        {
          "name": "inBounds",
          "type": "struct CGRect"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "copyWithZone:": {
      "name": "copyWithZone:",
      "bridgedName": "copyWithZone",
      "args": [
        {
          "name": "copyWithZone",
          "type": "struct _NSZone *"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_forceSetView:": {
      "name": "_forceSetView:",
      "bridgedName": "_forceSetView",
      "args": [
        {
          "name": "_forceSetView",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_autorecalculateMinSize:maxSize:": {
      "name": "_autorecalculateMinSize:maxSize:",
      "bridgedName": "_autorecalculateMinSize_maxSize",
      "args": [
        {
          "name": "_autorecalculateMinSize",
          "type": "struct CGSize *"
        },
        {
          "name": "maxSize",
          "type": "struct CGSize *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_sizeFromSubitemsMinSize:maxSize:": {
      "name": "_sizeFromSubitemsMinSize:maxSize:",
      "bridgedName": "_sizeFromSubitemsMinSize_maxSize",
      "args": [
        {
          "name": "_sizeFromSubitemsMinSize",
          "type": "struct CGSize *"
        },
        {
          "name": "maxSize",
          "type": "struct CGSize *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_mouseDownInSurroundingRegionShouldMoveWindow": {
      "name": "_mouseDownInSurroundingRegionShouldMoveWindow",
      "bridgedName": "_mouseDownInSurroundingRegionShouldMoveWindow",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "view": {
      "name": "view",
      "bridgedName": "view",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "validate": {
      "name": "validate",
      "bridgedName": "validate",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_defaultGroupViewIfUsed": {
      "name": "_defaultGroupViewIfUsed",
      "bridgedName": "_defaultGroupViewIfUsed",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "encodeWithCoder:": {
      "name": "encodeWithCoder:",
      "bridgedName": "encodeWithCoder",
      "args": [
        {
          "name": "encodeWithCoder",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithCoder:": {
      "name": "initWithCoder:",
      "bridgedName": "initWithCoder",
      "args": [
        {
          "name": "initWithCoder",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithItemIdentifier:": {
      "name": "initWithItemIdentifier:",
      "bridgedName": "initWithItemIdentifier",
      "args": [
        {
          "name": "initWithItemIdentifier",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_isCustomItemType": {
      "name": "_isCustomItemType",
      "bridgedName": "_isCustomItemType",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_interlabelPadding": {
      "name": "_interlabelPadding",
      "bridgedName": "_interlabelPadding",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_interviewPadding": {
      "name": "_interviewPadding",
      "bridgedName": "_interviewPadding",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_allocDefaultView": {
      "name": "_allocDefaultView",
      "bridgedName": "_allocDefaultView",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "subitems": {
      "name": "subitems",
      "pointer": true,
      "type": "NSArray",
      "attributes": [
        "copy"
      ]
    }
  }
}