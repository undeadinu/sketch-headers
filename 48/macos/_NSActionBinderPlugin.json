{
  "imports": [
    "_NSEditorBinderPlugin.h",
    "_NSActionBinderPlugin.h"
  ],
  "classes": [
    "NSArray",
    "NSString"
  ],
  "protocol": true,
  "className": "_NSActionBinderPlugin",
  "extends": "_NSBinderPlugin",
  "interfaces": [
    "_NSActionBinderPlugin"
  ],
  "methods": {
    "invokeSelector:withArguments:forBinding:object:": {
      "name": "invokeSelector:withArguments:forBinding:object:",
      "bridgedName": "invokeSelector_withArguments_forBinding_object",
      "args": [
        {
          "name": "invokeSelector",
          "type": "SEL"
        },
        {
          "name": "withArguments",
          "type": "id"
        },
        {
          "name": "forBinding",
          "type": "id"
        },
        {
          "name": "object",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "targetAndArgumentsAcceptableForPerformAction": {
      "name": "targetAndArgumentsAcceptableForPerformAction",
      "bridgedName": "targetAndArgumentsAcceptableForPerformAction",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isUsableWithObject:": {
      "name": "isUsableWithObject:",
      "bridgedName": "isUsableWithObject",
      "args": [
        {
          "name": "isUsableWithObject",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_clearCachedTransientStateOfObject:": {
      "name": "_clearCachedTransientStateOfObject:",
      "bridgedName": "_clearCachedTransientStateOfObject",
      "args": [
        {
          "name": "_clearCachedTransientStateOfObject",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_cacheTransientStateOfObject:": {
      "name": "_cacheTransientStateOfObject:",
      "bridgedName": "_cacheTransientStateOfObject",
      "args": [
        {
          "name": "_cacheTransientStateOfObject",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "conditionalBehaviorOffByDefault:": {
      "name": "conditionalBehaviorOffByDefault:",
      "bridgedName": "conditionalBehaviorOffByDefault",
      "args": [
        {
          "name": "conditionalBehaviorOffByDefault",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "prefersEnabledOverEditable:": {
      "name": "prefersEnabledOverEditable:",
      "bridgedName": "prefersEnabledOverEditable",
      "args": [
        {
          "name": "prefersEnabledOverEditable",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "needsAction": {
      "name": "needsAction",
      "bridgedName": "needsAction",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithBinder:object:": {
      "name": "initWithBinder:object:",
      "bridgedName": "initWithBinder_object",
      "args": [
        {
          "name": "initWithBinder",
          "type": "id"
        },
        {
          "name": "object",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "debugDescription": {
      "name": "debugDescription",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "description": {
      "name": "description",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "hash": {
      "name": "hash",
      "pointer": false,
      "type": "unsigned long long",
      "attributes": [
        "readonly"
      ]
    },
    "superclass": {
      "name": "superclass",
      "pointer": false,
      "type": "Class",
      "attributes": [
        "readonly"
      ]
    }
  }
}