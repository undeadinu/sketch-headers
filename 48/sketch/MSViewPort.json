{
  "imports": [
    "NSObject.h"
  ],
  "classes": [],
  "protocol": false,
  "className": "MSViewPort",
  "extends": "NSObject",
  "interfaces": [],
  "methods": {
    "cappedZoom:": {
      "name": "cappedZoom:",
      "bridgedName": "cappedZoom",
      "args": [
        {
          "name": "cappedZoom",
          "type": "double"
        }
      ],
      "returns": "double",
      "kind": "class",
      "kindIndicator": "+"
    },
    "minimumZoomValue": {
      "name": "minimumZoomValue",
      "bridgedName": "minimumZoomValue",
      "args": [],
      "returns": "double",
      "kind": "class",
      "kindIndicator": "+"
    },
    "maximumZoomValue": {
      "name": "maximumZoomValue",
      "bridgedName": "maximumZoomValue",
      "args": [],
      "returns": "double",
      "kind": "class",
      "kindIndicator": "+"
    },
    "viewPortWithScrollOrigin:zoom:": {
      "name": "viewPortWithScrollOrigin:zoom:",
      "bridgedName": "viewPortWithScrollOrigin_zoom",
      "args": [
        {
          "name": "viewPortWithScrollOrigin",
          "type": "struct CGPoint"
        },
        {
          "name": "zoom",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "description": {
      "name": "description",
      "bridgedName": "description",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isEqual:": {
      "name": "isEqual:",
      "bridgedName": "isEqual",
      "args": [
        {
          "name": "isEqual",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "zoomValue": {
      "name": "zoomValue",
      "pointer": false,
      "type": "double",
      "attributes": [
        "nonatomic"
      ]
    },
    "scrollOrigin": {
      "name": "scrollOrigin",
      "pointer": false,
      "type": "struct CGPoint",
      "attributes": [
        "nonatomic"
      ]
    }
  }
}