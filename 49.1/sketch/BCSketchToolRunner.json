{
  "imports": [
    "BCToolRunner.h"
  ],
  "classes": [
    "NSOperationQueue",
    "NSURL"
  ],
  "protocol": false,
  "className": "BCSketchToolRunner",
  "extends": "BCToolRunner",
  "interfaces": [],
  "methods": {
    ".cxx_destruct": {
      "name": ".cxx_destruct",
      "bridgedName": ".cxx_destruct",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "exportPreviewImageForDocumentAtURL:additionalArguments:intoURL:completionHandler:": {
      "name": "exportPreviewImageForDocumentAtURL:additionalArguments:intoURL:completionHandler:",
      "bridgedName": "exportPreviewImageForDocumentAtURL_additionalArguments_intoURL_completionHandler",
      "args": [
        {
          "name": "exportPreviewImageForDocumentAtURL",
          "type": "id"
        },
        {
          "name": "additionalArguments",
          "type": "id"
        },
        {
          "name": "intoURL",
          "type": "id"
        },
        {
          "name": "completionHandler",
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithSketchToolURL:maximumConcurrentOperations:": {
      "name": "initWithSketchToolURL:maximumConcurrentOperations:",
      "bridgedName": "initWithSketchToolURL_maximumConcurrentOperations",
      "args": [
        {
          "name": "initWithSketchToolURL",
          "type": "id"
        },
        {
          "name": "maximumConcurrentOperations",
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "sketchToolSubprocessQueue": {
      "name": "sketchToolSubprocessQueue",
      "pointer": true,
      "type": "NSOperationQueue",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    },
    "sketchToolURL": {
      "name": "sketchToolURL",
      "pointer": true,
      "type": "NSURL",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    }
  }
}