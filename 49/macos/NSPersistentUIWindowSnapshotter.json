{
  "imports": [
    "NSObject.h"
  ],
  "classes": [
    "NSData",
    "NSMutableDictionary",
    "NSObject<OS_dispatch_queue>",
    "NSURL"
  ],
  "protocol": false,
  "className": "NSPersistentUIWindowSnapshotter",
  "extends": "NSObject",
  "interfaces": [],
  "methods": {
    "writeWindowSnapshot:length:width:height:bytesPerRow:toFile:inDirectory:encryptingWithKey:uuid:checksum:fd:": {
      "name": "writeWindowSnapshot:length:width:height:bytesPerRow:toFile:inDirectory:encryptingWithKey:uuid:checksum:fd:",
      "bridgedName": "writeWindowSnapshot_length_width_height_bytesPerRow_toFile_inDirectory_encryptingWithKey_uuid_checksum_fd",
      "args": [
        {
          "name": "writeWindowSnapshot",
          "type": "const void *"
        },
        {
          "name": "length",
          "type": "unsigned long long"
        },
        {
          "name": "width",
          "type": "unsigned long long"
        },
        {
          "name": "height",
          "type": "unsigned long long"
        },
        {
          "name": "bytesPerRow",
          "type": "unsigned long long"
        },
        {
          "name": "toFile",
          "type": "id"
        },
        {
          "name": "inDirectory",
          "type": "id"
        },
        {
          "name": "encryptingWithKey",
          "type": "id"
        },
        {
          "name": "uuid",
          "type": "id"
        },
        {
          "name": "checksum",
          "type": "unsigned int *"
        },
        {
          "name": "fd",
          "type": "int *"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "captureAndWriteSnapshotForWindowNumber:forWindowID:waitUntilDone:": {
      "name": "captureAndWriteSnapshotForWindowNumber:forWindowID:waitUntilDone:",
      "bridgedName": "captureAndWriteSnapshotForWindowNumber_forWindowID_waitUntilDone",
      "args": [
        {
          "name": "captureAndWriteSnapshotForWindowNumber",
          "type": "long long"
        },
        {
          "name": "forWindowID",
          "type": "unsigned int"
        },
        {
          "name": "waitUntilDone",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "deleteSnapshotForWindowID:": {
      "name": "deleteSnapshotForWindowID:",
      "bridgedName": "deleteSnapshotForWindowID",
      "args": [
        {
          "name": "deleteSnapshotForWindowID",
          "type": "unsigned int"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "enqueueWindowForSnapshotting:forWindowNumber:": {
      "name": "enqueueWindowForSnapshotting:forWindowNumber:",
      "bridgedName": "enqueueWindowForSnapshotting_forWindowNumber",
      "args": [
        {
          "name": "enqueueWindowForSnapshotting",
          "type": "unsigned int"
        },
        {
          "name": "forWindowNumber",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "finishPendingSnapshotsImmediatelyWithCompletionHandler:": {
      "name": "finishPendingSnapshotsImmediatelyWithCompletionHandler:",
      "bridgedName": "finishPendingSnapshotsImmediatelyWithCompletionHandler",
      "args": [
        {
          "name": "finishPendingSnapshotsImmediatelyWithCompletionHandler",
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "asynchronouslySnapshotPendingWindows": {
      "name": "asynchronouslySnapshotPendingWindows",
      "bridgedName": "asynchronouslySnapshotPendingWindows",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "synchronouslySnapshotPendingWindows": {
      "name": "synchronouslySnapshotPendingWindows",
      "bridgedName": "synchronouslySnapshotPendingWindows",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "snapshotOnePendingWindowWaitUntilDone:": {
      "name": "snapshotOnePendingWindowWaitUntilDone:",
      "bridgedName": "snapshotOnePendingWindowWaitUntilDone",
      "args": [
        {
          "name": "snapshotOnePendingWindowWaitUntilDone",
          "type": "BOOL"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dequeueOneWindowToSnapshot:windowNumber:": {
      "name": "dequeueOneWindowToSnapshot:windowNumber:",
      "bridgedName": "dequeueOneWindowToSnapshot_windowNumber",
      "args": [
        {
          "name": "dequeueOneWindowToSnapshot",
          "type": "unsigned int *"
        },
        {
          "name": "windowNumber",
          "type": "long long *"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessWindowBits:handler:": {
      "name": "accessWindowBits:handler:",
      "bridgedName": "accessWindowBits_handler",
      "args": [
        {
          "name": "accessWindowBits",
          "type": "long long"
        },
        {
          "name": "handler",
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "windowHasBeenSnapshotted:": {
      "name": "windowHasBeenSnapshotted:",
      "bridgedName": "windowHasBeenSnapshotted",
      "args": [
        {
          "name": "windowHasBeenSnapshotted",
          "type": "unsigned int"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "discardAllSnapshotData": {
      "name": "discardAllSnapshotData",
      "bridgedName": "discardAllSnapshotData",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "updateSuddenTermination": {
      "name": "updateSuddenTermination",
      "bridgedName": "updateSuddenTermination",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setCryptoKey:uuid:": {
      "name": "setCryptoKey:uuid:",
      "bridgedName": "setCryptoKey_uuid",
      "args": [
        {
          "name": "setCryptoKey",
          "type": "id"
        },
        {
          "name": "uuid",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithPersistentStateDirectoryURL:IOQueue:": {
      "name": "initWithPersistentStateDirectoryURL:IOQueue:",
      "bridgedName": "initWithPersistentStateDirectoryURL_IOQueue",
      "args": [
        {
          "name": "initWithPersistentStateDirectoryURL",
          "type": "id"
        },
        {
          "name": "IOQueue",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithFileManager:": {
      "name": "initWithFileManager:",
      "bridgedName": "initWithFileManager",
      "args": [
        {
          "name": "initWithFileManager",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "cryptoKey": {
      "name": "cryptoKey",
      "pointer": true,
      "type": "NSData",
      "attributes": [
        "copy"
      ]
    },
    "cryptoUUID": {
      "name": "cryptoUUID",
      "pointer": true,
      "type": "NSData",
      "attributes": [
        "copy"
      ]
    }
  }
}