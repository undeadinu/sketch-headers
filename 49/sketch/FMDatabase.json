{
  "imports": [
    "NSObject.h"
  ],
  "classes": [
    "NSDateFormatter",
    "NSMutableDictionary",
    "NSMutableSet",
    "NSString"
  ],
  "protocol": false,
  "className": "FMDatabase",
  "extends": "NSObject",
  "interfaces": [],
  "methods": {
    "storeableDateFormat:": {
      "name": "storeableDateFormat:",
      "bridgedName": "storeableDateFormat",
      "args": [
        {
          "name": "storeableDateFormat",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "isSQLiteThreadSafe": {
      "name": "isSQLiteThreadSafe",
      "bridgedName": "isSQLiteThreadSafe",
      "args": [],
      "returns": "BOOL",
      "kind": "class",
      "kindIndicator": "+"
    },
    "sqliteLibVersion": {
      "name": "sqliteLibVersion",
      "bridgedName": "sqliteLibVersion",
      "args": [],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "FMDBVersion": {
      "name": "FMDBVersion",
      "bridgedName": "FMDBVersion",
      "args": [],
      "returns": "int",
      "kind": "class",
      "kindIndicator": "+"
    },
    "FMDBUserVersion": {
      "name": "FMDBUserVersion",
      "bridgedName": "FMDBUserVersion",
      "args": [],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "databaseWithPath:": {
      "name": "databaseWithPath:",
      "bridgedName": "databaseWithPath",
      "args": [
        {
          "name": "databaseWithPath",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "makeFunctionNamed:maximumArguments:withBlock:": {
      "name": "makeFunctionNamed:maximumArguments:withBlock:",
      "bridgedName": "makeFunctionNamed_maximumArguments_withBlock",
      "args": [
        {
          "name": "makeFunctionNamed",
          "type": "id"
        },
        {
          "name": "maximumArguments",
          "type": "int"
        },
        {
          "name": "withBlock",
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setShouldCacheStatements:": {
      "name": "setShouldCacheStatements:",
      "bridgedName": "setShouldCacheStatements",
      "args": [
        {
          "name": "setShouldCacheStatements",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "shouldCacheStatements": {
      "name": "shouldCacheStatements",
      "bridgedName": "shouldCacheStatements",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "inSavePoint:": {
      "name": "inSavePoint:",
      "bridgedName": "inSavePoint",
      "args": [
        {
          "name": "inSavePoint",
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "rollbackToSavePointWithName:error:": {
      "name": "rollbackToSavePointWithName:error:",
      "bridgedName": "rollbackToSavePointWithName_error",
      "args": [
        {
          "name": "rollbackToSavePointWithName",
          "type": "id"
        },
        {
          "name": "error",
          "type": "id *"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "releaseSavePointWithName:error:": {
      "name": "releaseSavePointWithName:error:",
      "bridgedName": "releaseSavePointWithName_error",
      "args": [
        {
          "name": "releaseSavePointWithName",
          "type": "id"
        },
        {
          "name": "error",
          "type": "id *"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "startSavePointWithName:error:": {
      "name": "startSavePointWithName:error:",
      "bridgedName": "startSavePointWithName_error",
      "args": [
        {
          "name": "startSavePointWithName",
          "type": "id"
        },
        {
          "name": "error",
          "type": "id *"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "inTransaction": {
      "name": "inTransaction",
      "bridgedName": "inTransaction",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "beginTransaction": {
      "name": "beginTransaction",
      "bridgedName": "beginTransaction",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "beginDeferredTransaction": {
      "name": "beginDeferredTransaction",
      "bridgedName": "beginDeferredTransaction",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "commit": {
      "name": "commit",
      "bridgedName": "commit",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "rollback": {
      "name": "rollback",
      "bridgedName": "rollback",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "update:withErrorAndBindings:": {
      "name": "update:withErrorAndBindings:",
      "bridgedName": "update_withErrorAndBindings",
      "args": [
        {
          "name": "update",
          "type": "id"
        },
        {
          "name": "withErrorAndBindings",
          "type": "id *"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "executeUpdate:withErrorAndBindings:": {
      "name": "executeUpdate:withErrorAndBindings:",
      "bridgedName": "executeUpdate_withErrorAndBindings",
      "args": [
        {
          "name": "executeUpdate",
          "type": "id"
        },
        {
          "name": "withErrorAndBindings",
          "type": "id *"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "executeStatements:withResultBlock:": {
      "name": "executeStatements:withResultBlock:",
      "bridgedName": "executeStatements_withResultBlock",
      "args": [
        {
          "name": "executeStatements",
          "type": "id"
        },
        {
          "name": "withResultBlock",
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "executeStatements:": {
      "name": "executeStatements:",
      "bridgedName": "executeStatements",
      "args": [
        {
          "name": "executeStatements",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "executeUpdateWithFormat:": {
      "name": "executeUpdateWithFormat:",
      "bridgedName": "executeUpdateWithFormat",
      "args": [
        {
          "name": "executeUpdateWithFormat",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "executeUpdate:withVAList:": {
      "name": "executeUpdate:withVAList:",
      "bridgedName": "executeUpdate_withVAList",
      "args": [
        {
          "name": "executeUpdate",
          "type": "id"
        },
        {
          "name": "withVAList",
          "type": "struct __va_list_tag [1]"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "executeUpdate:withParameterDictionary:": {
      "name": "executeUpdate:withParameterDictionary:",
      "bridgedName": "executeUpdate_withParameterDictionary",
      "args": [
        {
          "name": "executeUpdate",
          "type": "id"
        },
        {
          "name": "withParameterDictionary",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "executeUpdate:values:error:": {
      "name": "executeUpdate:values:error:",
      "bridgedName": "executeUpdate_values_error",
      "args": [
        {
          "name": "executeUpdate",
          "type": "id"
        },
        {
          "name": "values",
          "type": "id"
        },
        {
          "name": "error",
          "type": "id *"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "executeUpdate:withArgumentsInArray:": {
      "name": "executeUpdate:withArgumentsInArray:",
      "bridgedName": "executeUpdate_withArgumentsInArray",
      "args": [
        {
          "name": "executeUpdate",
          "type": "id"
        },
        {
          "name": "withArgumentsInArray",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "executeUpdate:": {
      "name": "executeUpdate:",
      "bridgedName": "executeUpdate",
      "args": [
        {
          "name": "executeUpdate",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "executeUpdate:error:withArgumentsInArray:orDictionary:orVAList:": {
      "name": "executeUpdate:error:withArgumentsInArray:orDictionary:orVAList:",
      "bridgedName": "executeUpdate_error_withArgumentsInArray_orDictionary_orVAList",
      "args": [
        {
          "name": "executeUpdate",
          "type": "id"
        },
        {
          "name": "error",
          "type": "id *"
        },
        {
          "name": "withArgumentsInArray",
          "type": "id"
        },
        {
          "name": "orDictionary",
          "type": "id"
        },
        {
          "name": "orVAList",
          "type": "struct __va_list_tag [1]"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "executeQuery:withVAList:": {
      "name": "executeQuery:withVAList:",
      "bridgedName": "executeQuery_withVAList",
      "args": [
        {
          "name": "executeQuery",
          "type": "id"
        },
        {
          "name": "withVAList",
          "type": "struct __va_list_tag [1]"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "executeQuery:values:error:": {
      "name": "executeQuery:values:error:",
      "bridgedName": "executeQuery_values_error",
      "args": [
        {
          "name": "executeQuery",
          "type": "id"
        },
        {
          "name": "values",
          "type": "id"
        },
        {
          "name": "error",
          "type": "id *"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "executeQuery:withArgumentsInArray:": {
      "name": "executeQuery:withArgumentsInArray:",
      "bridgedName": "executeQuery_withArgumentsInArray",
      "args": [
        {
          "name": "executeQuery",
          "type": "id"
        },
        {
          "name": "withArgumentsInArray",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "executeQueryWithFormat:": {
      "name": "executeQueryWithFormat:",
      "bridgedName": "executeQueryWithFormat",
      "args": [
        {
          "name": "executeQueryWithFormat",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "executeQuery:": {
      "name": "executeQuery:",
      "bridgedName": "executeQuery",
      "args": [
        {
          "name": "executeQuery",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "executeQuery:withArgumentsInArray:orDictionary:orVAList:": {
      "name": "executeQuery:withArgumentsInArray:orDictionary:orVAList:",
      "bridgedName": "executeQuery_withArgumentsInArray_orDictionary_orVAList",
      "args": [
        {
          "name": "executeQuery",
          "type": "id"
        },
        {
          "name": "withArgumentsInArray",
          "type": "id"
        },
        {
          "name": "orDictionary",
          "type": "id"
        },
        {
          "name": "orVAList",
          "type": "struct __va_list_tag [1]"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "executeQuery:withParameterDictionary:": {
      "name": "executeQuery:withParameterDictionary:",
      "bridgedName": "executeQuery_withParameterDictionary",
      "args": [
        {
          "name": "executeQuery",
          "type": "id"
        },
        {
          "name": "withParameterDictionary",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "extractSQL:argumentsList:intoString:arguments:": {
      "name": "extractSQL:argumentsList:intoString:arguments:",
      "bridgedName": "extractSQL_argumentsList_intoString_arguments",
      "args": [
        {
          "name": "extractSQL",
          "type": "id"
        },
        {
          "name": "argumentsList",
          "type": "struct __va_list_tag [1]"
        },
        {
          "name": "intoString",
          "type": "id"
        },
        {
          "name": "arguments",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bindObject:toColumn:inStatement:": {
      "name": "bindObject:toColumn:inStatement:",
      "bridgedName": "bindObject_toColumn_inStatement",
      "args": [
        {
          "name": "bindObject",
          "type": "id"
        },
        {
          "name": "toColumn",
          "type": "int"
        },
        {
          "name": "inStatement",
          "type": "struct sqlite3_stmt *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "changes": {
      "name": "changes",
      "bridgedName": "changes",
      "args": [],
      "returns": "int",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "lastInsertRowId": {
      "name": "lastInsertRowId",
      "bridgedName": "lastInsertRowId",
      "args": [],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "lastError": {
      "name": "lastError",
      "bridgedName": "lastError",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "errorWithMessage:": {
      "name": "errorWithMessage:",
      "bridgedName": "errorWithMessage",
      "args": [
        {
          "name": "errorWithMessage",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "lastErrorCode": {
      "name": "lastErrorCode",
      "bridgedName": "lastErrorCode",
      "args": [],
      "returns": "int",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "hadError": {
      "name": "hadError",
      "bridgedName": "hadError",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "lastErrorMessage": {
      "name": "lastErrorMessage",
      "bridgedName": "lastErrorMessage",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "databaseExists": {
      "name": "databaseExists",
      "bridgedName": "databaseExists",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "warnInUse": {
      "name": "warnInUse",
      "bridgedName": "warnInUse",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "goodConnection": {
      "name": "goodConnection",
      "bridgedName": "goodConnection",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "stringFromDate:": {
      "name": "stringFromDate:",
      "bridgedName": "stringFromDate",
      "args": [
        {
          "name": "stringFromDate",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dateFromString:": {
      "name": "dateFromString:",
      "bridgedName": "dateFromString",
      "args": [
        {
          "name": "dateFromString",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setDateFormat:": {
      "name": "setDateFormat:",
      "bridgedName": "setDateFormat",
      "args": [
        {
          "name": "setDateFormat",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "hasDateFormatter": {
      "name": "hasDateFormatter",
      "bridgedName": "hasDateFormatter",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setKeyWithData:": {
      "name": "setKeyWithData:",
      "bridgedName": "setKeyWithData",
      "args": [
        {
          "name": "setKeyWithData",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setKey:": {
      "name": "setKey:",
      "bridgedName": "setKey",
      "args": [
        {
          "name": "setKey",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "rekeyWithData:": {
      "name": "rekeyWithData:",
      "bridgedName": "rekeyWithData",
      "args": [
        {
          "name": "rekeyWithData",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "rekey:": {
      "name": "rekey:",
      "bridgedName": "rekey",
      "args": [
        {
          "name": "rekey",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setCachedStatement:forQuery:": {
      "name": "setCachedStatement:forQuery:",
      "bridgedName": "setCachedStatement_forQuery",
      "args": [
        {
          "name": "setCachedStatement",
          "type": "id"
        },
        {
          "name": "forQuery",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "cachedStatementForQuery:": {
      "name": "cachedStatementForQuery:",
      "bridgedName": "cachedStatementForQuery",
      "args": [
        {
          "name": "cachedStatementForQuery",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "clearCachedStatements": {
      "name": "clearCachedStatements",
      "bridgedName": "clearCachedStatements",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "resultSetDidClose:": {
      "name": "resultSetDidClose:",
      "bridgedName": "resultSetDidClose",
      "args": [
        {
          "name": "resultSetDidClose",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "closeOpenResultSets": {
      "name": "closeOpenResultSets",
      "bridgedName": "closeOpenResultSets",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "hasOpenResultSets": {
      "name": "hasOpenResultSets",
      "bridgedName": "hasOpenResultSets",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setBusyRetryTimeout:": {
      "name": "setBusyRetryTimeout:",
      "bridgedName": "setBusyRetryTimeout",
      "args": [
        {
          "name": "setBusyRetryTimeout",
          "type": "int"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "busyRetryTimeout": {
      "name": "busyRetryTimeout",
      "bridgedName": "busyRetryTimeout",
      "args": [],
      "returns": "int",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "maxBusyRetryTimeInterval": {
      "name": "maxBusyRetryTimeInterval",
      "bridgedName": "maxBusyRetryTimeInterval",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setMaxBusyRetryTimeInterval:": {
      "name": "setMaxBusyRetryTimeInterval:",
      "bridgedName": "setMaxBusyRetryTimeInterval",
      "args": [
        {
          "name": "setMaxBusyRetryTimeInterval",
          "type": "double"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "close": {
      "name": "close",
      "bridgedName": "close",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "openWithFlags:vfs:": {
      "name": "openWithFlags:vfs:",
      "bridgedName": "openWithFlags_vfs",
      "args": [
        {
          "name": "openWithFlags",
          "type": "int"
        },
        {
          "name": "vfs",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "openWithFlags:": {
      "name": "openWithFlags:",
      "bridgedName": "openWithFlags",
      "args": [
        {
          "name": "openWithFlags",
          "type": "int"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "open": {
      "name": "open",
      "bridgedName": "open",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "sqlitePath": {
      "name": "sqlitePath",
      "bridgedName": "sqlitePath",
      "args": [],
      "returns": "const char *",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "sqliteHandle": {
      "name": "sqliteHandle",
      "bridgedName": "sqliteHandle",
      "args": [],
      "returns": "struct sqlite3 *",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "databasePath": {
      "name": "databasePath",
      "bridgedName": "databasePath",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "finalize": {
      "name": "finalize",
      "bridgedName": "finalize",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithPath:": {
      "name": "initWithPath:",
      "bridgedName": "initWithPath",
      "args": [
        {
          "name": "initWithPath",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "init": {
      "name": "init",
      "bridgedName": "init",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "validateSQL:error:": {
      "name": "validateSQL:error:",
      "bridgedName": "validateSQL_error",
      "args": [
        {
          "name": "validateSQL",
          "type": "id"
        },
        {
          "name": "error",
          "type": "id *"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "columnExists:columnName:": {
      "name": "columnExists:columnName:",
      "bridgedName": "columnExists_columnName",
      "args": [
        {
          "name": "columnExists",
          "type": "id"
        },
        {
          "name": "columnName",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setUserVersion:": {
      "name": "setUserVersion:",
      "bridgedName": "setUserVersion",
      "args": [
        {
          "name": "setUserVersion",
          "type": "unsigned int"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "userVersion": {
      "name": "userVersion",
      "bridgedName": "userVersion",
      "args": [],
      "returns": "unsigned int",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setApplicationIDString:": {
      "name": "setApplicationIDString:",
      "bridgedName": "setApplicationIDString",
      "args": [
        {
          "name": "setApplicationIDString",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "applicationIDString": {
      "name": "applicationIDString",
      "bridgedName": "applicationIDString",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setApplicationID:": {
      "name": "setApplicationID:",
      "bridgedName": "setApplicationID",
      "args": [
        {
          "name": "setApplicationID",
          "type": "unsigned int"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "applicationID": {
      "name": "applicationID",
      "bridgedName": "applicationID",
      "args": [],
      "returns": "unsigned int",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "columnExists:inTableWithName:": {
      "name": "columnExists:inTableWithName:",
      "bridgedName": "columnExists_inTableWithName",
      "args": [
        {
          "name": "columnExists",
          "type": "id"
        },
        {
          "name": "inTableWithName",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "getTableSchema:": {
      "name": "getTableSchema:",
      "bridgedName": "getTableSchema",
      "args": [
        {
          "name": "getTableSchema",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "getSchema": {
      "name": "getSchema",
      "bridgedName": "getSchema",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tableExists:": {
      "name": "tableExists:",
      "bridgedName": "tableExists",
      "args": [
        {
          "name": "tableExists",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dateForQuery:": {
      "name": "dateForQuery:",
      "bridgedName": "dateForQuery",
      "args": [
        {
          "name": "dateForQuery",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dataForQuery:": {
      "name": "dataForQuery:",
      "bridgedName": "dataForQuery",
      "args": [
        {
          "name": "dataForQuery",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "doubleForQuery:": {
      "name": "doubleForQuery:",
      "bridgedName": "doubleForQuery",
      "args": [
        {
          "name": "doubleForQuery",
          "type": "id"
        }
      ],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "boolForQuery:": {
      "name": "boolForQuery:",
      "bridgedName": "boolForQuery",
      "args": [
        {
          "name": "boolForQuery",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "longForQuery:": {
      "name": "longForQuery:",
      "bridgedName": "longForQuery",
      "args": [
        {
          "name": "longForQuery",
          "type": "id"
        }
      ],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "intForQuery:": {
      "name": "intForQuery:",
      "bridgedName": "intForQuery",
      "args": [
        {
          "name": "intForQuery",
          "type": "id"
        }
      ],
      "returns": "int",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "stringForQuery:": {
      "name": "stringForQuery:",
      "bridgedName": "stringForQuery",
      "args": [
        {
          "name": "stringForQuery",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "cachedStatements": {
      "name": "cachedStatements",
      "pointer": true,
      "type": "NSMutableDictionary",
      "attributes": [
        "retain"
      ]
    }
  }
}