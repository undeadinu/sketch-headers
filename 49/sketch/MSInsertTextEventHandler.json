{
  "imports": [
    "MSEventHandler.h"
  ],
  "classes": [
    "MSTextLayer"
  ],
  "protocol": false,
  "className": "MSInsertTextEventHandler",
  "extends": "MSEventHandler",
  "interfaces": [],
  "methods": {
    ".cxx_destruct": {
      "name": ".cxx_destruct",
      "bridgedName": ".cxx_destruct",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "allowsSwitchToInsertAction": {
      "name": "allowsSwitchToInsertAction",
      "bridgedName": "allowsSwitchToInsertAction",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "shouldDrawLayerSelection": {
      "name": "shouldDrawLayerSelection",
      "bridgedName": "shouldDrawLayerSelection",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "toolbarIdentifier": {
      "name": "toolbarIdentifier",
      "bridgedName": "toolbarIdentifier",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "rectForInsertingDirectly:": {
      "name": "rectForInsertingDirectly:",
      "bridgedName": "rectForInsertingDirectly",
      "args": [
        {
          "name": "rectForInsertingDirectly",
          "type": "struct CGPoint"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "selectTextLayerAndEdit:": {
      "name": "selectTextLayerAndEdit:",
      "bridgedName": "selectTextLayerAndEdit",
      "args": [
        {
          "name": "selectTextLayerAndEdit",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "textLayerAtPoint:zoomValue:": {
      "name": "textLayerAtPoint:zoomValue:",
      "bridgedName": "textLayerAtPoint_zoomValue",
      "args": [
        {
          "name": "textLayerAtPoint",
          "type": "struct CGPoint"
        },
        {
          "name": "zoomValue",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tryToEditExistingTextLayer:zoomValue:": {
      "name": "tryToEditExistingTextLayer:zoomValue:",
      "bridgedName": "tryToEditExistingTextLayer_zoomValue",
      "args": [
        {
          "name": "tryToEditExistingTextLayer",
          "type": "struct CGPoint"
        },
        {
          "name": "zoomValue",
          "type": "double"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "groupForInserting": {
      "name": "groupForInserting",
      "bridgedName": "groupForInserting",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "textLayerWithRect:type:": {
      "name": "textLayerWithRect:type:",
      "bridgedName": "textLayerWithRect_type",
      "args": [
        {
          "name": "textLayerWithRect",
          "type": "struct CGRect"
        },
        {
          "name": "type",
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "absoluteMouseUp:flags:": {
      "name": "absoluteMouseUp:flags:",
      "bridgedName": "absoluteMouseUp_flags",
      "args": [
        {
          "name": "absoluteMouseUp",
          "type": "struct CGPoint"
        },
        {
          "name": "flags",
          "type": "unsigned long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawInRect:context:": {
      "name": "drawInRect:context:",
      "bridgedName": "drawInRect_context",
      "args": [
        {
          "name": "drawInRect",
          "type": "struct CGRect"
        },
        {
          "name": "context",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "absoluteMouseDragged:flags:": {
      "name": "absoluteMouseDragged:flags:",
      "bridgedName": "absoluteMouseDragged_flags",
      "args": [
        {
          "name": "absoluteMouseDragged",
          "type": "struct CGPoint"
        },
        {
          "name": "flags",
          "type": "unsigned long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "absoluteMouseDown:clickCount:flags:": {
      "name": "absoluteMouseDown:clickCount:flags:",
      "bridgedName": "absoluteMouseDown_clickCount_flags",
      "args": [
        {
          "name": "absoluteMouseDown",
          "type": "struct CGPoint"
        },
        {
          "name": "clickCount",
          "type": "unsigned long long"
        },
        {
          "name": "flags",
          "type": "unsigned long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "mouseMovedEvent:": {
      "name": "mouseMovedEvent:",
      "bridgedName": "mouseMovedEvent",
      "args": [
        {
          "name": "mouseMovedEvent",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "cursorUpdate:": {
      "name": "cursorUpdate:",
      "bridgedName": "cursorUpdate",
      "args": [
        {
          "name": "cursorUpdate",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "handlerWillLoseFocus": {
      "name": "handlerWillLoseFocus",
      "bridgedName": "handlerWillLoseFocus",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "handlerGotFocus": {
      "name": "handlerGotFocus",
      "bridgedName": "handlerGotFocus",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "completionBlock": {
      "name": "completionBlock",
      "pointer": false,
      "type": "CDUnknownBlockType",
      "attributes": [
        "copy",
        "nonatomic"
      ]
    },
    "textLayer": {
      "name": "textLayer",
      "pointer": true,
      "type": "MSTextLayer",
      "attributes": [
        "retain",
        "nonatomic"
      ]
    }
  }
}