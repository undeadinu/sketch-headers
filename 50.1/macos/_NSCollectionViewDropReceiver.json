{
  "imports": [
    "NSObject.h",
    "NSDraggingDestination.h"
  ],
  "classes": [
    "NSCollectionView",
    "NSString",
    "NSView"
  ],
  "protocol": false,
  "className": "_NSCollectionViewDropReceiver",
  "extends": "NSObject",
  "interfaces": [
    "NSDraggingDestination"
  ],
  "methods": {
    "dropReceiverWithCollectionView:": {
      "name": "dropReceiverWithCollectionView:",
      "bridgedName": "dropReceiverWithCollectionView",
      "args": [
        {
          "name": "dropReceiverWithCollectionView",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "updateDraggingItemsForDrag:": {
      "name": "updateDraggingItemsForDrag:",
      "bridgedName": "updateDraggingItemsForDrag",
      "args": [
        {
          "name": "updateDraggingItemsForDrag",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "draggingEnded:": {
      "name": "draggingEnded:",
      "bridgedName": "draggingEnded",
      "args": [
        {
          "name": "draggingEnded",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "concludeDragOperation:": {
      "name": "concludeDragOperation:",
      "bridgedName": "concludeDragOperation",
      "args": [
        {
          "name": "concludeDragOperation",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "performDragOperation:": {
      "name": "performDragOperation:",
      "bridgedName": "performDragOperation",
      "args": [
        {
          "name": "performDragOperation",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "prepareForDragOperation:": {
      "name": "prepareForDragOperation:",
      "bridgedName": "prepareForDragOperation",
      "args": [
        {
          "name": "prepareForDragOperation",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "draggingExited:": {
      "name": "draggingExited:",
      "bridgedName": "draggingExited",
      "args": [
        {
          "name": "draggingExited",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "draggingUpdated:": {
      "name": "draggingUpdated:",
      "bridgedName": "draggingUpdated",
      "args": [
        {
          "name": "draggingUpdated",
          "type": "id"
        }
      ],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "draggingEntered:": {
      "name": "draggingEntered:",
      "bridgedName": "draggingEntered",
      "args": [
        {
          "name": "draggingEntered",
          "type": "id"
        }
      ],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_hoverAreaIsSameAsLast:": {
      "name": "_hoverAreaIsSameAsLast:",
      "bridgedName": "_hoverAreaIsSameAsLast",
      "args": [
        {
          "name": "_hoverAreaIsSameAsLast",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_updateDragAndDropStateWithDraggingInfo:newDragOperation:newDropTargetIndexPath:newDropTargetRect:newDropOperation:": {
      "name": "_updateDragAndDropStateWithDraggingInfo:newDragOperation:newDropTargetIndexPath:newDropTargetRect:newDropOperation:",
      "bridgedName": "_updateDragAndDropStateWithDraggingInfo_newDragOperation_newDropTargetIndexPath_newDropTargetRect_newDropOperation",
      "args": [
        {
          "name": "_updateDragAndDropStateWithDraggingInfo",
          "type": "id"
        },
        {
          "name": "newDragOperation",
          "type": "unsigned long long"
        },
        {
          "name": "newDropTargetIndexPath",
          "type": "id"
        },
        {
          "name": "newDropTargetRect",
          "type": "struct CGRect"
        },
        {
          "name": "newDropOperation",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setHighlightState:forItemsAtIndexPaths:": {
      "name": "setHighlightState:forItemsAtIndexPaths:",
      "bridgedName": "setHighlightState_forItemsAtIndexPaths",
      "args": [
        {
          "name": "setHighlightState",
          "type": "long long"
        },
        {
          "name": "forItemsAtIndexPaths",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_validateDragWithInfo:dropTargetIndexPath:dropTargetRect:dropOperation:allowDropOnOnly:": {
      "name": "_validateDragWithInfo:dropTargetIndexPath:dropTargetRect:dropOperation:allowDropOnOnly:",
      "bridgedName": "_validateDragWithInfo_dropTargetIndexPath_dropTargetRect_dropOperation_allowDropOnOnly",
      "args": [
        {
          "name": "_validateDragWithInfo",
          "type": "id"
        },
        {
          "name": "dropTargetIndexPath",
          "type": "id *"
        },
        {
          "name": "dropTargetRect",
          "type": "struct CGRect *"
        },
        {
          "name": "dropOperation",
          "type": "long long *"
        },
        {
          "name": "allowDropOnOnly",
          "type": "BOOL"
        }
      ],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_dropIndexPathForDraggingInfo:dropTargetRect:proposedDropOperation:allowDropOnOnly:": {
      "name": "_dropIndexPathForDraggingInfo:dropTargetRect:proposedDropOperation:allowDropOnOnly:",
      "bridgedName": "_dropIndexPathForDraggingInfo_dropTargetRect_proposedDropOperation_allowDropOnOnly",
      "args": [
        {
          "name": "_dropIndexPathForDraggingInfo",
          "type": "id"
        },
        {
          "name": "dropTargetRect",
          "type": "struct CGRect *"
        },
        {
          "name": "proposedDropOperation",
          "type": "long long *"
        },
        {
          "name": "allowDropOnOnly",
          "type": "BOOL"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setWholeSectionDropTargetRect:": {
      "name": "_setWholeSectionDropTargetRect:",
      "bridgedName": "_setWholeSectionDropTargetRect",
      "args": [
        {
          "name": "_setWholeSectionDropTargetRect",
          "type": "struct CGRect"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setDropTargetGapRect:": {
      "name": "_setDropTargetGapRect:",
      "bridgedName": "_setDropTargetGapRect",
      "args": [
        {
          "name": "_setDropTargetGapRect",
          "type": "struct CGRect"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithCollectionView:": {
      "name": "initWithCollectionView:",
      "bridgedName": "initWithCollectionView",
      "args": [
        {
          "name": "initWithCollectionView",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "debugDescription": {
      "name": "debugDescription",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "description": {
      "name": "description",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "hash": {
      "name": "hash",
      "pointer": false,
      "type": "unsigned long long",
      "attributes": [
        "readonly"
      ]
    },
    "superclass": {
      "name": "superclass",
      "pointer": false,
      "type": "Class",
      "attributes": [
        "readonly"
      ]
    }
  }
}