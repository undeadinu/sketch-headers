{
  "imports": [
    "NSObject.h"
  ],
  "classes": [
    "NSArray",
    "NSMutableDictionary",
    "NSString"
  ],
  "protocol": false,
  "className": "CMapParser",
  "extends": "NSObject",
  "interfaces": [],
  "methods": {
    ".cxx_destruct": {
      "name": ".cxx_destruct",
      "bridgedName": ".cxx_destruct",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "parseData": {
      "name": "parseData",
      "bridgedName": "parseData",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "parseCmap": {
      "name": "parseCmap",
      "bridgedName": "parseCmap",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "codespacerangeParseWithCount:": {
      "name": "codespacerangeParseWithCount:",
      "bridgedName": "codespacerangeParseWithCount",
      "args": [
        {
          "name": "codespacerangeParseWithCount",
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "cidrangeParseWithCount:": {
      "name": "cidrangeParseWithCount:",
      "bridgedName": "cidrangeParseWithCount",
      "args": [
        {
          "name": "cidrangeParseWithCount",
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bfrangeParseWithCount:": {
      "name": "bfrangeParseWithCount:",
      "bridgedName": "bfrangeParseWithCount",
      "args": [
        {
          "name": "bfrangeParseWithCount",
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "cidcharParseWithCount:": {
      "name": "cidcharParseWithCount:",
      "bridgedName": "cidcharParseWithCount",
      "args": [
        {
          "name": "cidcharParseWithCount",
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bfcharParseWithCount:": {
      "name": "bfcharParseWithCount:",
      "bridgedName": "bfcharParseWithCount",
      "args": [
        {
          "name": "bfcharParseWithCount",
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "parseOperator:withCount:block:": {
      "name": "parseOperator:withCount:block:",
      "bridgedName": "parseOperator_withCount_block",
      "args": [
        {
          "name": "parseOperator",
          "type": "id"
        },
        {
          "name": "withCount",
          "type": "unsigned long long"
        },
        {
          "name": "block",
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "addRangeStart:end:to:": {
      "name": "addRangeStart:end:to:",
      "bridgedName": "addRangeStart_end_to",
      "args": [
        {
          "name": "addRangeStart",
          "type": "long long"
        },
        {
          "name": "end",
          "type": "long long"
        },
        {
          "name": "to",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "addMappingFrom:to:": {
      "name": "addMappingFrom:to:",
      "bridgedName": "addMappingFrom_to",
      "args": [
        {
          "name": "addMappingFrom",
          "type": "long long"
        },
        {
          "name": "to",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "nextWord": {
      "name": "nextWord",
      "bridgedName": "nextWord",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "nextInteger": {
      "name": "nextInteger",
      "bridgedName": "nextInteger",
      "args": [],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "integersFromHex:": {
      "name": "integersFromHex:",
      "bridgedName": "integersFromHex",
      "args": [
        {
          "name": "integersFromHex",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithData:": {
      "name": "initWithData:",
      "bridgedName": "initWithData",
      "args": [
        {
          "name": "initWithData",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithStream:": {
      "name": "initWithStream:",
      "bridgedName": "initWithStream",
      "args": [
        {
          "name": "initWithStream",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "integersInProgress": {
      "name": "integersInProgress",
      "pointer": true,
      "type": "NSArray",
      "attributes": [
        "retain",
        "nonatomic"
      ]
    },
    "vertical": {
      "name": "vertical",
      "pointer": false,
      "type": "BOOL",
      "attributes": [
        "nonatomic"
      ]
    },
    "max": {
      "name": "max",
      "pointer": false,
      "type": "unsigned long long",
      "attributes": [
        "nonatomic"
      ]
    },
    "position": {
      "name": "position",
      "pointer": false,
      "type": "unsigned long long",
      "attributes": [
        "nonatomic"
      ]
    },
    "words": {
      "name": "words",
      "pointer": true,
      "type": "NSArray",
      "attributes": [
        "retain",
        "nonatomic"
      ]
    },
    "source": {
      "name": "source",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "retain",
        "nonatomic"
      ]
    },
    "map": {
      "name": "map",
      "pointer": true,
      "type": "NSMutableDictionary",
      "attributes": [
        "retain",
        "nonatomic"
      ]
    }
  }
}