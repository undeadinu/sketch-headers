{
  "imports": [
    "NSObject.h"
  ],
  "classes": [
    "FBBezierContour",
    "NSArray",
    "NSMutableArray"
  ],
  "protocol": false,
  "className": "FBContourOverlap",
  "extends": "NSObject",
  "interfaces": [],
  "methods": {
    "contourOverlap": {
      "name": "contourOverlap",
      "bridgedName": "contourOverlap",
      "args": [],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    ".cxx_destruct": {
      "name": ".cxx_destruct",
      "bridgedName": ".cxx_destruct",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "debugQuickLookObject": {
      "name": "debugQuickLookObject",
      "bridgedName": "debugQuickLookObject",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "description": {
      "name": "description",
      "bridgedName": "description",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isBetweenContour:andContour:": {
      "name": "isBetweenContour:andContour:",
      "bridgedName": "isBetweenContour_andContour",
      "args": [
        {
          "name": "isBetweenContour",
          "type": "id"
        },
        {
          "name": "andContour",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isEmpty": {
      "name": "isEmpty",
      "bridgedName": "isEmpty",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isComplete": {
      "name": "isComplete",
      "bridgedName": "isComplete",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "reset": {
      "name": "reset",
      "bridgedName": "reset",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "runsWithBlock:": {
      "name": "runsWithBlock:",
      "bridgedName": "runsWithBlock",
      "args": [
        {
          "name": "runsWithBlock",
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "doesContainParameter:onEdge:": {
      "name": "doesContainParameter:onEdge:",
      "bridgedName": "doesContainParameter_onEdge",
      "args": [
        {
          "name": "doesContainParameter",
          "type": "double"
        },
        {
          "name": "onEdge",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "doesContainCrossing:": {
      "name": "doesContainCrossing:",
      "bridgedName": "doesContainCrossing",
      "args": [
        {
          "name": "doesContainCrossing",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "addOverlap:forEdge1:edge2:": {
      "name": "addOverlap:forEdge1:edge2:",
      "bridgedName": "addOverlap_forEdge1_edge2",
      "args": [
        {
          "name": "addOverlap",
          "type": "id"
        },
        {
          "name": "forEdge1",
          "type": "id"
        },
        {
          "name": "edge2",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "contour2": {
      "name": "contour2",
      "pointer": true,
      "type": "FBBezierContour",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    },
    "contour1": {
      "name": "contour1",
      "pointer": true,
      "type": "FBBezierContour",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    },
    "overlapRuns": {
      "name": "overlapRuns",
      "pointer": true,
      "type": "NSArray",
      "attributes": [
        "readonly",
        "copy",
        "nonatomic"
      ]
    },
    "runs_": {
      "name": "runs_",
      "pointer": true,
      "type": "NSMutableArray",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    }
  }
}