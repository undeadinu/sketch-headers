{
  "imports": [
    "NSATSTypesetter.h"
  ],
  "classes": [
    "BCRangeMap"
  ],
  "protocol": false,
  "className": "MSConstantBaselineTypesetter",
  "extends": "NSATSTypesetter",
  "interfaces": [],
  "methods": {
    ".cxx_destruct": {
      "name": ".cxx_destruct",
      "bridgedName": ".cxx_destruct",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setLineFragmentRect:forGlyphRange:usedRect:baselineOffset:": {
      "name": "setLineFragmentRect:forGlyphRange:usedRect:baselineOffset:",
      "bridgedName": "setLineFragmentRect_forGlyphRange_usedRect_baselineOffset",
      "args": [
        {
          "name": "setLineFragmentRect",
          "type": "struct CGRect"
        },
        {
          "name": "forGlyphRange",
          "type": "struct _NSRange"
        },
        {
          "name": "usedRect",
          "type": "struct CGRect"
        },
        {
          "name": "baselineOffset",
          "type": "double"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "willSetLineFragmentRect:forGlyphRange:usedRect:baselineOffset:": {
      "name": "willSetLineFragmentRect:forGlyphRange:usedRect:baselineOffset:",
      "bridgedName": "willSetLineFragmentRect_forGlyphRange_usedRect_baselineOffset",
      "args": [
        {
          "name": "willSetLineFragmentRect",
          "type": "struct CGRect *"
        },
        {
          "name": "forGlyphRange",
          "type": "struct _NSRange"
        },
        {
          "name": "usedRect",
          "type": "struct CGRect *"
        },
        {
          "name": "baselineOffset",
          "type": "double *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:": {
      "name": "paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:",
      "bridgedName": "paragraphSpacingBeforeGlyphAtIndex_withProposedLineFragmentRect",
      "args": [
        {
          "name": "paragraphSpacingBeforeGlyphAtIndex",
          "type": "unsigned long long"
        },
        {
          "name": "withProposedLineFragmentRect",
          "type": "struct CGRect"
        }
      ],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "invalidateLayoutFromGlyphLocation:": {
      "name": "invalidateLayoutFromGlyphLocation:",
      "bridgedName": "invalidateLayoutFromGlyphLocation",
      "args": [
        {
          "name": "invalidateLayoutFromGlyphLocation",
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "maxLineHeightFontFromCurrentParagraph:maxLineHeight:charcterRange:": {
      "name": "maxLineHeightFontFromCurrentParagraph:maxLineHeight:charcterRange:",
      "bridgedName": "maxLineHeightFontFromCurrentParagraph_maxLineHeight_charcterRange",
      "args": [
        {
          "name": "maxLineHeightFontFromCurrentParagraph",
          "type": "double *"
        },
        {
          "name": "maxLineHeight",
          "type": "double *"
        },
        {
          "name": "charcterRange",
          "type": "struct _NSRange *"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "constantBaselineGlyphRangeForGlyphLocation:": {
      "name": "constantBaselineGlyphRangeForGlyphLocation:",
      "bridgedName": "constantBaselineGlyphRangeForGlyphLocation",
      "args": [
        {
          "name": "constantBaselineGlyphRangeForGlyphLocation",
          "type": "unsigned long long"
        }
      ],
      "returns": "struct _NSRange",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "usesFontLeading": {
      "name": "usesFontLeading",
      "bridgedName": "usesFontLeading",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "init": {
      "name": "init",
      "bridgedName": "init",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "rangeMap": {
      "name": "rangeMap",
      "pointer": true,
      "type": "BCRangeMap",
      "attributes": [
        "retain",
        "nonatomic"
      ]
    }
  }
}