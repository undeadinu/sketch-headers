{
  "imports": [
    "_MSRect.h",
    "MSRect.h"
  ],
  "classes": [],
  "protocol": true,
  "className": "MSRect",
  "extends": "_MSRect",
  "interfaces": [
    "MSRect"
  ],
  "methods": {
    "rectWithUnionOfRects:": {
      "name": "rectWithUnionOfRects:",
      "bridgedName": "rectWithUnionOfRects",
      "args": [
        {
          "name": "rectWithUnionOfRects",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "rectWithRect:": {
      "name": "rectWithRect:",
      "bridgedName": "rectWithRect",
      "args": [
        {
          "name": "rectWithRect",
          "type": "struct CGRect"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "rectWithX:y:width:height:": {
      "name": "rectWithX:y:width:height:",
      "bridgedName": "rectWithX_y_width_height",
      "args": [
        {
          "name": "rectWithX",
          "type": "double"
        },
        {
          "name": "y",
          "type": "double"
        },
        {
          "name": "width",
          "type": "double"
        },
        {
          "name": "height",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "isIntegral": {
      "name": "isIntegral",
      "bridgedName": "isIntegral",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setRectByIgnoringProportions:": {
      "name": "setRectByIgnoringProportions:",
      "bridgedName": "setRectByIgnoringProportions",
      "args": [
        {
          "name": "setRectByIgnoringProportions",
          "type": "struct CGRect"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setConstrainProportions:": {
      "name": "setConstrainProportions:",
      "bridgedName": "setConstrainProportions",
      "args": [
        {
          "name": "setConstrainProportions",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "calculateProportions": {
      "name": "calculateProportions",
      "bridgedName": "calculateProportions",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "description": {
      "name": "description",
      "bridgedName": "description",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "log": {
      "name": "log",
      "bridgedName": "log",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "containsPoint:": {
      "name": "containsPoint:",
      "bridgedName": "containsPoint",
      "args": [
        {
          "name": "containsPoint",
          "type": "struct CGPoint"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isEqual:": {
      "name": "isEqual:",
      "bridgedName": "isEqual",
      "args": [
        {
          "name": "isEqual",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "scaleBy:": {
      "name": "scaleBy:",
      "bridgedName": "scaleBy",
      "args": [
        {
          "name": "scaleBy",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "makeRectIntegral": {
      "name": "makeRectIntegral",
      "bridgedName": "makeRectIntegral",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "makeOriginIntegral": {
      "name": "makeOriginIntegral",
      "bridgedName": "makeOriginIntegral",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setY:": {
      "name": "setY:",
      "bridgedName": "setY",
      "args": [
        {
          "name": "setY",
          "type": "double"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setX:": {
      "name": "setX:",
      "bridgedName": "setX",
      "args": [
        {
          "name": "setX",
          "type": "double"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setHeight:": {
      "name": "setHeight:",
      "bridgedName": "setHeight",
      "args": [
        {
          "name": "setHeight",
          "type": "double"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "delegate": {
      "name": "delegate",
      "bridgedName": "delegate",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setWidth:": {
      "name": "setWidth:",
      "bridgedName": "setWidth",
      "args": [
        {
          "name": "setWidth",
          "type": "double"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "shouldConstrainProportions": {
      "name": "shouldConstrainProportions",
      "bridgedName": "shouldConstrainProportions",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "performUpdatesWithUnconstrainedProportions:": {
      "name": "performUpdatesWithUnconstrainedProportions:",
      "bridgedName": "performUpdatesWithUnconstrainedProportions",
      "args": [
        {
          "name": "performUpdatesWithUnconstrainedProportions",
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setNilValueForKey:": {
      "name": "setNilValueForKey:",
      "bridgedName": "setNilValueForKey",
      "args": [
        {
          "name": "setNilValueForKey",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "objectDidInit": {
      "name": "objectDidInit",
      "bridgedName": "objectDidInit",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithRect:": {
      "name": "initWithRect:",
      "bridgedName": "initWithRect",
      "args": [
        {
          "name": "initWithRect",
          "type": "struct CGRect"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithX:y:width:height:": {
      "name": "initWithX:y:width:height:",
      "bridgedName": "initWithX_y_width_height",
      "args": [
        {
          "name": "initWithX",
          "type": "double"
        },
        {
          "name": "y",
          "type": "double"
        },
        {
          "name": "width",
          "type": "double"
        },
        {
          "name": "height",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "origin": {
      "name": "origin",
      "pointer": false,
      "type": "struct CGPoint",
      "attributes": [
        "nonatomic"
      ]
    },
    "size": {
      "name": "size",
      "pointer": false,
      "type": "struct CGSize",
      "attributes": [
        "nonatomic"
      ]
    },
    "rect": {
      "name": "rect",
      "pointer": false,
      "type": "struct CGRect",
      "attributes": [
        "nonatomic"
      ]
    },
    "proportions": {
      "name": "proportions",
      "pointer": false,
      "type": "double",
      "attributes": [
        "nonatomic"
      ]
    },
    "bottom": {
      "name": "bottom",
      "pointer": false,
      "type": "double",
      "attributes": [
        "nonatomic"
      ]
    },
    "right": {
      "name": "right",
      "pointer": false,
      "type": "double",
      "attributes": [
        "nonatomic"
      ]
    },
    "mid": {
      "name": "mid",
      "pointer": false,
      "type": "struct CGPoint",
      "attributes": [
        "nonatomic"
      ]
    },
    "primitiveConstrainProportions": {
      "name": "primitiveConstrainProportions",
      "pointer": false,
      "type": "BOOL",
      "attributes": [
        "nonatomic"
      ]
    },
    "midY": {
      "name": "midY",
      "pointer": false,
      "type": "double",
      "attributes": [
        "nonatomic"
      ]
    },
    "midX": {
      "name": "midX",
      "pointer": false,
      "type": "double",
      "attributes": [
        "nonatomic"
      ]
    },
    "maxY": {
      "name": "maxY",
      "pointer": false,
      "type": "double",
      "attributes": [
        "nonatomic"
      ]
    },
    "minY": {
      "name": "minY",
      "pointer": false,
      "type": "double",
      "attributes": [
        "nonatomic"
      ]
    },
    "maxX": {
      "name": "maxX",
      "pointer": false,
      "type": "double",
      "attributes": [
        "nonatomic"
      ]
    },
    "minX": {
      "name": "minX",
      "pointer": false,
      "type": "double",
      "attributes": [
        "nonatomic"
      ]
    },
    "top": {
      "name": "top",
      "pointer": false,
      "type": "double",
      "attributes": [
        "nonatomic"
      ]
    },
    "left": {
      "name": "left",
      "pointer": false,
      "type": "double",
      "attributes": [
        "nonatomic"
      ]
    }
  }
}