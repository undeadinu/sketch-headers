{
  "imports": [
    "NSObject.h"
  ],
  "classes": [
    "NSEvent",
    "NSForceClickMonitor",
    "NSView"
  ],
  "protocol": false,
  "className": "NSImmediateActionToQuickLookPresentationAdaptor",
  "extends": "NSObject",
  "interfaces": [],
  "methods": {
    "isForceClickPossibleFromEvent:": {
      "name": "isForceClickPossibleFromEvent:",
      "bridgedName": "isForceClickPossibleFromEvent",
      "args": [
        {
          "name": "isForceClickPossibleFromEvent",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "class",
      "kindIndicator": "+"
    },
    ".cxx_destruct": {
      "name": ".cxx_destruct",
      "bridgedName": ".cxx_destruct",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_forceClickMonitorDidChange:": {
      "name": "_forceClickMonitorDidChange:",
      "bridgedName": "_forceClickMonitorDidChange",
      "args": [
        {
          "name": "_forceClickMonitorDidChange",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_startEvent": {
      "name": "_startEvent",
      "bridgedName": "_startEvent",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_forceClickMonitor": {
      "name": "_forceClickMonitor",
      "bridgedName": "_forceClickMonitor",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "locationInView:": {
      "name": "locationInView:",
      "bridgedName": "locationInView",
      "args": [
        {
          "name": "locationInView",
          "type": "id"
        }
      ],
      "returns": "struct CGPoint",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_presentWithQuickLookEvent:": {
      "name": "_presentWithQuickLookEvent:",
      "bridgedName": "_presentWithQuickLookEvent",
      "args": [
        {
          "name": "_presentWithQuickLookEvent",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "presentQuickLookInView:": {
      "name": "presentQuickLookInView:",
      "bridgedName": "presentQuickLookInView",
      "args": [
        {
          "name": "presentQuickLookInView",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "cancel": {
      "name": "cancel",
      "bridgedName": "cancel",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_reset": {
      "name": "_reset",
      "bridgedName": "_reset",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_halfReset": {
      "name": "_halfReset",
      "bridgedName": "_halfReset",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "state": {
      "name": "state",
      "bridgedName": "state",
      "args": [],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_delegate": {
      "name": "_delegate",
      "bridgedName": "_delegate",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "animationController": {
      "name": "animationController",
      "pointer": false,
      "type": "id <NSImmediateActionAnimationController>",
      "attributes": [
        "retain"
      ]
    },
    "modifierFlags": {
      "name": "modifierFlags",
      "pointer": false,
      "type": "unsigned long long",
      "attributes": [
        "readonly"
      ]
    },
    "animationProgress": {
      "name": "animationProgress",
      "pointer": false,
      "type": "double",
      "attributes": [
        "readonly"
      ]
    }
  }
}