{
  "imports": [
    "NSObject.h"
  ],
  "classes": [
    "NSArray",
    "NSIndexPath",
    "NSMutableArray"
  ],
  "protocol": false,
  "className": "NSTreeNode",
  "extends": "NSObject",
  "interfaces": [],
  "methods": {
    "treeNodeWithRepresentedObject:": {
      "name": "treeNodeWithRepresentedObject:",
      "bridgedName": "treeNodeWithRepresentedObject",
      "args": [
        {
          "name": "treeNodeWithRepresentedObject",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    ".cxx_destruct": {
      "name": ".cxx_destruct",
      "bridgedName": ".cxx_destruct",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "objectAtIndexPath:": {
      "name": "objectAtIndexPath:",
      "bridgedName": "objectAtIndexPath",
      "args": [
        {
          "name": "objectAtIndexPath",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_descendantNodeWithRepresentedObjectLineage:": {
      "name": "_descendantNodeWithRepresentedObjectLineage:",
      "bridgedName": "_descendantNodeWithRepresentedObjectLineage",
      "args": [
        {
          "name": "_descendantNodeWithRepresentedObjectLineage",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "sortWithSortDescriptors:recursively:": {
      "name": "sortWithSortDescriptors:recursively:",
      "bridgedName": "sortWithSortDescriptors_recursively",
      "args": [
        {
          "name": "sortWithSortDescriptors",
          "type": "id"
        },
        {
          "name": "recursively",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_indexPath": {
      "name": "_indexPath",
      "bridgedName": "_indexPath",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "startObservingModelKeyPath:": {
      "name": "startObservingModelKeyPath:",
      "bridgedName": "startObservingModelKeyPath",
      "args": [
        {
          "name": "startObservingModelKeyPath",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "countOfSubNodes": {
      "name": "countOfSubNodes",
      "bridgedName": "countOfSubNodes",
      "args": [],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "count": {
      "name": "count",
      "bridgedName": "count",
      "args": [],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "childCountForKeyPath:": {
      "name": "childCountForKeyPath:",
      "bridgedName": "childCountForKeyPath",
      "args": [
        {
          "name": "childCountForKeyPath",
          "type": "id"
        }
      ],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "objectInSubNodesAtIndex:": {
      "name": "objectInSubNodesAtIndex:",
      "bridgedName": "objectInSubNodesAtIndex",
      "args": [
        {
          "name": "objectInSubNodesAtIndex",
          "type": "unsigned long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "subnodeAtIndex:": {
      "name": "subnodeAtIndex:",
      "bridgedName": "subnodeAtIndex",
      "args": [
        {
          "name": "subnodeAtIndex",
          "type": "unsigned long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "subNodesAtIndexes:": {
      "name": "subNodesAtIndexes:",
      "bridgedName": "subNodesAtIndexes",
      "args": [
        {
          "name": "subNodesAtIndexes",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "getSubNodes:range:": {
      "name": "getSubNodes:range:",
      "bridgedName": "getSubNodes_range",
      "args": [
        {
          "name": "getSubNodes",
          "type": "id *"
        },
        {
          "name": "range",
          "type": "struct _NSRange"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "willAccessChildNodes": {
      "name": "willAccessChildNodes",
      "bridgedName": "willAccessChildNodes",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "descendantNodeAtIndexPath:": {
      "name": "descendantNodeAtIndexPath:",
      "bridgedName": "descendantNodeAtIndexPath",
      "args": [
        {
          "name": "descendantNodeAtIndexPath",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_privateChildNodes": {
      "name": "_privateChildNodes",
      "bridgedName": "_privateChildNodes",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setParentNode:": {
      "name": "setParentNode:",
      "bridgedName": "setParentNode",
      "args": [
        {
          "name": "setParentNode",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_detachFromParent": {
      "name": "_detachFromParent",
      "bridgedName": "_detachFromParent",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setRepresentedObject:": {
      "name": "setRepresentedObject:",
      "bridgedName": "setRepresentedObject",
      "args": [
        {
          "name": "setRepresentedObject",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "observedObject": {
      "name": "observedObject",
      "bridgedName": "observedObject",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_ignoreObserving": {
      "name": "_ignoreObserving",
      "bridgedName": "_ignoreObserving",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_enableObserving": {
      "name": "_enableObserving",
      "bridgedName": "_enableObserving",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_disableObserving": {
      "name": "_disableObserving",
      "bridgedName": "_disableObserving",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "hasAncestor:": {
      "name": "hasAncestor:",
      "bridgedName": "hasAncestor",
      "args": [
        {
          "name": "hasAncestor",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "removeSubNodesAtIndexes:": {
      "name": "removeSubNodesAtIndexes:",
      "bridgedName": "removeSubNodesAtIndexes",
      "args": [
        {
          "name": "removeSubNodesAtIndexes",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_removeSubNodesAtIndexes:": {
      "name": "_removeSubNodesAtIndexes:",
      "bridgedName": "_removeSubNodesAtIndexes",
      "args": [
        {
          "name": "_removeSubNodesAtIndexes",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "removeObjectFromSubNodesAtIndex:": {
      "name": "removeObjectFromSubNodesAtIndex:",
      "bridgedName": "removeObjectFromSubNodesAtIndex",
      "args": [
        {
          "name": "removeObjectFromSubNodesAtIndex",
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_removeObjectFromSubNodesAtIndex:": {
      "name": "_removeObjectFromSubNodesAtIndex:",
      "bridgedName": "_removeObjectFromSubNodesAtIndex",
      "args": [
        {
          "name": "_removeObjectFromSubNodesAtIndex",
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "insertObject:inSubNodesAtIndex:": {
      "name": "insertObject:inSubNodesAtIndex:",
      "bridgedName": "insertObject_inSubNodesAtIndex",
      "args": [
        {
          "name": "insertObject",
          "type": "id"
        },
        {
          "name": "inSubNodesAtIndex",
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_insertObject:inSubNodesAtIndex:": {
      "name": "_insertObject:inSubNodesAtIndex:",
      "bridgedName": "_insertObject_inSubNodesAtIndex",
      "args": [
        {
          "name": "_insertObject",
          "type": "id"
        },
        {
          "name": "inSubNodesAtIndex",
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "observeValueForKeyPath:ofObject:change:context:": {
      "name": "observeValueForKeyPath:ofObject:change:context:",
      "bridgedName": "observeValueForKeyPath_ofObject_change_context",
      "args": [
        {
          "name": "observeValueForKeyPath",
          "type": "id"
        },
        {
          "name": "ofObject",
          "type": "id"
        },
        {
          "name": "change",
          "type": "id"
        },
        {
          "name": "context",
          "type": "void *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "observationInfo": {
      "name": "observationInfo",
      "bridgedName": "observationInfo",
      "args": [],
      "returns": "void *",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setObservationInfo:": {
      "name": "setObservationInfo:",
      "bridgedName": "setObservationInfo",
      "args": [
        {
          "name": "setObservationInfo",
          "type": "void *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "description": {
      "name": "description",
      "bridgedName": "description",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithRepresentedObject:": {
      "name": "initWithRepresentedObject:",
      "bridgedName": "initWithRepresentedObject",
      "args": [
        {
          "name": "initWithRepresentedObject",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "init": {
      "name": "init",
      "bridgedName": "init",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "indexPath": {
      "name": "indexPath",
      "pointer": true,
      "type": "NSIndexPath",
      "attributes": [
        "readonly"
      ]
    },
    "leaf": {
      "name": "leaf",
      "pointer": false,
      "type": "BOOL",
      "attributes": [
        "readonly",
        "getter=isLeaf"
      ]
    },
    "mutableChildNodes": {
      "name": "mutableChildNodes",
      "pointer": true,
      "type": "NSMutableArray",
      "attributes": [
        "readonly"
      ]
    },
    "childNodes": {
      "name": "childNodes",
      "pointer": true,
      "type": "NSArray",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "parentNode": {
      "name": "parentNode",
      "pointer": true,
      "type": "__weak NSTreeNode",
      "attributes": [
        "readonly"
      ]
    },
    "representedObject": {
      "name": "representedObject",
      "pointer": false,
      "type": "id",
      "attributes": [
        "readonly"
      ]
    }
  }
}