{
  "imports": [
    "NSObject.h",
    "BCJSONEncoding.h"
  ],
  "classes": [
    "NSDictionary",
    "NSString"
  ],
  "protocol": false,
  "className": "MSAttributedStringAttribute",
  "extends": "NSObject",
  "interfaces": [
    "BCJSONEncoding"
  ],
  "methods": {
    ".cxx_destruct": {
      "name": ".cxx_destruct",
      "bridgedName": ".cxx_destruct",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithJSONDecoder:": {
      "name": "initWithJSONDecoder:",
      "bridgedName": "initWithJSONDecoder",
      "args": [
        {
          "name": "initWithJSONDecoder",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "encodeAsJSON:": {
      "name": "encodeAsJSON:",
      "bridgedName": "encodeAsJSON",
      "args": [
        {
          "name": "encodeAsJSON",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "attributeDictionary": {
      "name": "attributeDictionary",
      "pointer": true,
      "type": "NSDictionary",
      "attributes": [
        "retain",
        "nonatomic"
      ]
    },
    "range": {
      "name": "range",
      "pointer": false,
      "type": "struct _NSRange",
      "attributes": [
        "nonatomic"
      ]
    },
    "debugDescription": {
      "name": "debugDescription",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "description": {
      "name": "description",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "hash": {
      "name": "hash",
      "pointer": false,
      "type": "unsigned long long",
      "attributes": [
        "readonly"
      ]
    },
    "superclass": {
      "name": "superclass",
      "pointer": false,
      "type": "Class",
      "attributes": [
        "readonly"
      ]
    }
  }
}