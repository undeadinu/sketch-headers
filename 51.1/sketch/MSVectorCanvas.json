{
  "imports": [
    "NSObject.h",
    "MSAlignmentEngineDelegate.h",
    "MSSelectVectorHandleGestureRecognizerDelegate.h"
  ],
  "classes": [
    "MSAlignmentEngine",
    "MSAlignmentEngineResult",
    "MSClickGestureRecognizer",
    "MSContentDrawView",
    "MSDragHandleGestureRecognizer",
    "MSDragSegmentGestureRecognizer",
    "MSDragToSelectGestureRecognizer",
    "MSPathController",
    "MSSelectVectorHandleGestureRecognizer",
    "MSShapeEditingBehavior",
    "MSShapeEventHandler",
    "MSVectorHandleStateDecider",
    "NSArray",
    "NSBezierPath",
    "NSIndexPath",
    "NSMutableArray",
    "NSString"
  ],
  "protocol": false,
  "className": "MSVectorCanvas",
  "extends": "NSObject",
  "interfaces": [
    "MSSelectVectorHandleGestureRecognizerDelegate",
    "MSAlignmentEngineDelegate"
  ],
  "methods": {
    ".cxx_destruct": {
      "name": ".cxx_destruct",
      "bridgedName": ".cxx_destruct",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "alignmentEngine:alignPoint:": {
      "name": "alignmentEngine:alignPoint:",
      "bridgedName": "alignmentEngine_alignPoint",
      "args": [
        {
          "name": "alignmentEngine",
          "type": "id"
        },
        {
          "name": "alignPoint",
          "type": "struct CGPoint"
        }
      ],
      "returns": "struct CGPoint",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "gestureRecognizerShouldDelaySelectionUntilMouseUp:": {
      "name": "gestureRecognizerShouldDelaySelectionUntilMouseUp:",
      "bridgedName": "gestureRecognizerShouldDelaySelectionUntilMouseUp",
      "args": [
        {
          "name": "gestureRecognizerShouldDelaySelectionUntilMouseUp",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "gestureRecognizer:shouldAttemptToRecognizeAtPoint:modifierFlags:": {
      "name": "gestureRecognizer:shouldAttemptToRecognizeAtPoint:modifierFlags:",
      "bridgedName": "gestureRecognizer_shouldAttemptToRecognizeAtPoint_modifierFlags",
      "args": [
        {
          "name": "gestureRecognizer",
          "type": "id"
        },
        {
          "name": "shouldAttemptToRecognizeAtPoint",
          "type": "struct CGPoint"
        },
        {
          "name": "modifierFlags",
          "type": "unsigned long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setNeedsUpdateCursor": {
      "name": "setNeedsUpdateCursor",
      "bridgedName": "setNeedsUpdateCursor",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "updateCursor": {
      "name": "updateCursor",
      "bridgedName": "updateCursor",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "trackMouse:": {
      "name": "trackMouse:",
      "bridgedName": "trackMouse",
      "args": [
        {
          "name": "trackMouse",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "clickToEndEditing:": {
      "name": "clickToEndEditing:",
      "bridgedName": "clickToEndEditing",
      "args": [
        {
          "name": "clickToEndEditing",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dragSegment:": {
      "name": "dragSegment:",
      "bridgedName": "dragSegment",
      "args": [
        {
          "name": "dragSegment",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "prepareToDragSegmentWithMouseLocation:modiferFlags:": {
      "name": "prepareToDragSegmentWithMouseLocation:modiferFlags:",
      "bridgedName": "prepareToDragSegmentWithMouseLocation_modiferFlags",
      "args": [
        {
          "name": "prepareToDragSegmentWithMouseLocation",
          "type": "struct CGPoint"
        },
        {
          "name": "modiferFlags",
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "locationForAddingPoint:modifierFlags:": {
      "name": "locationForAddingPoint:modifierFlags:",
      "bridgedName": "locationForAddingPoint_modifierFlags",
      "args": [
        {
          "name": "locationForAddingPoint",
          "type": "struct CGPoint"
        },
        {
          "name": "modifierFlags",
          "type": "unsigned long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "insertPointWithModifierFlags:": {
      "name": "insertPointWithModifierFlags:",
      "bridgedName": "insertPointWithModifierFlags",
      "args": [
        {
          "name": "insertPointWithModifierFlags",
          "type": "unsigned long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "selectHandle:": {
      "name": "selectHandle:",
      "bridgedName": "selectHandle",
      "args": [
        {
          "name": "selectHandle",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "moveCurveAdjustmentHandleToPoint:didChangeCurveMode:": {
      "name": "moveCurveAdjustmentHandleToPoint:didChangeCurveMode:",
      "bridgedName": "moveCurveAdjustmentHandleToPoint_didChangeCurveMode",
      "args": [
        {
          "name": "moveCurveAdjustmentHandleToPoint",
          "type": "struct CGPoint"
        },
        {
          "name": "didChangeCurveMode",
          "type": "char *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "toggleCurveModeOfPointAtIndexPath:modifierFlags:": {
      "name": "toggleCurveModeOfPointAtIndexPath:modifierFlags:",
      "bridgedName": "toggleCurveModeOfPointAtIndexPath_modifierFlags",
      "args": [
        {
          "name": "toggleCurveModeOfPointAtIndexPath",
          "type": "id"
        },
        {
          "name": "modifierFlags",
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "determineLocationAndSnappingOfDrag:": {
      "name": "determineLocationAndSnappingOfDrag:",
      "bridgedName": "determineLocationAndSnappingOfDrag",
      "args": [
        {
          "name": "determineLocationAndSnappingOfDrag",
          "type": "id"
        }
      ],
      "returns": "struct CGPoint",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dragHandle:": {
      "name": "dragHandle:",
      "bridgedName": "dragHandle",
      "args": [
        {
          "name": "dragHandle",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "flagsChanged:": {
      "name": "flagsChanged:",
      "bridgedName": "flagsChanged",
      "args": [
        {
          "name": "flagsChanged",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dragToSelect:": {
      "name": "dragToSelect:",
      "bridgedName": "dragToSelect",
      "args": [
        {
          "name": "dragToSelect",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "clickToSelect:": {
      "name": "clickToSelect:",
      "bridgedName": "clickToSelect",
      "args": [
        {
          "name": "clickToSelect",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "mouseUpAtPoint:": {
      "name": "mouseUpAtPoint:",
      "bridgedName": "mouseUpAtPoint",
      "args": [
        {
          "name": "mouseUpAtPoint",
          "type": "struct CGPoint"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "segmentAtIndexPath:": {
      "name": "segmentAtIndexPath:",
      "bridgedName": "segmentAtIndexPath",
      "args": [
        {
          "name": "segmentAtIndexPath",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "doubleMouseDownAtPoint:modifierFlags:": {
      "name": "doubleMouseDownAtPoint:modifierFlags:",
      "bridgedName": "doubleMouseDownAtPoint_modifierFlags",
      "args": [
        {
          "name": "doubleMouseDownAtPoint",
          "type": "struct CGPoint"
        },
        {
          "name": "modifierFlags",
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "singleMouseDownAtPoint:modifierFlags:": {
      "name": "singleMouseDownAtPoint:modifierFlags:",
      "bridgedName": "singleMouseDownAtPoint_modifierFlags",
      "args": [
        {
          "name": "singleMouseDownAtPoint",
          "type": "struct CGPoint"
        },
        {
          "name": "modifierFlags",
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "delete:": {
      "name": "delete:",
      "bridgedName": "delete",
      "args": [
        {
          "name": "delete",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "adjustHandle:toValue:onAxis:": {
      "name": "adjustHandle:toValue:onAxis:",
      "bridgedName": "adjustHandle_toValue_onAxis",
      "args": [
        {
          "name": "adjustHandle",
          "type": "id"
        },
        {
          "name": "toValue",
          "type": "double"
        },
        {
          "name": "onAxis",
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "adjustHandlesToValue:onAxis:": {
      "name": "adjustHandlesToValue:onAxis:",
      "bridgedName": "adjustHandlesToValue_onAxis",
      "args": [
        {
          "name": "adjustHandlesToValue",
          "type": "double"
        },
        {
          "name": "onAxis",
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "distributeVectorPointsToAxis:": {
      "name": "distributeVectorPointsToAxis:",
      "bridgedName": "distributeVectorPointsToAxis",
      "args": [
        {
          "name": "distributeVectorPointsToAxis",
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "alignVectorPointsToKey:": {
      "name": "alignVectorPointsToKey:",
      "bridgedName": "alignVectorPointsToKey",
      "args": [
        {
          "name": "alignVectorPointsToKey",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "changeToCurveMode:": {
      "name": "changeToCurveMode:",
      "bridgedName": "changeToCurveMode",
      "args": [
        {
          "name": "changeToCurveMode",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "indexPathsForHandlesInRect:": {
      "name": "indexPathsForHandlesInRect:",
      "bridgedName": "indexPathsForHandlesInRect",
      "args": [
        {
          "name": "indexPathsForHandlesInRect",
          "type": "struct CGRect"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "indexPathOfSegmentAtPoint:": {
      "name": "indexPathOfSegmentAtPoint:",
      "bridgedName": "indexPathOfSegmentAtPoint",
      "args": [
        {
          "name": "indexPathOfSegmentAtPoint",
          "type": "struct CGPoint"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "indexPathOfHandleAtPoint:": {
      "name": "indexPathOfHandleAtPoint:",
      "bridgedName": "indexPathOfHandleAtPoint",
      "args": [
        {
          "name": "indexPathOfHandleAtPoint",
          "type": "struct CGPoint"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "overlayDrawingRectForLayer:": {
      "name": "overlayDrawingRectForLayer:",
      "bridgedName": "overlayDrawingRectForLayer",
      "args": [
        {
          "name": "overlayDrawingRectForLayer",
          "type": "id"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setOverlayNeedsDisplay": {
      "name": "setOverlayNeedsDisplay",
      "bridgedName": "setOverlayNeedsDisplay",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "convertPointToView:fromPathCoordinatesOfShape:": {
      "name": "convertPointToView:fromPathCoordinatesOfShape:",
      "bridgedName": "convertPointToView_fromPathCoordinatesOfShape",
      "args": [
        {
          "name": "convertPointToView",
          "type": "struct CGPoint"
        },
        {
          "name": "fromPathCoordinatesOfShape",
          "type": "id"
        }
      ],
      "returns": "struct CGPoint",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawHandles": {
      "name": "drawHandles",
      "bridgedName": "drawHandles",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawingRectForInsertionAtPoint:": {
      "name": "drawingRectForInsertionAtPoint:",
      "bridgedName": "drawingRectForInsertionAtPoint",
      "args": [
        {
          "name": "drawingRectForInsertionAtPoint",
          "type": "struct CGPoint"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawInsertionPoint": {
      "name": "drawInsertionPoint",
      "bridgedName": "drawInsertionPoint",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawHighlightedSegment": {
      "name": "drawHighlightedSegment",
      "bridgedName": "drawHighlightedSegment",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawSnaps": {
      "name": "drawSnaps",
      "bridgedName": "drawSnaps",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawWire": {
      "name": "drawWire",
      "bridgedName": "drawWire",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawHairline": {
      "name": "drawHairline",
      "bridgedName": "drawHairline",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "makeWireBezierPathForClosingPath:indexPathForSelectedHandle:": {
      "name": "makeWireBezierPathForClosingPath:indexPathForSelectedHandle:",
      "bridgedName": "makeWireBezierPathForClosingPath_indexPathForSelectedHandle",
      "args": [
        {
          "name": "makeWireBezierPathForClosingPath",
          "type": "BOOL"
        },
        {
          "name": "indexPathForSelectedHandle",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "updateWire": {
      "name": "updateWire",
      "bridgedName": "updateWire",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "includePointForSnapping:inPathLayer:": {
      "name": "includePointForSnapping:inPathLayer:",
      "bridgedName": "includePointForSnapping_inPathLayer",
      "args": [
        {
          "name": "includePointForSnapping",
          "type": "struct CGPoint"
        },
        {
          "name": "inPathLayer",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "addTargetsToSnapperForDragging:": {
      "name": "addTargetsToSnapperForDragging:",
      "bridgedName": "addTargetsToSnapperForDragging",
      "args": [
        {
          "name": "addTargetsToSnapperForDragging",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "prepareSnapper": {
      "name": "prepareSnapper",
      "bridgedName": "prepareSnapper",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "changeContext": {
      "name": "changeContext",
      "bridgedName": "changeContext",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "toggleSelectionOfHandleAtIndexPath:notifyDelegate:": {
      "name": "toggleSelectionOfHandleAtIndexPath:notifyDelegate:",
      "bridgedName": "toggleSelectionOfHandleAtIndexPath_notifyDelegate",
      "args": [
        {
          "name": "toggleSelectionOfHandleAtIndexPath",
          "type": "id"
        },
        {
          "name": "notifyDelegate",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "didChangeSelection": {
      "name": "didChangeSelection",
      "bridgedName": "didChangeSelection",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "deselectHandleAtIndexPath:": {
      "name": "deselectHandleAtIndexPath:",
      "bridgedName": "deselectHandleAtIndexPath",
      "args": [
        {
          "name": "deselectHandleAtIndexPath",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "selectHandlesAtIndexPaths:notifyDelegate:": {
      "name": "selectHandlesAtIndexPaths:notifyDelegate:",
      "bridgedName": "selectHandlesAtIndexPaths_notifyDelegate",
      "args": [
        {
          "name": "selectHandlesAtIndexPaths",
          "type": "id"
        },
        {
          "name": "notifyDelegate",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "selectHandlesAtIndexPaths:": {
      "name": "selectHandlesAtIndexPaths:",
      "bridgedName": "selectHandlesAtIndexPaths",
      "args": [
        {
          "name": "selectHandlesAtIndexPaths",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "selectHandleAtIndexPath:extendSelection:notifyDelegate:": {
      "name": "selectHandleAtIndexPath:extendSelection:notifyDelegate:",
      "bridgedName": "selectHandleAtIndexPath_extendSelection_notifyDelegate",
      "args": [
        {
          "name": "selectHandleAtIndexPath",
          "type": "id"
        },
        {
          "name": "extendSelection",
          "type": "BOOL"
        },
        {
          "name": "notifyDelegate",
          "type": "BOOL"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "selectHandleAtIndexPath:extendSelection:": {
      "name": "selectHandleAtIndexPath:extendSelection:",
      "bridgedName": "selectHandleAtIndexPath_extendSelection",
      "args": [
        {
          "name": "selectHandleAtIndexPath",
          "type": "id"
        },
        {
          "name": "extendSelection",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "didChangeAllowSelectionOnly": {
      "name": "didChangeAllowSelectionOnly",
      "bridgedName": "didChangeAllowSelectionOnly",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "updateToolStateWithMouseLocation:modifierFlags:": {
      "name": "updateToolStateWithMouseLocation:modifierFlags:",
      "bridgedName": "updateToolStateWithMouseLocation_modifierFlags",
      "args": [
        {
          "name": "updateToolStateWithMouseLocation",
          "type": "struct CGPoint"
        },
        {
          "name": "modifierFlags",
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setVectorTool:indexPath:insertionPoint:": {
      "name": "setVectorTool:indexPath:insertionPoint:",
      "bridgedName": "setVectorTool_indexPath_insertionPoint",
      "args": [
        {
          "name": "setVectorTool",
          "type": "unsigned long long"
        },
        {
          "name": "indexPath",
          "type": "id"
        },
        {
          "name": "insertionPoint",
          "type": "struct CGPoint"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "selectLayers:extendSelection:": {
      "name": "selectLayers:extendSelection:",
      "bridgedName": "selectLayers_extendSelection",
      "args": [
        {
          "name": "selectLayers",
          "type": "id"
        },
        {
          "name": "extendSelection",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "pathLayersForLayer:": {
      "name": "pathLayersForLayer:",
      "bridgedName": "pathLayersForLayer",
      "args": [
        {
          "name": "pathLayersForLayer",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "rebuildVisibleLayersMaintainingSelection:": {
      "name": "rebuildVisibleLayersMaintainingSelection:",
      "bridgedName": "rebuildVisibleLayersMaintainingSelection",
      "args": [
        {
          "name": "rebuildVisibleLayersMaintainingSelection",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setVisibleLayers:": {
      "name": "setVisibleLayers:",
      "bridgedName": "setVisibleLayers",
      "args": [
        {
          "name": "setVisibleLayers",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "registerWithEventHandler:": {
      "name": "registerWithEventHandler:",
      "bridgedName": "registerWithEventHandler",
      "args": [
        {
          "name": "registerWithEventHandler",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "init": {
      "name": "init",
      "bridgedName": "init",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "handleStateDecider": {
      "name": "handleStateDecider",
      "pointer": true,
      "type": "MSVectorHandleStateDecider",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    },
    "wireBezierPath": {
      "name": "wireBezierPath",
      "pointer": true,
      "type": "NSBezierPath",
      "attributes": [
        "retain",
        "nonatomic"
      ]
    },
    "shapeCenterSnapTargets": {
      "name": "shapeCenterSnapTargets",
      "pointer": true,
      "type": "NSArray",
      "attributes": [
        "copy",
        "nonatomic"
      ]
    },
    "snapper": {
      "name": "snapper",
      "pointer": true,
      "type": "MSAlignmentEngine",
      "attributes": [
        "retain",
        "nonatomic"
      ]
    },
    "activeHandleBehavior": {
      "name": "activeHandleBehavior",
      "pointer": false,
      "type": "unsigned long long",
      "attributes": [
        "nonatomic"
      ]
    },
    "insertionPoint": {
      "name": "insertionPoint",
      "pointer": false,
      "type": "struct CGPoint",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    },
    "activeIndexPath": {
      "name": "activeIndexPath",
      "pointer": true,
      "type": "NSIndexPath",
      "attributes": [
        "readonly",
        "copy",
        "nonatomic"
      ]
    },
    "vectorTool": {
      "name": "vectorTool",
      "pointer": false,
      "type": "unsigned long long",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    },
    "clickToEndEditingGestureRecognizer": {
      "name": "clickToEndEditingGestureRecognizer",
      "pointer": true,
      "type": "MSClickGestureRecognizer",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    },
    "dragSegmentGestureRecognizer": {
      "name": "dragSegmentGestureRecognizer",
      "pointer": true,
      "type": "MSDragSegmentGestureRecognizer",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    },
    "dragHandleGestureRecognizer": {
      "name": "dragHandleGestureRecognizer",
      "pointer": true,
      "type": "MSDragHandleGestureRecognizer",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    },
    "clickToSelectGestureRecognizer": {
      "name": "clickToSelectGestureRecognizer",
      "pointer": true,
      "type": "MSSelectVectorHandleGestureRecognizer",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    },
    "dragToSelectGestureRecognizer": {
      "name": "dragToSelectGestureRecognizer",
      "pointer": true,
      "type": "MSDragToSelectGestureRecognizer",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    },
    "delegate": {
      "name": "delegate",
      "pointer": false,
      "type": "__weak id <MSVectorCanvasDelegate>",
      "attributes": [
        "nonatomic"
      ]
    },
    "snaps": {
      "name": "snaps",
      "pointer": true,
      "type": "MSAlignmentEngineResult",
      "attributes": [
        "copy",
        "nonatomic"
      ]
    },
    "editingBehavior": {
      "name": "editingBehavior",
      "pointer": true,
      "type": "MSShapeEditingBehavior",
      "attributes": [
        "retain",
        "nonatomic"
      ]
    },
    "visibleLayers": {
      "name": "visibleLayers",
      "pointer": true,
      "type": "NSArray",
      "attributes": [
        "readonly",
        "copy",
        "nonatomic"
      ]
    },
    "selectedLayers": {
      "name": "selectedLayers",
      "pointer": true,
      "type": "NSArray",
      "attributes": [
        "copy",
        "nonatomic"
      ]
    },
    "pathController": {
      "name": "pathController",
      "pointer": true,
      "type": "MSPathController",
      "attributes": [
        "retain",
        "nonatomic"
      ]
    },
    "view": {
      "name": "view",
      "pointer": true,
      "type": "MSContentDrawView",
      "attributes": [
        "nonatomic"
      ]
    },
    "eventHandler": {
      "name": "eventHandler",
      "pointer": true,
      "type": "__weak MSShapeEventHandler",
      "attributes": [
        "nonatomic"
      ]
    },
    "interactivelySelecting": {
      "name": "interactivelySelecting",
      "pointer": false,
      "type": "BOOL",
      "attributes": [
        "readonly",
        "nonatomic",
        "getter=isInteractivelySelecting"
      ]
    },
    "indexPathForHighlightedComponent": {
      "name": "indexPathForHighlightedComponent",
      "pointer": true,
      "type": "NSIndexPath",
      "attributes": [
        "readonly",
        "copy",
        "nonatomic"
      ]
    },
    "indexPathsForSelectedHandles": {
      "name": "indexPathsForSelectedHandles",
      "pointer": true,
      "type": "NSArray",
      "attributes": [
        "readonly",
        "copy",
        "nonatomic"
      ]
    },
    "debugDescription": {
      "name": "debugDescription",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "description": {
      "name": "description",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "hash": {
      "name": "hash",
      "pointer": false,
      "type": "unsigned long long",
      "attributes": [
        "readonly"
      ]
    },
    "superclass": {
      "name": "superclass",
      "pointer": false,
      "type": "Class",
      "attributes": [
        "readonly"
      ]
    }
  }
}