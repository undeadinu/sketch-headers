{
  "imports": [
    "NSVisualTabPickerTileContainerDataSource.h",
    "NSVisualTabPickerTileContainerDelegate.h"
  ],
  "classes": [
    "NSMutableArray",
    "NSMutableDictionary",
    "NSString",
    "NSVisualTabPickerRootViewController"
  ],
  "protocol": false,
  "className": "NSVisualTabPickerGridView",
  "extends": "NSView",
  "interfaces": [
    "NSVisualTabPickerTileContainerDataSource",
    "NSVisualTabPickerTileContainerDelegate"
  ],
  "methods": {
    ".cxx_destruct": {
      "name": ".cxx_destruct",
      "bridgedName": ".cxx_destruct",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_additionalHeightTakenByStackedTilesForRow:": {
      "name": "_additionalHeightTakenByStackedTilesForRow:",
      "bridgedName": "_additionalHeightTakenByStackedTilesForRow",
      "args": [
        {
          "name": "_additionalHeightTakenByStackedTilesForRow",
          "type": "unsigned long long"
        }
      ],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_getHorizontalLeadingOffset:trailingOffset:": {
      "name": "_getHorizontalLeadingOffset:trailingOffset:",
      "bridgedName": "_getHorizontalLeadingOffset_trailingOffset",
      "args": [
        {
          "name": "_getHorizontalLeadingOffset",
          "type": "double *"
        },
        {
          "name": "trailingOffset",
          "type": "double *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_computeArrayOfTabItemsPerContainer": {
      "name": "_computeArrayOfTabItemsPerContainer",
      "bridgedName": "_computeArrayOfTabItemsPerContainer",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_addCreateNewTabContainerView": {
      "name": "_addCreateNewTabContainerView",
      "bridgedName": "_addCreateNewTabContainerView",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_addContainerViewAtIndex:isVisible:": {
      "name": "_addContainerViewAtIndex:isVisible:",
      "bridgedName": "_addContainerViewAtIndex_isVisible",
      "args": [
        {
          "name": "_addContainerViewAtIndex",
          "type": "unsigned long long"
        },
        {
          "name": "isVisible",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setUpContainerViews": {
      "name": "_setUpContainerViews",
      "bridgedName": "_setUpContainerViews",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_horizontalMargin": {
      "name": "_horizontalMargin",
      "bridgedName": "_horizontalMargin",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setUpGridContainer": {
      "name": "_setUpGridContainer",
      "bridgedName": "_setUpGridContainer",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_containerViewForTabItem:containerView:indexInContainerView:": {
      "name": "_containerViewForTabItem:containerView:indexInContainerView:",
      "bridgedName": "_containerViewForTabItem_containerView_indexInContainerView",
      "args": [
        {
          "name": "_containerViewForTabItem",
          "type": "id"
        },
        {
          "name": "containerView",
          "type": "id *"
        },
        {
          "name": "indexInContainerView",
          "type": "unsigned long long *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_maximumNumberOfContainersPerRow": {
      "name": "_maximumNumberOfContainersPerRow",
      "bridgedName": "_maximumNumberOfContainersPerRow",
      "args": [],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_indexOfContainerForTabViewItem:": {
      "name": "_indexOfContainerForTabViewItem:",
      "bridgedName": "_indexOfContainerForTabViewItem",
      "args": [
        {
          "name": "_indexOfContainerForTabViewItem",
          "type": "id"
        }
      ],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_tabViewItemAtIndex:inContainerView:": {
      "name": "_tabViewItemAtIndex:inContainerView:",
      "bridgedName": "_tabViewItemAtIndex_inContainerView",
      "args": [
        {
          "name": "_tabViewItemAtIndex",
          "type": "unsigned long long"
        },
        {
          "name": "inContainerView",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_tabViewItemAtIndex:inContainerAtIndex:": {
      "name": "_tabViewItemAtIndex:inContainerAtIndex:",
      "bridgedName": "_tabViewItemAtIndex_inContainerAtIndex",
      "args": [
        {
          "name": "_tabViewItemAtIndex",
          "type": "unsigned long long"
        },
        {
          "name": "inContainerAtIndex",
          "type": "unsigned long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_indexForContainerView:": {
      "name": "_indexForContainerView:",
      "bridgedName": "_indexForContainerView",
      "args": [
        {
          "name": "_indexForContainerView",
          "type": "id"
        }
      ],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_shouldDisplayNewTabContainer": {
      "name": "_shouldDisplayNewTabContainer",
      "bridgedName": "_shouldDisplayNewTabContainer",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_numberOfRows": {
      "name": "_numberOfRows",
      "bridgedName": "_numberOfRows",
      "args": [],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_numberOfTilesInGridView": {
      "name": "_numberOfTilesInGridView",
      "bridgedName": "_numberOfTilesInGridView",
      "args": [],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_frameForTileAtIndex:": {
      "name": "_frameForTileAtIndex:",
      "bridgedName": "_frameForTileAtIndex",
      "args": [
        {
          "name": "_frameForTileAtIndex",
          "type": "unsigned long long"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_computeLayoutConstants": {
      "name": "_computeLayoutConstants",
      "bridgedName": "_computeLayoutConstants",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_hideTilesNotVisibleDuringExitAnimation": {
      "name": "_hideTilesNotVisibleDuringExitAnimation",
      "bridgedName": "_hideTilesNotVisibleDuringExitAnimation",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_willStartExitAnimation": {
      "name": "_willStartExitAnimation",
      "bridgedName": "_willStartExitAnimation",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_entryAnimationHasFinished": {
      "name": "_entryAnimationHasFinished",
      "bridgedName": "_entryAnimationHasFinished",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_unhideAllTiles": {
      "name": "_unhideAllTiles",
      "bridgedName": "_unhideAllTiles",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_rangeOfVisibleTiles": {
      "name": "_rangeOfVisibleTiles",
      "bridgedName": "_rangeOfVisibleTiles",
      "args": [],
      "returns": "struct _NSRange",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_resetGridView": {
      "name": "_resetGridView",
      "bridgedName": "_resetGridView",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityAttributeValue:": {
      "name": "accessibilityAttributeValue:",
      "bridgedName": "accessibilityAttributeValue",
      "args": [
        {
          "name": "accessibilityAttributeValue",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityAttributeNames": {
      "name": "accessibilityAttributeNames",
      "bridgedName": "accessibilityAttributeNames",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityIsIgnored": {
      "name": "accessibilityIsIgnored",
      "bridgedName": "accessibilityIsIgnored",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_dispatchMouseEventToTileContainers:": {
      "name": "_dispatchMouseEventToTileContainers:",
      "bridgedName": "_dispatchMouseEventToTileContainers",
      "args": [
        {
          "name": "_dispatchMouseEventToTileContainers",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "mouseMoved:": {
      "name": "mouseMoved:",
      "bridgedName": "mouseMoved",
      "args": [
        {
          "name": "mouseMoved",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "mouseExited:": {
      "name": "mouseExited:",
      "bridgedName": "mouseExited",
      "args": [
        {
          "name": "mouseExited",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "mouseEntered:": {
      "name": "mouseEntered:",
      "bridgedName": "mouseEntered",
      "args": [
        {
          "name": "mouseEntered",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "didRequestNewTabForNSVisualTabPickerTileContainerView:": {
      "name": "didRequestNewTabForNSVisualTabPickerTileContainerView:",
      "bridgedName": "didRequestNewTabForNSVisualTabPickerTileContainerView",
      "args": [
        {
          "name": "didRequestNewTabForNSVisualTabPickerTileContainerView",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "visualTabPickerTileContainerView:didSelectTileAtIndex:": {
      "name": "visualTabPickerTileContainerView:didSelectTileAtIndex:",
      "bridgedName": "visualTabPickerTileContainerView_didSelectTileAtIndex",
      "args": [
        {
          "name": "visualTabPickerTileContainerView",
          "type": "id"
        },
        {
          "name": "didSelectTileAtIndex",
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "visualTabPickerTileContainerView:closeTileAtIndex:": {
      "name": "visualTabPickerTileContainerView:closeTileAtIndex:",
      "bridgedName": "visualTabPickerTileContainerView_closeTileAtIndex",
      "args": [
        {
          "name": "visualTabPickerTileContainerView",
          "type": "id"
        },
        {
          "name": "closeTileAtIndex",
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "canCloseNSVisualTabPickerTileContainerView:": {
      "name": "canCloseNSVisualTabPickerTileContainerView:",
      "bridgedName": "canCloseNSVisualTabPickerTileContainerView",
      "args": [
        {
          "name": "canCloseNSVisualTabPickerTileContainerView",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "selectTabBarItem:": {
      "name": "selectTabBarItem:",
      "bridgedName": "selectTabBarItem",
      "args": [
        {
          "name": "selectTabBarItem",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "visualTabPickerTileContainerView:viewForTileAtIndex:": {
      "name": "visualTabPickerTileContainerView:viewForTileAtIndex:",
      "bridgedName": "visualTabPickerTileContainerView_viewForTileAtIndex",
      "args": [
        {
          "name": "visualTabPickerTileContainerView",
          "type": "id"
        },
        {
          "name": "viewForTileAtIndex",
          "type": "unsigned long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "visualTabPickerTileContainerView:titleForTileAtIndex:": {
      "name": "visualTabPickerTileContainerView:titleForTileAtIndex:",
      "bridgedName": "visualTabPickerTileContainerView_titleForTileAtIndex",
      "args": [
        {
          "name": "visualTabPickerTileContainerView",
          "type": "id"
        },
        {
          "name": "titleForTileAtIndex",
          "type": "unsigned long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "titleForNSVisualTabPickerTileContainerView:": {
      "name": "titleForNSVisualTabPickerTileContainerView:",
      "bridgedName": "titleForNSVisualTabPickerTileContainerView",
      "args": [
        {
          "name": "titleForNSVisualTabPickerTileContainerView",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "numberOfTilesInNSVisualTabPickerTileContainerView:": {
      "name": "numberOfTilesInNSVisualTabPickerTileContainerView:",
      "bridgedName": "numberOfTilesInNSVisualTabPickerTileContainerView",
      "args": [
        {
          "name": "numberOfTilesInNSVisualTabPickerTileContainerView",
          "type": "id"
        }
      ],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_startGridAnimation:completionHandler:": {
      "name": "_startGridAnimation:completionHandler:",
      "bridgedName": "_startGridAnimation_completionHandler",
      "args": [
        {
          "name": "_startGridAnimation",
          "type": "long long"
        },
        {
          "name": "completionHandler",
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "startGridAnimation:completionHandler:": {
      "name": "startGridAnimation:completionHandler:",
      "bridgedName": "startGridAnimation_completionHandler",
      "args": [
        {
          "name": "startGridAnimation",
          "type": "long long"
        },
        {
          "name": "completionHandler",
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "frameOfSelectedTile": {
      "name": "frameOfSelectedTile",
      "bridgedName": "frameOfSelectedTile",
      "args": [],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "updateGridViewLayout": {
      "name": "updateGridViewLayout",
      "bridgedName": "updateGridViewLayout",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_updateTilePositions": {
      "name": "_updateTilePositions",
      "bridgedName": "_updateTilePositions",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "gridViewContentHeight": {
      "name": "gridViewContentHeight",
      "bridgedName": "gridViewContentHeight",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "reloadTabViewItem:": {
      "name": "reloadTabViewItem:",
      "bridgedName": "reloadTabViewItem",
      "args": [
        {
          "name": "reloadTabViewItem",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "removeTabViewItem:": {
      "name": "removeTabViewItem:",
      "bridgedName": "removeTabViewItem",
      "args": [
        {
          "name": "removeTabViewItem",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "addTabViewItem:atIndex:": {
      "name": "addTabViewItem:atIndex:",
      "bridgedName": "addTabViewItem_atIndex",
      "args": [
        {
          "name": "addTabViewItem",
          "type": "id"
        },
        {
          "name": "atIndex",
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "hideCloseButtons": {
      "name": "hideCloseButtons",
      "bridgedName": "hideCloseButtons",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "reloadGridView": {
      "name": "reloadGridView",
      "bridgedName": "reloadGridView",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_updateSize": {
      "name": "_updateSize",
      "bridgedName": "_updateSize",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setFrameSize:": {
      "name": "setFrameSize:",
      "bridgedName": "setFrameSize",
      "args": [
        {
          "name": "setFrameSize",
          "type": "struct CGSize"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithFrame:visualTabPickerViewController:": {
      "name": "initWithFrame:visualTabPickerViewController:",
      "bridgedName": "initWithFrame_visualTabPickerViewController",
      "args": [
        {
          "name": "initWithFrame",
          "type": "struct CGRect"
        },
        {
          "name": "visualTabPickerViewController",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "shouldShowCloseButtons": {
      "name": "shouldShowCloseButtons",
      "pointer": false,
      "type": "BOOL",
      "attributes": [
        "nonatomic"
      ]
    },
    "shouldHighlightTiles": {
      "name": "shouldHighlightTiles",
      "pointer": false,
      "type": "BOOL",
      "attributes": [
        "nonatomic"
      ]
    },
    "shouldShowNewTabButton": {
      "name": "shouldShowNewTabButton",
      "pointer": false,
      "type": "BOOL",
      "attributes": [
        "nonatomic"
      ]
    },
    "gridAnimationInProgress": {
      "name": "gridAnimationInProgress",
      "pointer": false,
      "type": "BOOL",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    },
    "shouldDisplayHostnameForThumbnailContainers": {
      "name": "shouldDisplayHostnameForThumbnailContainers",
      "pointer": false,
      "type": "BOOL",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    },
    "visualTabPickerViewController": {
      "name": "visualTabPickerViewController",
      "pointer": true,
      "type": "__weak NSVisualTabPickerRootViewController",
      "attributes": [
        "nonatomic"
      ]
    },
    "delegate": {
      "name": "delegate",
      "pointer": false,
      "type": "__weak id <NSVisualTabPickerGridViewDelegate>",
      "attributes": [
        "nonatomic"
      ]
    },
    "dataSource": {
      "name": "dataSource",
      "pointer": false,
      "type": "__weak id <NSVisualTabPickerGridViewDataSource>",
      "attributes": [
        "nonatomic"
      ]
    },
    "debugDescription": {
      "name": "debugDescription",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "description": {
      "name": "description",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "hash": {
      "name": "hash",
      "pointer": false,
      "type": "unsigned long long",
      "attributes": [
        "readonly"
      ]
    },
    "superclass": {
      "name": "superclass",
      "pointer": false,
      "type": "Class",
      "attributes": [
        "readonly"
      ]
    }
  }
}