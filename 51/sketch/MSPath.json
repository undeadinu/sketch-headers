{
  "imports": [
    "NSObject.h",
    "NSCopying.h"
  ],
  "classes": [
    "NSArray"
  ],
  "protocol": false,
  "className": "MSPath",
  "extends": "NSObject",
  "interfaces": [
    "NSCopying"
  ],
  "methods": {
    "pathWithPoints:pointCount:close:": {
      "name": "pathWithPoints:pointCount:close:",
      "bridgedName": "pathWithPoints_pointCount_close",
      "args": [
        {
          "name": "pathWithPoints",
          "type": "const struct CGPoint *"
        },
        {
          "name": "pointCount",
          "type": "int"
        },
        {
          "name": "close",
          "type": "BOOL"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "pathWithCurveFromPoint:to:controlPoint1:controlPoint2:": {
      "name": "pathWithCurveFromPoint:to:controlPoint1:controlPoint2:",
      "bridgedName": "pathWithCurveFromPoint_to_controlPoint1_controlPoint2",
      "args": [
        {
          "name": "pathWithCurveFromPoint",
          "type": "struct CGPoint"
        },
        {
          "name": "to",
          "type": "struct CGPoint"
        },
        {
          "name": "controlPoint1",
          "type": "struct CGPoint"
        },
        {
          "name": "controlPoint2",
          "type": "struct CGPoint"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "pathWithLineFrom:to:": {
      "name": "pathWithLineFrom:to:",
      "bridgedName": "pathWithLineFrom_to",
      "args": [
        {
          "name": "pathWithLineFrom",
          "type": "struct CGPoint"
        },
        {
          "name": "to",
          "type": "struct CGPoint"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "pathWithBezierPath:": {
      "name": "pathWithBezierPath:",
      "bridgedName": "pathWithBezierPath",
      "args": [
        {
          "name": "pathWithBezierPath",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "pathWithCGPath:": {
      "name": "pathWithCGPath:",
      "bridgedName": "pathWithCGPath",
      "args": [
        {
          "name": "pathWithCGPath",
          "type": "struct CGPath *"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "pathWithEllipseInRect:": {
      "name": "pathWithEllipseInRect:",
      "bridgedName": "pathWithEllipseInRect",
      "args": [
        {
          "name": "pathWithEllipseInRect",
          "type": "struct CGRect"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "pathWithRect:": {
      "name": "pathWithRect:",
      "bridgedName": "pathWithRect",
      "args": [
        {
          "name": "pathWithRect",
          "type": "struct CGRect"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "pathWithContours:": {
      "name": "pathWithContours:",
      "bridgedName": "pathWithContours",
      "args": [
        {
          "name": "pathWithContours",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "pathWithSubpaths:": {
      "name": "pathWithSubpaths:",
      "bridgedName": "pathWithSubpaths",
      "args": [
        {
          "name": "pathWithSubpaths",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    ".cxx_destruct": {
      "name": ".cxx_destruct",
      "bridgedName": ".cxx_destruct",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isEqualToPath:epsilon:": {
      "name": "isEqualToPath:epsilon:",
      "bridgedName": "isEqualToPath_epsilon",
      "args": [
        {
          "name": "isEqualToPath",
          "type": "id"
        },
        {
          "name": "epsilon",
          "type": "double"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isEqualToPath:": {
      "name": "isEqualToPath:",
      "bridgedName": "isEqualToPath",
      "args": [
        {
          "name": "isEqualToPath",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "elementAtIndex:": {
      "name": "elementAtIndex:",
      "bridgedName": "elementAtIndex",
      "args": [
        {
          "name": "elementAtIndex",
          "type": "unsigned long long"
        }
      ],
      "returns": "CDStruct_ab7f5933",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "pathByRearrangingSubPathsIfNecessary": {
      "name": "pathByRearrangingSubPathsIfNecessary",
      "bridgedName": "pathByRearrangingSubPathsIfNecessary",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "pathByReplacingMoveToByLineToComponents": {
      "name": "pathByReplacingMoveToByLineToComponents",
      "bridgedName": "pathByReplacingMoveToByLineToComponents",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "pointsInRect:": {
      "name": "pointsInRect:",
      "bridgedName": "pointsInRect",
      "args": [
        {
          "name": "pointsInRect",
          "type": "struct CGRect"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "pathByApplyingModifierBlock:": {
      "name": "pathByApplyingModifierBlock:",
      "bridgedName": "pathByApplyingModifierBlock",
      "args": [
        {
          "name": "pathByApplyingModifierBlock",
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_initCachedProperties": {
      "name": "_initCachedProperties",
      "bridgedName": "_initCachedProperties",
      "args": [],
      "returns": "struct MSPathCachedProperties",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_calculateCachedProperies": {
      "name": "_calculateCachedProperies",
      "bridgedName": "_calculateCachedProperies",
      "args": [],
      "returns": "struct MSPathCachedProperties",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bezierIndexForPoint:tolerance:": {
      "name": "bezierIndexForPoint:tolerance:",
      "bridgedName": "bezierIndexForPoint_tolerance",
      "args": [
        {
          "name": "bezierIndexForPoint",
          "type": "struct CGPoint"
        },
        {
          "name": "tolerance",
          "type": "double"
        }
      ],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "pathFromIndex:toIndex:": {
      "name": "pathFromIndex:toIndex:",
      "bridgedName": "pathFromIndex_toIndex",
      "args": [
        {
          "name": "pathFromIndex",
          "type": "unsigned long long"
        },
        {
          "name": "toIndex",
          "type": "unsigned long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "endPoint": {
      "name": "endPoint",
      "bridgedName": "endPoint",
      "args": [],
      "returns": "struct CGPoint",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "startPoint": {
      "name": "startPoint",
      "bridgedName": "startPoint",
      "args": [],
      "returns": "struct CGPoint",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "pathByTrimmingToLength:withMaximumError:": {
      "name": "pathByTrimmingToLength:withMaximumError:",
      "bridgedName": "pathByTrimmingToLength_withMaximumError",
      "args": [
        {
          "name": "pathByTrimmingToLength",
          "type": "double"
        },
        {
          "name": "withMaximumError",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "length": {
      "name": "length",
      "bridgedName": "length",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "lengthWithMaximumError:": {
      "name": "lengthWithMaximumError:",
      "bridgedName": "lengthWithMaximumError",
      "args": [
        {
          "name": "lengthWithMaximumError",
          "type": "double"
        }
      ],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "pathByTrimmingToLength:": {
      "name": "pathByTrimmingToLength:",
      "bridgedName": "pathByTrimmingToLength",
      "args": [
        {
          "name": "pathByTrimmingToLength",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "pointOnPathAtLength:": {
      "name": "pointOnPathAtLength:",
      "bridgedName": "pointOnPathAtLength",
      "args": [
        {
          "name": "pointOnPathAtLength",
          "type": "double"
        }
      ],
      "returns": "struct CGPoint",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isClosed": {
      "name": "isClosed",
      "bridgedName": "isClosed",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "pointAtIndex:": {
      "name": "pointAtIndex:",
      "bridgedName": "pointAtIndex",
      "args": [
        {
          "name": "pointAtIndex",
          "type": "unsigned long long"
        }
      ],
      "returns": "struct CGPoint",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "containsPoint:": {
      "name": "containsPoint:",
      "bridgedName": "containsPoint",
      "args": [
        {
          "name": "containsPoint",
          "type": "struct CGPoint"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "outlinePathWithWidth:": {
      "name": "outlinePathWithWidth:",
      "bridgedName": "outlinePathWithWidth",
      "args": [
        {
          "name": "outlinePathWithWidth",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_pathByScalingToBounds:": {
      "name": "_pathByScalingToBounds:",
      "bridgedName": "_pathByScalingToBounds",
      "args": [
        {
          "name": "_pathByScalingToBounds",
          "type": "struct CGRect"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "pathByScalingToBounds:": {
      "name": "pathByScalingToBounds:",
      "bridgedName": "pathByScalingToBounds",
      "args": [
        {
          "name": "pathByScalingToBounds",
          "type": "struct CGRect"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "pathByCuttingBeforeIndex:": {
      "name": "pathByCuttingBeforeIndex:",
      "bridgedName": "pathByCuttingBeforeIndex",
      "args": [
        {
          "name": "pathByCuttingBeforeIndex",
          "type": "unsigned long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "pathByJoiningWithPath:": {
      "name": "pathByJoiningWithPath:",
      "bridgedName": "pathByJoiningWithPath",
      "args": [
        {
          "name": "pathByJoiningWithPath",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "pathByReplacingElementAtIndexWithMoveTo:": {
      "name": "pathByReplacingElementAtIndexWithMoveTo:",
      "bridgedName": "pathByReplacingElementAtIndexWithMoveTo",
      "args": [
        {
          "name": "pathByReplacingElementAtIndexWithMoveTo",
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "pathByReplacingClosePathByLineToComponents": {
      "name": "pathByReplacingClosePathByLineToComponents",
      "bridgedName": "pathByReplacingClosePathByLineToComponents",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "pathByRemovingSubsequentMoveToComponents": {
      "name": "pathByRemovingSubsequentMoveToComponents",
      "bridgedName": "pathByRemovingSubsequentMoveToComponents",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "pathWithInset:joinStrategy:": {
      "name": "pathWithInset:joinStrategy:",
      "bridgedName": "pathWithInset_joinStrategy",
      "args": [
        {
          "name": "pathWithInset",
          "type": "double"
        },
        {
          "name": "joinStrategy",
          "type": "unsigned long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "pathWithInset:": {
      "name": "pathWithInset:",
      "bridgedName": "pathWithInset",
      "args": [
        {
          "name": "pathWithInset",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "reversedPath": {
      "name": "reversedPath",
      "bridgedName": "reversedPath",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "debugQuickLookObject": {
      "name": "debugQuickLookObject",
      "bridgedName": "debugQuickLookObject",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "transformedPathUsingMapBlock:": {
      "name": "transformedPathUsingMapBlock:",
      "bridgedName": "transformedPathUsingMapBlock",
      "args": [
        {
          "name": "transformedPathUsingMapBlock",
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "transformedPathUsingAffineTransform:": {
      "name": "transformedPathUsingAffineTransform:",
      "bridgedName": "transformedPathUsingAffineTransform",
      "args": [
        {
          "name": "transformedPathUsingAffineTransform",
          "type": "struct CGAffineTransform"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "createContours": {
      "name": "createContours",
      "bridgedName": "createContours",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "init": {
      "name": "init",
      "bridgedName": "init",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithPoints:pointCount:close:": {
      "name": "initWithPoints:pointCount:close:",
      "bridgedName": "initWithPoints_pointCount_close",
      "args": [
        {
          "name": "initWithPoints",
          "type": "const struct CGPoint *"
        },
        {
          "name": "pointCount",
          "type": "int"
        },
        {
          "name": "close",
          "type": "BOOL"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithCurveFromPoint:to:controlPoint1:controlPoint2:": {
      "name": "initWithCurveFromPoint:to:controlPoint1:controlPoint2:",
      "bridgedName": "initWithCurveFromPoint_to_controlPoint1_controlPoint2",
      "args": [
        {
          "name": "initWithCurveFromPoint",
          "type": "struct CGPoint"
        },
        {
          "name": "to",
          "type": "struct CGPoint"
        },
        {
          "name": "controlPoint1",
          "type": "struct CGPoint"
        },
        {
          "name": "controlPoint2",
          "type": "struct CGPoint"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithLineFrom:to:": {
      "name": "initWithLineFrom:to:",
      "bridgedName": "initWithLineFrom_to",
      "args": [
        {
          "name": "initWithLineFrom",
          "type": "struct CGPoint"
        },
        {
          "name": "to",
          "type": "struct CGPoint"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithEllipseInRect:": {
      "name": "initWithEllipseInRect:",
      "bridgedName": "initWithEllipseInRect",
      "args": [
        {
          "name": "initWithEllipseInRect",
          "type": "struct CGRect"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithSquircleInRect:radius:": {
      "name": "initWithSquircleInRect:radius:",
      "bridgedName": "initWithSquircleInRect_radius",
      "args": [
        {
          "name": "initWithSquircleInRect",
          "type": "struct CGRect"
        },
        {
          "name": "radius",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithRoundedRect:radius:": {
      "name": "initWithRoundedRect:radius:",
      "bridgedName": "initWithRoundedRect_radius",
      "args": [
        {
          "name": "initWithRoundedRect",
          "type": "struct CGRect"
        },
        {
          "name": "radius",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithRect:": {
      "name": "initWithRect:",
      "bridgedName": "initWithRect",
      "args": [
        {
          "name": "initWithRect",
          "type": "struct CGRect"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithBezierPath:": {
      "name": "initWithBezierPath:",
      "bridgedName": "initWithBezierPath",
      "args": [
        {
          "name": "initWithBezierPath",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithContours:": {
      "name": "initWithContours:",
      "bridgedName": "initWithContours",
      "args": [
        {
          "name": "initWithContours",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithCGPath:": {
      "name": "initWithCGPath:",
      "bridgedName": "initWithCGPath",
      "args": [
        {
          "name": "initWithCGPath",
          "type": "struct CGPath *"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "copyWithZone:": {
      "name": "copyWithZone:",
      "bridgedName": "copyWithZone",
      "args": [
        {
          "name": "copyWithZone",
          "type": "struct _NSZone *"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "booleanExclusiveOrWith:": {
      "name": "booleanExclusiveOrWith:",
      "bridgedName": "booleanExclusiveOrWith",
      "args": [
        {
          "name": "booleanExclusiveOrWith",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "booleanSubtractWith:": {
      "name": "booleanSubtractWith:",
      "bridgedName": "booleanSubtractWith",
      "args": [
        {
          "name": "booleanSubtractWith",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "booleanIntersectWith:": {
      "name": "booleanIntersectWith:",
      "bridgedName": "booleanIntersectWith",
      "args": [
        {
          "name": "booleanIntersectWith",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "booleanUnionWith:": {
      "name": "booleanUnionWith:",
      "bridgedName": "booleanUnionWith",
      "args": [
        {
          "name": "booleanUnionWith",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "booleanOp:withPath:": {
      "name": "booleanOp:withPath:",
      "bridgedName": "booleanOp_withPath",
      "args": [
        {
          "name": "booleanOp",
          "type": "long long"
        },
        {
          "name": "withPath",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "outlinePathWithLineWidth:borderOptions:context:": {
      "name": "outlinePathWithLineWidth:borderOptions:context:",
      "bridgedName": "outlinePathWithLineWidth_borderOptions_context",
      "args": [
        {
          "name": "outlinePathWithLineWidth",
          "type": "double"
        },
        {
          "name": "borderOptions",
          "type": "id"
        },
        {
          "name": "context",
          "type": "struct CGContext *"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "pathByGrowingBy:": {
      "name": "pathByGrowingBy:",
      "bridgedName": "pathByGrowingBy",
      "args": [
        {
          "name": "pathByGrowingBy",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "insetPathBy:borderOptions:context:": {
      "name": "insetPathBy:borderOptions:context:",
      "bridgedName": "insetPathBy_borderOptions_context",
      "args": [
        {
          "name": "insetPathBy",
          "type": "double"
        },
        {
          "name": "borderOptions",
          "type": "id"
        },
        {
          "name": "context",
          "type": "struct CGContext *"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "insetPathBy:": {
      "name": "insetPathBy:",
      "bridgedName": "insetPathBy",
      "args": [
        {
          "name": "insetPathBy",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "pathWithOuterPathOfSize:": {
      "name": "pathWithOuterPathOfSize:",
      "bridgedName": "pathWithOuterPathOfSize",
      "args": [
        {
          "name": "pathWithOuterPathOfSize",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "outerPathWithRect:": {
      "name": "outerPathWithRect:",
      "bridgedName": "outerPathWithRect",
      "args": [
        {
          "name": "outerPathWithRect",
          "type": "struct CGRect"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "addClipForWindingRule:context:": {
      "name": "addClipForWindingRule:context:",
      "bridgedName": "addClipForWindingRule_context",
      "args": [
        {
          "name": "addClipForWindingRule",
          "type": "unsigned long long"
        },
        {
          "name": "context",
          "type": "struct CGContext *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "clipContext:windingRule:inBlock:": {
      "name": "clipContext:windingRule:inBlock:",
      "bridgedName": "clipContext_windingRule_inBlock",
      "args": [
        {
          "name": "clipContext",
          "type": "struct CGContext *"
        },
        {
          "name": "windingRule",
          "type": "unsigned long long"
        },
        {
          "name": "inBlock",
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "createHelperContext": {
      "name": "createHelperContext",
      "bridgedName": "createHelperContext",
      "args": [],
      "returns": "struct CGContext *",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "contours": {
      "name": "contours",
      "pointer": true,
      "type": "NSArray",
      "attributes": [
        "copy",
        "nonatomic"
      ]
    },
    "signedElementCount": {
      "name": "signedElementCount",
      "pointer": false,
      "type": "long long",
      "attributes": [
        "nonatomic"
      ]
    },
    "CGPath": {
      "name": "CGPath",
      "pointer": true,
      "type": "struct CGPath",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    },
    "closedSubpaths": {
      "name": "closedSubpaths",
      "pointer": true,
      "type": "NSArray",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    },
    "openSubpaths": {
      "name": "openSubpaths",
      "pointer": true,
      "type": "NSArray",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    },
    "subpaths": {
      "name": "subpaths",
      "pointer": true,
      "type": "NSArray",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    },
    "elementCount": {
      "name": "elementCount",
      "pointer": false,
      "type": "unsigned long long",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    },
    "isEmpty": {
      "name": "isEmpty",
      "pointer": false,
      "type": "BOOL",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    },
    "isRectangular": {
      "name": "isRectangular",
      "pointer": false,
      "type": "BOOL",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    },
    "controlPointBounds": {
      "name": "controlPointBounds",
      "pointer": false,
      "type": "struct CGRect",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    },
    "bounds": {
      "name": "bounds",
      "pointer": false,
      "type": "struct CGRect",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    },
    "safeBounds": {
      "name": "safeBounds",
      "pointer": false,
      "type": "struct CGRect",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    }
  }
}