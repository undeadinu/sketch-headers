{
  "imports": [
    "NSObject.h"
  ],
  "classes": [
    "NSString"
  ],
  "protocol": false,
  "className": "NSAccessibilityCustomRotorItemResult",
  "extends": "NSObject",
  "interfaces": [],
  "methods": {
    ".cxx_destruct": {
      "name": ".cxx_destruct",
      "bridgedName": ".cxx_destruct",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "description": {
      "name": "description",
      "bridgedName": "description",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithItemLoadingToken:customLabel:": {
      "name": "initWithItemLoadingToken:customLabel:",
      "bridgedName": "initWithItemLoadingToken_customLabel",
      "args": [
        {
          "name": "initWithItemLoadingToken",
          "type": "id"
        },
        {
          "name": "customLabel",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithTargetElement:": {
      "name": "initWithTargetElement:",
      "bridgedName": "initWithTargetElement",
      "args": [
        {
          "name": "initWithTargetElement",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "itemLoadingToken": {
      "name": "itemLoadingToken",
      "pointer": false,
      "type": "id <NSSecureCoding><NSObject>",
      "attributes": [
        "readonly"
      ]
    },
    "customLabel": {
      "name": "customLabel",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "copy"
      ]
    },
    "targetElement": {
      "name": "targetElement",
      "pointer": false,
      "type": "__weak id <NSAccessibilityElement>",
      "attributes": [
        "readonly"
      ]
    }
  }
}