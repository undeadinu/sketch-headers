{
  "imports": [
    "NSProxy.h"
  ],
  "classes": [
    "NSMutableArray",
    "NSObject"
  ],
  "protocol": false,
  "className": "NSAutounbinder",
  "extends": "NSProxy",
  "interfaces": [],
  "methods": {
    "_autounbinder": {
      "name": "_autounbinder",
      "bridgedName": "_autounbinder",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "mutableSetValueForKeyPath:": {
      "name": "mutableSetValueForKeyPath:",
      "bridgedName": "mutableSetValueForKeyPath",
      "args": [
        {
          "name": "mutableSetValueForKeyPath",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "mutableArrayValueForKeyPath:": {
      "name": "mutableArrayValueForKeyPath:",
      "bridgedName": "mutableArrayValueForKeyPath",
      "args": [
        {
          "name": "mutableArrayValueForKeyPath",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "validateValue:forKeyPath:error:": {
      "name": "validateValue:forKeyPath:error:",
      "bridgedName": "validateValue_forKeyPath_error",
      "args": [
        {
          "name": "validateValue",
          "type": "id *"
        },
        {
          "name": "forKeyPath",
          "type": "id"
        },
        {
          "name": "error",
          "type": "id *"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setValue:forKeyPath:": {
      "name": "setValue:forKeyPath:",
      "bridgedName": "setValue_forKeyPath",
      "args": [
        {
          "name": "setValue",
          "type": "id"
        },
        {
          "name": "forKeyPath",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "valueForKeyPath:": {
      "name": "valueForKeyPath:",
      "bridgedName": "valueForKeyPath",
      "args": [
        {
          "name": "valueForKeyPath",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "removeObserver:forKeyPath:": {
      "name": "removeObserver:forKeyPath:",
      "bridgedName": "removeObserver_forKeyPath",
      "args": [
        {
          "name": "removeObserver",
          "type": "id"
        },
        {
          "name": "forKeyPath",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "addObserver:forKeyPath:options:context:": {
      "name": "addObserver:forKeyPath:options:context:",
      "bridgedName": "addObserver_forKeyPath_options_context",
      "args": [
        {
          "name": "addObserver",
          "type": "id"
        },
        {
          "name": "forKeyPath",
          "type": "id"
        },
        {
          "name": "options",
          "type": "unsigned long long"
        },
        {
          "name": "context",
          "type": "void *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "retainBindingTargetAndUnbind": {
      "name": "retainBindingTargetAndUnbind",
      "bridgedName": "retainBindingTargetAndUnbind",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "removeBinding:fromObject:": {
      "name": "removeBinding:fromObject:",
      "bridgedName": "removeBinding_fromObject",
      "args": [
        {
          "name": "removeBinding",
          "type": "id"
        },
        {
          "name": "fromObject",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "addBinding:fromObject:isWeak:": {
      "name": "addBinding:fromObject:isWeak:",
      "bridgedName": "addBinding_fromObject_isWeak",
      "args": [
        {
          "name": "addBinding",
          "type": "id"
        },
        {
          "name": "fromObject",
          "type": "id"
        },
        {
          "name": "isWeak",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "addBinding:fromObject:": {
      "name": "addBinding:fromObject:",
      "bridgedName": "addBinding_fromObject",
      "args": [
        {
          "name": "addBinding",
          "type": "id"
        },
        {
          "name": "fromObject",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "bindingTarget": {
      "name": "bindingTarget",
      "bridgedName": "bindingTarget",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "description": {
      "name": "description",
      "bridgedName": "description",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "methodSignatureForSelector:": {
      "name": "methodSignatureForSelector:",
      "bridgedName": "methodSignatureForSelector",
      "args": [
        {
          "name": "methodSignatureForSelector",
          "type": "SEL"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "forwardInvocation:": {
      "name": "forwardInvocation:",
      "bridgedName": "forwardInvocation",
      "args": [
        {
          "name": "forwardInvocation",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithBindingTarget:": {
      "name": "initWithBindingTarget:",
      "bridgedName": "initWithBindingTarget",
      "args": [
        {
          "name": "initWithBindingTarget",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {}
}