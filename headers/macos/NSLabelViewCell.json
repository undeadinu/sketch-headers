{
  "imports": [],
  "classes": [],
  "protocol": false,
  "className": "NSLabelViewCell",
  "extends": "NSActionCell",
  "interfaces": [],
  "methods": {
    "performClick:": {
      "name": "performClick:",
      "bridgedName": "performClick",
      "args": [
        {
          "name": "performClick",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "trackMouse:inRect:ofView:untilMouseUp:": {
      "name": "trackMouse:inRect:ofView:untilMouseUp:",
      "bridgedName": "trackMouse_inRect_ofView_untilMouseUp",
      "args": [
        {
          "name": "trackMouse",
          "type": "id"
        },
        {
          "name": "inRect",
          "type": "struct CGRect"
        },
        {
          "name": "ofView",
          "type": "id"
        },
        {
          "name": "untilMouseUp",
          "type": "BOOL"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "mouseExited:withFrame:inView:": {
      "name": "mouseExited:withFrame:inView:",
      "bridgedName": "mouseExited_withFrame_inView",
      "args": [
        {
          "name": "mouseExited",
          "type": "id"
        },
        {
          "name": "withFrame",
          "type": "struct CGRect"
        },
        {
          "name": "inView",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "mouseEntered:withFrame:inView:": {
      "name": "mouseEntered:withFrame:inView:",
      "bridgedName": "mouseEntered_withFrame_inView",
      "args": [
        {
          "name": "mouseEntered",
          "type": "id"
        },
        {
          "name": "withFrame",
          "type": "struct CGRect"
        },
        {
          "name": "inView",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_handleMouseMovedForEvent:withFrame:inView:": {
      "name": "_handleMouseMovedForEvent:withFrame:inView:",
      "bridgedName": "_handleMouseMovedForEvent_withFrame_inView",
      "args": [
        {
          "name": "_handleMouseMovedForEvent",
          "type": "id"
        },
        {
          "name": "withFrame",
          "type": "struct CGRect"
        },
        {
          "name": "inView",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawInteriorWithFrame:inView:": {
      "name": "drawInteriorWithFrame:inView:",
      "bridgedName": "drawInteriorWithFrame_inView",
      "args": [
        {
          "name": "drawInteriorWithFrame",
          "type": "struct CGRect"
        },
        {
          "name": "inView",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_currentLabelName": {
      "name": "_currentLabelName",
      "bridgedName": "_currentLabelName",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_nameForLabelPart:": {
      "name": "_nameForLabelPart:",
      "bridgedName": "_nameForLabelPart",
      "args": [
        {
          "name": "_nameForLabelPart",
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_partAtPoint:inFrame:": {
      "name": "_partAtPoint:inFrame:",
      "bridgedName": "_partAtPoint_inFrame",
      "args": [
        {
          "name": "_partAtPoint",
          "type": "struct CGPoint"
        },
        {
          "name": "inFrame",
          "type": "struct CGRect"
        }
      ],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_drawPart:withFrame:": {
      "name": "_drawPart:withFrame:",
      "bridgedName": "_drawPart_withFrame",
      "args": [
        {
          "name": "_drawPart",
          "type": "long long"
        },
        {
          "name": "withFrame",
          "type": "struct CGRect"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_drawBackgroundForPartRect:isPressedOrHovered:": {
      "name": "_drawBackgroundForPartRect:isPressedOrHovered:",
      "bridgedName": "_drawBackgroundForPartRect_isPressedOrHovered",
      "args": [
        {
          "name": "_drawBackgroundForPartRect",
          "type": "struct CGRect"
        },
        {
          "name": "isPressedOrHovered",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_boundsForLabel:withFrame:": {
      "name": "_boundsForLabel:withFrame:",
      "bridgedName": "_boundsForLabel_withFrame",
      "args": [
        {
          "name": "_boundsForLabel",
          "type": "id"
        },
        {
          "name": "withFrame",
          "type": "struct CGRect"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_labelAttributes": {
      "name": "_labelAttributes",
      "bridgedName": "_labelAttributes",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "part:boundsWithFrame:": {
      "name": "part:boundsWithFrame:",
      "bridgedName": "part_boundsWithFrame",
      "args": [
        {
          "name": "part",
          "type": "long long"
        },
        {
          "name": "boundsWithFrame",
          "type": "struct CGRect"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_isHoveredPart:": {
      "name": "_isHoveredPart:",
      "bridgedName": "_isHoveredPart",
      "args": [
        {
          "name": "_isHoveredPart",
          "type": "long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_valueChanged:": {
      "name": "_valueChanged:",
      "bridgedName": "_valueChanged",
      "args": [
        {
          "name": "_valueChanged",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_deselectPart:": {
      "name": "_deselectPart:",
      "bridgedName": "_deselectPart",
      "args": [
        {
          "name": "_deselectPart",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_selectPart:": {
      "name": "_selectPart:",
      "bridgedName": "_selectPart",
      "args": [
        {
          "name": "_selectPart",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_isSelectedPart:": {
      "name": "_isSelectedPart:",
      "bridgedName": "_isSelectedPart",
      "args": [
        {
          "name": "_isSelectedPart",
          "type": "long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "encodeWithCoder:": {
      "name": "encodeWithCoder:",
      "bridgedName": "encodeWithCoder",
      "args": [
        {
          "name": "encodeWithCoder",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "copyWithZone:": {
      "name": "copyWithZone:",
      "bridgedName": "copyWithZone",
      "args": [
        {
          "name": "copyWithZone",
          "type": "struct _NSZone *"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithCoder:": {
      "name": "initWithCoder:",
      "bridgedName": "initWithCoder",
      "args": [
        {
          "name": "initWithCoder",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "init": {
      "name": "init",
      "bridgedName": "init",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_commonInit": {
      "name": "_commonInit",
      "bridgedName": "_commonInit",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityPerformAction:forChild:": {
      "name": "accessibilityPerformAction:forChild:",
      "bridgedName": "accessibilityPerformAction_forChild",
      "args": [
        {
          "name": "accessibilityPerformAction",
          "type": "id"
        },
        {
          "name": "forChild",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityFocusedUIElement": {
      "name": "accessibilityFocusedUIElement",
      "bridgedName": "accessibilityFocusedUIElement",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityHitTest:": {
      "name": "accessibilityHitTest:",
      "bridgedName": "accessibilityHitTest",
      "args": [
        {
          "name": "accessibilityHitTest",
          "type": "struct CGPoint"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilitySizeOfChild:": {
      "name": "accessibilitySizeOfChild:",
      "bridgedName": "accessibilitySizeOfChild",
      "args": [
        {
          "name": "accessibilitySizeOfChild",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityPositionOfChild:": {
      "name": "accessibilityPositionOfChild:",
      "bridgedName": "accessibilityPositionOfChild",
      "args": [
        {
          "name": "accessibilityPositionOfChild",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_rectForPart:": {
      "name": "_rectForPart:",
      "bridgedName": "_rectForPart",
      "args": [
        {
          "name": "_rectForPart",
          "type": "long long"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilitySetFocus:forChild:": {
      "name": "accessibilitySetFocus:forChild:",
      "bridgedName": "accessibilitySetFocus_forChild",
      "args": [
        {
          "name": "accessibilitySetFocus",
          "type": "id"
        },
        {
          "name": "forChild",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityIsChildFocusable:": {
      "name": "accessibilityIsChildFocusable:",
      "bridgedName": "accessibilityIsChildFocusable",
      "args": [
        {
          "name": "accessibilityIsChildFocusable",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityHelpStringForChild:": {
      "name": "accessibilityHelpStringForChild:",
      "bridgedName": "accessibilityHelpStringForChild",
      "args": [
        {
          "name": "accessibilityHelpStringForChild",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityIsFocusedAttributeSettable": {
      "name": "accessibilityIsFocusedAttributeSettable",
      "bridgedName": "accessibilityIsFocusedAttributeSettable",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityDescriptionOfChild:": {
      "name": "accessibilityDescriptionOfChild:",
      "bridgedName": "accessibilityDescriptionOfChild",
      "args": [
        {
          "name": "accessibilityDescriptionOfChild",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityIsValueAttributeSettable": {
      "name": "accessibilityIsValueAttributeSettable",
      "bridgedName": "accessibilityIsValueAttributeSettable",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityValueAttribute": {
      "name": "accessibilityValueAttribute",
      "bridgedName": "accessibilityValueAttribute",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityIsVisibleChildrenAttributeSettable": {
      "name": "accessibilityIsVisibleChildrenAttributeSettable",
      "bridgedName": "accessibilityIsVisibleChildrenAttributeSettable",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityVisibleChildrenAttribute": {
      "name": "accessibilityVisibleChildrenAttribute",
      "bridgedName": "accessibilityVisibleChildrenAttribute",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityIsChildrenAttributeSettable": {
      "name": "accessibilityIsChildrenAttributeSettable",
      "bridgedName": "accessibilityIsChildrenAttributeSettable",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityChildrenAttribute": {
      "name": "accessibilityChildrenAttribute",
      "bridgedName": "accessibilityChildrenAttribute",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityRoleAttribute": {
      "name": "accessibilityRoleAttribute",
      "bridgedName": "accessibilityRoleAttribute",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityAttributeNames": {
      "name": "accessibilityAttributeNames",
      "bridgedName": "accessibilityAttributeNames",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "numParts": {
      "name": "numParts",
      "pointer": false,
      "type": "long long",
      "attributes": [
        "readonly"
      ]
    }
  }
}