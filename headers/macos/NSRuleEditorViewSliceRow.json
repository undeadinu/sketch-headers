{
  "imports": [],
  "classes": [
    "NSButton",
    "NSMutableArray",
    "NSView"
  ],
  "protocol": false,
  "className": "NSRuleEditorViewSliceRow",
  "extends": "NSRuleEditorViewSlice",
  "interfaces": [],
  "methods": {
    "initialize": {
      "name": "initialize",
      "bridgedName": "initialize",
      "args": [],
      "returns": "void",
      "kind": "class",
      "kindIndicator": "+"
    },
    "viewDidMoveToWindow": {
      "name": "viewDidMoveToWindow",
      "bridgedName": "viewDidMoveToWindow",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_subtractButton": {
      "name": "_subtractButton",
      "bridgedName": "_subtractButton",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_addButton": {
      "name": "_addButton",
      "bridgedName": "_addButton",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isEditable": {
      "name": "isEditable",
      "bridgedName": "isEditable",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setEditable:": {
      "name": "setEditable:",
      "bridgedName": "setEditable",
      "args": [
        {
          "name": "setEditable",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_dropsIndentWhenImmediatelyBelow": {
      "name": "_dropsIndentWhenImmediatelyBelow",
      "bridgedName": "_dropsIndentWhenImmediatelyBelow",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setRowTypeToAddFromPlusButton:": {
      "name": "_setRowTypeToAddFromPlusButton:",
      "bridgedName": "_setRowTypeToAddFromPlusButton",
      "args": [
        {
          "name": "_setRowTypeToAddFromPlusButton",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_plusMinusButtonsAcceptFirstMouse": {
      "name": "_plusMinusButtonsAcceptFirstMouse",
      "bridgedName": "_plusMinusButtonsAcceptFirstMouse",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_configurePlusButtonByRowType:": {
      "name": "_configurePlusButtonByRowType:",
      "bridgedName": "_configurePlusButtonByRowType",
      "args": [
        {
          "name": "_configurePlusButtonByRowType",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "containsDisplayValue:": {
      "name": "containsDisplayValue:",
      "bridgedName": "containsDisplayValue",
      "args": [
        {
          "name": "containsDisplayValue",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setRowType:": {
      "name": "_setRowType:",
      "bridgedName": "_setRowType",
      "args": [
        {
          "name": "_setRowType",
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_rowType": {
      "name": "_rowType",
      "bridgedName": "_rowType",
      "args": [],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setHideNonPartDrawing:": {
      "name": "_setHideNonPartDrawing:",
      "bridgedName": "_setHideNonPartDrawing",
      "args": [
        {
          "name": "_setHideNonPartDrawing",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_updateButtonVisibilities": {
      "name": "_updateButtonVisibilities",
      "bridgedName": "_updateButtonVisibilities",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_nestingModeShouldHideSubtractButton": {
      "name": "_nestingModeShouldHideSubtractButton",
      "bridgedName": "_nestingModeShouldHideSubtractButton",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_nestingModeShouldHideAddButton": {
      "name": "_nestingModeShouldHideAddButton",
      "bridgedName": "_nestingModeShouldHideAddButton",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_deleteOption:": {
      "name": "_deleteOption:",
      "bridgedName": "_deleteOption",
      "args": [
        {
          "name": "_deleteOption",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_addOption:": {
      "name": "_addOption:",
      "bridgedName": "_addOption",
      "args": [
        {
          "name": "_addOption",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_reconfigureSubviews": {
      "name": "_reconfigureSubviews",
      "bridgedName": "_reconfigureSubviews",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_sortOptionDictionariesByLayoutOrder:": {
      "name": "_sortOptionDictionariesByLayoutOrder:",
      "bridgedName": "_sortOptionDictionariesByLayoutOrder",
      "args": [
        {
          "name": "_sortOptionDictionariesByLayoutOrder",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_updateEnabledStateForSubviews": {
      "name": "_updateEnabledStateForSubviews",
      "bridgedName": "_updateEnabledStateForSubviews",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_emptyRulePartSubviews": {
      "name": "_emptyRulePartSubviews",
      "bridgedName": "_emptyRulePartSubviews",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_ruleOptionPopupChangedAction:": {
      "name": "_ruleOptionPopupChangedAction:",
      "bridgedName": "_ruleOptionPopupChangedAction",
      "args": [
        {
          "name": "_ruleOptionPopupChangedAction",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "validateMenuItem:": {
      "name": "validateMenuItem:",
      "bridgedName": "validateMenuItem",
      "args": [
        {
          "name": "validateMenuItem",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setFrameSize:": {
      "name": "setFrameSize:",
      "bridgedName": "setFrameSize",
      "args": [
        {
          "name": "setFrameSize",
          "type": "struct CGSize"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_relayoutSubviewsWidthChanged:": {
      "name": "_relayoutSubviewsWidthChanged:",
      "bridgedName": "_relayoutSubviewsWidthChanged",
      "args": [
        {
          "name": "_relayoutSubviewsWidthChanged",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_minWidthForPass:forView:withProposedMinWidth:": {
      "name": "_minWidthForPass:forView:withProposedMinWidth:",
      "bridgedName": "_minWidthForPass_forView_withProposedMinWidth",
      "args": [
        {
          "name": "_minWidthForPass",
          "type": "long long"
        },
        {
          "name": "forView",
          "type": "id"
        },
        {
          "name": "withProposedMinWidth",
          "type": "double"
        }
      ],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_tightenResizables:intoGivenWidth:": {
      "name": "_tightenResizables:intoGivenWidth:",
      "bridgedName": "_tightenResizables_intoGivenWidth",
      "args": [
        {
          "name": "_tightenResizables",
          "type": "id"
        },
        {
          "name": "intoGivenWidth",
          "type": "double"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_alignmentGridWidth": {
      "name": "_alignmentGridWidth",
      "bridgedName": "_alignmentGridWidth",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithCoder:": {
      "name": "initWithCoder:",
      "bridgedName": "initWithCoder",
      "args": [
        {
          "name": "initWithCoder",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "encodeWithCoder:": {
      "name": "encodeWithCoder:",
      "bridgedName": "encodeWithCoder",
      "args": [
        {
          "name": "encodeWithCoder",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithFrame:ruleEditorView:": {
      "name": "initWithFrame:ruleEditorView:",
      "bridgedName": "initWithFrame_ruleEditorView",
      "args": [
        {
          "name": "initWithFrame",
          "type": "struct CGRect"
        },
        {
          "name": "ruleEditorView",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_commonInit": {
      "name": "_commonInit",
      "bridgedName": "_commonInit",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_isRulePopup:": {
      "name": "_isRulePopup:",
      "bridgedName": "_isRulePopup",
      "args": [
        {
          "name": "_isRulePopup",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_isRuleStaticTextField:": {
      "name": "_isRuleStaticTextField:",
      "bridgedName": "_isRuleStaticTextField",
      "args": [
        {
          "name": "_isRuleStaticTextField",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_createMenuSeparatorItem": {
      "name": "_createMenuSeparatorItem",
      "bridgedName": "_createMenuSeparatorItem",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_createMenuItemWithTitle:": {
      "name": "_createMenuItemWithTitle:",
      "bridgedName": "_createMenuItemWithTitle",
      "args": [
        {
          "name": "_createMenuItemWithTitle",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_createPopUpButtonWithItems:selectedItemIndex:": {
      "name": "_createPopUpButtonWithItems:selectedItemIndex:",
      "bridgedName": "_createPopUpButtonWithItems_selectedItemIndex",
      "args": [
        {
          "name": "_createPopUpButtonWithItems",
          "type": "id"
        },
        {
          "name": "selectedItemIndex",
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_createStaticTextFieldWithStringValue:": {
      "name": "_createStaticTextFieldWithStringValue:",
      "bridgedName": "_createStaticTextFieldWithStringValue",
      "args": [
        {
          "name": "_createStaticTextFieldWithStringValue",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_createDeleteRowButton": {
      "name": "_createDeleteRowButton",
      "bridgedName": "_createDeleteRowButton",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_createAddRowButton": {
      "name": "_createAddRowButton",
      "bridgedName": "_createAddRowButton",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_rowButtonsInterviewHorizontalPadding": {
      "name": "_rowButtonsInterviewHorizontalPadding",
      "bridgedName": "_rowButtonsInterviewHorizontalPadding",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_rowButtonsLeftHorizontalPadding": {
      "name": "_rowButtonsLeftHorizontalPadding",
      "bridgedName": "_rowButtonsLeftHorizontalPadding",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_rowButtonsRightHorizontalPadding": {
      "name": "_rowButtonsRightHorizontalPadding",
      "bridgedName": "_rowButtonsRightHorizontalPadding",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_indentationHorizontalPadding": {
      "name": "_indentationHorizontalPadding",
      "bridgedName": "_indentationHorizontalPadding",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_leftmostViewFixedHorizontalPadding": {
      "name": "_leftmostViewFixedHorizontalPadding",
      "bridgedName": "_leftmostViewFixedHorizontalPadding",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_minimumVerticalPopupPadding": {
      "name": "_minimumVerticalPopupPadding",
      "bridgedName": "_minimumVerticalPopupPadding",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_interviewHorizontalPadding": {
      "name": "_interviewHorizontalPadding",
      "bridgedName": "_interviewHorizontalPadding",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {}
}