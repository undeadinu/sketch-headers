{
  "imports": [
    "NSObject.h",
    "NSCoding.h",
    "NSCopying.h"
  ],
  "classes": [
    "NSImage",
    "NSRulerView"
  ],
  "protocol": false,
  "className": "NSRulerMarker",
  "extends": "NSObject",
  "interfaces": [
    "NSCopying",
    "NSCoding"
  ],
  "methods": {
    "initialize": {
      "name": "initialize",
      "bridgedName": "initialize",
      "args": [],
      "returns": "void",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_numericIndicatorFormatter": {
      "name": "_numericIndicatorFormatter",
      "bridgedName": "_numericIndicatorFormatter",
      "args": [],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_numericIndicatorCell": {
      "name": "_numericIndicatorCell",
      "bridgedName": "_numericIndicatorCell",
      "args": [],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "tabStopContextMenuForMarker:withCompletionHandler:": {
      "name": "tabStopContextMenuForMarker:withCompletionHandler:",
      "bridgedName": "tabStopContextMenuForMarker_withCompletionHandler",
      "args": [
        {
          "name": "tabStopContextMenuForMarker",
          "type": "id"
        },
        {
          "name": "withCompletionHandler",
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_tabStopContextMenuAction:": {
      "name": "_tabStopContextMenuAction:",
      "bridgedName": "_tabStopContextMenuAction",
      "args": [
        {
          "name": "_tabStopContextMenuAction",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "class",
      "kindIndicator": "+"
    },
    "decimalTabMarkerWithRulerView:location:": {
      "name": "decimalTabMarkerWithRulerView:location:",
      "bridgedName": "decimalTabMarkerWithRulerView_location",
      "args": [
        {
          "name": "decimalTabMarkerWithRulerView",
          "type": "id"
        },
        {
          "name": "location",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "centerTabMarkerWithRulerView:location:": {
      "name": "centerTabMarkerWithRulerView:location:",
      "bridgedName": "centerTabMarkerWithRulerView_location",
      "args": [
        {
          "name": "centerTabMarkerWithRulerView",
          "type": "id"
        },
        {
          "name": "location",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "rightTabMarkerWithRulerView:location:": {
      "name": "rightTabMarkerWithRulerView:location:",
      "bridgedName": "rightTabMarkerWithRulerView_location",
      "args": [
        {
          "name": "rightTabMarkerWithRulerView",
          "type": "id"
        },
        {
          "name": "location",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "leftTabMarkerWithRulerView:location:": {
      "name": "leftTabMarkerWithRulerView:location:",
      "bridgedName": "leftTabMarkerWithRulerView_location",
      "args": [
        {
          "name": "leftTabMarkerWithRulerView",
          "type": "id"
        },
        {
          "name": "location",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "rightIndentMarkerWithRulerView:location:": {
      "name": "rightIndentMarkerWithRulerView:location:",
      "bridgedName": "rightIndentMarkerWithRulerView_location",
      "args": [
        {
          "name": "rightIndentMarkerWithRulerView",
          "type": "id"
        },
        {
          "name": "location",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "leftIndentMarkerWithRulerView:location:": {
      "name": "leftIndentMarkerWithRulerView:location:",
      "bridgedName": "leftIndentMarkerWithRulerView_location",
      "args": [
        {
          "name": "leftIndentMarkerWithRulerView",
          "type": "id"
        },
        {
          "name": "location",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "firstIndentMarkerWithRulerView:location:": {
      "name": "firstIndentMarkerWithRulerView:location:",
      "bridgedName": "firstIndentMarkerWithRulerView_location",
      "args": [
        {
          "name": "firstIndentMarkerWithRulerView",
          "type": "id"
        },
        {
          "name": "location",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "rightMarginMarkerWithRulerView:location:": {
      "name": "rightMarginMarkerWithRulerView:location:",
      "bridgedName": "rightMarginMarkerWithRulerView_location",
      "args": [
        {
          "name": "rightMarginMarkerWithRulerView",
          "type": "id"
        },
        {
          "name": "location",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "leftMarginMarkerWithRulerView:location:": {
      "name": "leftMarginMarkerWithRulerView:location:",
      "bridgedName": "leftMarginMarkerWithRulerView_location",
      "args": [
        {
          "name": "leftMarginMarkerWithRulerView",
          "type": "id"
        },
        {
          "name": "location",
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    ".cxx_destruct": {
      "name": ".cxx_destruct",
      "bridgedName": ".cxx_destruct",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_locationOfOriginPoint:": {
      "name": "_locationOfOriginPoint:",
      "bridgedName": "_locationOfOriginPoint",
      "args": [
        {
          "name": "_locationOfOriginPoint",
          "type": "double"
        }
      ],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithCoder:": {
      "name": "initWithCoder:",
      "bridgedName": "initWithCoder",
      "args": [
        {
          "name": "initWithCoder",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "encodeWithCoder:": {
      "name": "encodeWithCoder:",
      "bridgedName": "encodeWithCoder",
      "args": [
        {
          "name": "encodeWithCoder",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "trackMouse:adding:": {
      "name": "trackMouse:adding:",
      "bridgedName": "trackMouse_adding",
      "args": [
        {
          "name": "trackMouse",
          "type": "id"
        },
        {
          "name": "adding",
          "type": "BOOL"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawRect:": {
      "name": "drawRect:",
      "bridgedName": "drawRect",
      "args": [
        {
          "name": "drawRect",
          "type": "struct CGRect"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_compositePointInRuler": {
      "name": "_compositePointInRuler",
      "bridgedName": "_compositePointInRuler",
      "args": [],
      "returns": "struct CGPoint",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_originPointInRuler": {
      "name": "_originPointInRuler",
      "bridgedName": "_originPointInRuler",
      "args": [],
      "returns": "struct CGPoint",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "copyWithZone:": {
      "name": "copyWithZone:",
      "bridgedName": "copyWithZone",
      "args": [
        {
          "name": "copyWithZone",
          "type": "struct _NSZone *"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithRulerView:markerLocation:image:imageOrigin:": {
      "name": "initWithRulerView:markerLocation:image:imageOrigin:",
      "bridgedName": "initWithRulerView_markerLocation_image_imageOrigin",
      "args": [
        {
          "name": "initWithRulerView",
          "type": "id"
        },
        {
          "name": "markerLocation",
          "type": "double"
        },
        {
          "name": "image",
          "type": "id"
        },
        {
          "name": "imageOrigin",
          "type": "struct CGPoint"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "thicknessRequiredInRuler": {
      "name": "thicknessRequiredInRuler",
      "pointer": false,
      "type": "double",
      "attributes": [
        "readonly"
      ]
    },
    "imageRectInRuler": {
      "name": "imageRectInRuler",
      "pointer": false,
      "type": "struct CGRect",
      "attributes": [
        "readonly"
      ]
    },
    "representedObject": {
      "name": "representedObject",
      "pointer": false,
      "type": "id <NSCopying>",
      "attributes": [
        "retain"
      ]
    },
    "dragging": {
      "name": "dragging",
      "pointer": false,
      "type": "BOOL",
      "attributes": [
        "readonly",
        "getter=isDragging"
      ]
    },
    "removable": {
      "name": "removable",
      "pointer": false,
      "type": "BOOL",
      "attributes": [
        "getter=isRemovable"
      ]
    },
    "movable": {
      "name": "movable",
      "pointer": false,
      "type": "BOOL",
      "attributes": [
        "getter=isMovable"
      ]
    },
    "image": {
      "name": "image",
      "pointer": true,
      "type": "NSImage",
      "attributes": [
        "retain"
      ]
    },
    "ruler": {
      "name": "ruler",
      "pointer": true,
      "type": "__weak NSRulerView",
      "attributes": [
        "readonly"
      ]
    }
  }
}