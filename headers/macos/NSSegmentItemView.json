{
  "imports": [],
  "classes": [
    "NSColor",
    "NSFont",
    "NSImage",
    "NSSegmentItem",
    "NSSegmentItemImageView",
    "NSSegmentItemLabelView",
    "NSSegmentedCell",
    "NSString",
    "NSUserInterfaceCompressionOptions"
  ],
  "protocol": false,
  "className": "NSSegmentItemView",
  "extends": "NSView",
  "interfaces": [],
  "methods": {
    ".cxx_destruct": {
      "name": ".cxx_destruct",
      "bridgedName": ".cxx_destruct",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "canSmoothFontsInLayer": {
      "name": "canSmoothFontsInLayer",
      "bridgedName": "canSmoothFontsInLayer",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "updateLayer": {
      "name": "updateLayer",
      "bridgedName": "updateLayer",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "wantsUpdateLayer": {
      "name": "wantsUpdateLayer",
      "bridgedName": "wantsUpdateLayer",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawRect:": {
      "name": "drawRect:",
      "bridgedName": "drawRect",
      "args": [
        {
          "name": "drawRect",
          "type": "struct CGRect"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_drawBezel": {
      "name": "_drawBezel",
      "bridgedName": "_drawBezel",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_labelSize": {
      "name": "_labelSize",
      "bridgedName": "_labelSize",
      "args": [],
      "returns": "struct CGSize",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_updateLabelState": {
      "name": "_updateLabelState",
      "bridgedName": "_updateLabelState",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setLabelView:": {
      "name": "setLabelView:",
      "bridgedName": "setLabelView",
      "args": [
        {
          "name": "setLabelView",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "labelView": {
      "name": "labelView",
      "bridgedName": "labelView",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_updateImageState": {
      "name": "_updateImageState",
      "bridgedName": "_updateImageState",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setImageRect:": {
      "name": "setImageRect:",
      "bridgedName": "setImageRect",
      "args": [
        {
          "name": "setImageRect",
          "type": "struct CGRect"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "layout": {
      "name": "layout",
      "bridgedName": "layout",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_segmentAlignmentRectInsets": {
      "name": "_segmentAlignmentRectInsets",
      "bridgedName": "_segmentAlignmentRectInsets",
      "args": [],
      "returns": "struct NSEdgeInsets",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "lastBaselineOffsetFromBottom": {
      "name": "lastBaselineOffsetFromBottom",
      "bridgedName": "lastBaselineOffsetFromBottom",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_availableTruncationWidth": {
      "name": "_availableTruncationWidth",
      "bridgedName": "_availableTruncationWidth",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_preferredSegmentSize": {
      "name": "_preferredSegmentSize",
      "bridgedName": "_preferredSegmentSize",
      "args": [],
      "returns": "struct CGSize",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_minimumSegmentSize": {
      "name": "_minimumSegmentSize",
      "bridgedName": "_minimumSegmentSize",
      "args": [],
      "returns": "struct CGSize",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_minimumSegmentSizeWithOptions:": {
      "name": "_minimumSegmentSizeWithOptions:",
      "bridgedName": "_minimumSegmentSizeWithOptions",
      "args": [
        {
          "name": "_minimumSegmentSizeWithOptions",
          "type": "id"
        }
      ],
      "returns": "struct CGSize",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "minimumLabelWidth": {
      "name": "minimumLabelWidth",
      "bridgedName": "minimumLabelWidth",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "contentPadding": {
      "name": "contentPadding",
      "bridgedName": "contentPadding",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "contentSpacing": {
      "name": "contentSpacing",
      "bridgedName": "contentSpacing",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_requestMetrics:": {
      "name": "_requestMetrics:",
      "bridgedName": "_requestMetrics",
      "args": [
        {
          "name": "_requestMetrics",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_coreUIOptions": {
      "name": "_coreUIOptions",
      "bridgedName": "_coreUIOptions",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_coreUISegmentPosition": {
      "name": "_coreUISegmentPosition",
      "bridgedName": "_coreUISegmentPosition",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_coreUIState": {
      "name": "_coreUIState",
      "bridgedName": "_coreUIState",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_isSeparatedSegmentStyle": {
      "name": "_isSeparatedSegmentStyle",
      "bridgedName": "_isSeparatedSegmentStyle",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_updateContentState": {
      "name": "_updateContentState",
      "bridgedName": "_updateContentState",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_windowDidOrderOnScreen": {
      "name": "_windowDidOrderOnScreen",
      "bridgedName": "_windowDidOrderOnScreen",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "viewDidMoveToWindow": {
      "name": "viewDidMoveToWindow",
      "bridgedName": "viewDidMoveToWindow",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "viewDidMoveToSuperview": {
      "name": "viewDidMoveToSuperview",
      "bridgedName": "viewDidMoveToSuperview",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_viewDidChangeAppearance:": {
      "name": "_viewDidChangeAppearance:",
      "bridgedName": "_viewDidChangeAppearance",
      "args": [
        {
          "name": "_viewDidChangeAppearance",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "observeValueForKeyPath:ofObject:change:context:": {
      "name": "observeValueForKeyPath:ofObject:change:context:",
      "bridgedName": "observeValueForKeyPath_ofObject_change_context",
      "args": [
        {
          "name": "observeValueForKeyPath",
          "type": "id"
        },
        {
          "name": "ofObject",
          "type": "id"
        },
        {
          "name": "change",
          "type": "id"
        },
        {
          "name": "context",
          "type": "void *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_stopObserving": {
      "name": "_stopObserving",
      "bridgedName": "_stopObserving",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setupObserving": {
      "name": "_setupObserving",
      "bridgedName": "_setupObserving",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityHitTest:": {
      "name": "accessibilityHitTest:",
      "bridgedName": "accessibilityHitTest",
      "args": [
        {
          "name": "accessibilityHitTest",
          "type": "struct CGPoint"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityChildrenAttribute": {
      "name": "accessibilityChildrenAttribute",
      "bridgedName": "accessibilityChildrenAttribute",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isAccessibilityElement": {
      "name": "isAccessibilityElement",
      "bridgedName": "isAccessibilityElement",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithFrame:": {
      "name": "initWithFrame:",
      "bridgedName": "initWithFrame",
      "args": [
        {
          "name": "initWithFrame",
          "type": "struct CGRect"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "bezelTintColor": {
      "name": "bezelTintColor",
      "pointer": true,
      "type": "NSColor",
      "attributes": [
        "copy"
      ]
    },
    "font": {
      "name": "font",
      "pointer": true,
      "type": "NSFont",
      "attributes": [
        "retain"
      ]
    },
    "labelRect": {
      "name": "labelRect",
      "pointer": false,
      "type": "struct CGRect",
      "attributes": [
        "readonly"
      ]
    },
    "label": {
      "name": "label",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "copy"
      ]
    },
    "imageRect": {
      "name": "imageRect",
      "pointer": false,
      "type": "struct CGRect",
      "attributes": [
        "readonly"
      ]
    },
    "image": {
      "name": "image",
      "pointer": true,
      "type": "NSImage",
      "attributes": [
        "retain"
      ]
    }
  }
}