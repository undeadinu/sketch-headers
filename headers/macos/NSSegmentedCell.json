{
  "imports": [],
  "classes": [
    "NSMutableArray"
  ],
  "protocol": false,
  "className": "NSSegmentedCell",
  "extends": "NSActionCell",
  "interfaces": [],
  "methods": {
    "prefersTrackingUntilMouseUp": {
      "name": "prefersTrackingUntilMouseUp",
      "bridgedName": "prefersTrackingUntilMouseUp",
      "args": [],
      "returns": "BOOL",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_labelCell": {
      "name": "_labelCell",
      "bridgedName": "_labelCell",
      "args": [],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_cuiPixelHeightForStyle:size:scale:currentAppearance:semanticContext:": {
      "name": "_cuiPixelHeightForStyle:size:scale:currentAppearance:semanticContext:",
      "bridgedName": "_cuiPixelHeightForStyle_size_scale_currentAppearance_semanticContext",
      "args": [
        {
          "name": "_cuiPixelHeightForStyle",
          "type": "long long"
        },
        {
          "name": "size",
          "type": "unsigned long long"
        },
        {
          "name": "scale",
          "type": "double"
        },
        {
          "name": "currentAppearance",
          "type": "id"
        },
        {
          "name": "semanticContext",
          "type": "int"
        }
      ],
      "returns": "double",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_verticalScaleForControlView:": {
      "name": "_verticalScaleForControlView:",
      "bridgedName": "_verticalScaleForControlView",
      "args": [
        {
          "name": "_verticalScaleForControlView",
          "type": "id"
        }
      ],
      "returns": "double",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_applicableStyleForBaseStyle:automaticStyle:usesWindowsStyle:segmentedSeparatedStyle:shouldUseTexturedToolbarStyle:": {
      "name": "_applicableStyleForBaseStyle:automaticStyle:usesWindowsStyle:segmentedSeparatedStyle:shouldUseTexturedToolbarStyle:",
      "bridgedName": "_applicableStyleForBaseStyle_automaticStyle_usesWindowsStyle_segmentedSeparatedStyle_shouldUseTexturedToolbarStyle",
      "args": [
        {
          "name": "_applicableStyleForBaseStyle",
          "type": "long long"
        },
        {
          "name": "automaticStyle",
          "type": "BOOL"
        },
        {
          "name": "usesWindowsStyle",
          "type": "BOOL"
        },
        {
          "name": "segmentedSeparatedStyle",
          "type": "BOOL"
        },
        {
          "name": "shouldUseTexturedToolbarStyle",
          "type": "BOOL"
        }
      ],
      "returns": "long long",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_styleNeedsRolloverTracking:": {
      "name": "_styleNeedsRolloverTracking:",
      "bridgedName": "_styleNeedsRolloverTracking",
      "args": [
        {
          "name": "_styleNeedsRolloverTracking",
          "type": "long long"
        }
      ],
      "returns": "BOOL",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_isTexturedStyle:": {
      "name": "_isTexturedStyle:",
      "bridgedName": "_isTexturedStyle",
      "args": [
        {
          "name": "_isTexturedStyle",
          "type": "long long"
        }
      ],
      "returns": "BOOL",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_isStyleSeparated:": {
      "name": "_isStyleSeparated:",
      "bridgedName": "_isStyleSeparated",
      "args": [
        {
          "name": "_isStyleSeparated",
          "type": "long long"
        }
      ],
      "returns": "BOOL",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_isStyleAutomatic:": {
      "name": "_isStyleAutomatic:",
      "bridgedName": "_isStyleAutomatic",
      "args": [
        {
          "name": "_isStyleAutomatic",
          "type": "long long"
        }
      ],
      "returns": "BOOL",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_debugDrawOnePixelFrameRect:color:draw:": {
      "name": "_debugDrawOnePixelFrameRect:color:draw:",
      "bridgedName": "_debugDrawOnePixelFrameRect_color_draw",
      "args": [
        {
          "name": "_debugDrawOnePixelFrameRect",
          "type": "struct CGRect"
        },
        {
          "name": "color",
          "type": "id"
        },
        {
          "name": "draw",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_segmentStyleShowsSelectedInBezelWithTracking:tracking:": {
      "name": "_segmentStyleShowsSelectedInBezelWithTracking:tracking:",
      "bridgedName": "_segmentStyleShowsSelectedInBezelWithTracking_tracking",
      "args": [
        {
          "name": "_segmentStyleShowsSelectedInBezelWithTracking",
          "type": "long long"
        },
        {
          "name": "tracking",
          "type": "unsigned long long"
        }
      ],
      "returns": "BOOL",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_segmentStyleWantsOnStateWhenPressedWithMomentaryTracking:": {
      "name": "_segmentStyleWantsOnStateWhenPressedWithMomentaryTracking:",
      "bridgedName": "_segmentStyleWantsOnStateWhenPressedWithMomentaryTracking",
      "args": [
        {
          "name": "_segmentStyleWantsOnStateWhenPressedWithMomentaryTracking",
          "type": "long long"
        }
      ],
      "returns": "BOOL",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_image_state_for_visual_state:style:trackingMode:": {
      "name": "_image_state_for_visual_state:style:trackingMode:",
      "bridgedName": "_image_state_for_visual_state_style_trackingMode",
      "args": [
        {
          "name": "_image_state_for_visual_state",
          "type": "unsigned long long"
        },
        {
          "name": "style",
          "type": "long long"
        },
        {
          "name": "trackingMode",
          "type": "unsigned long long"
        }
      ],
      "returns": "unsigned long long",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_givenState:hasState:": {
      "name": "_givenState:hasState:",
      "bridgedName": "_givenState_hasState",
      "args": [
        {
          "name": "_givenState",
          "type": "unsigned long long"
        },
        {
          "name": "hasState",
          "type": "unsigned long long"
        }
      ],
      "returns": "BOOL",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_segmentStyleIsFakedWithButtonArt:": {
      "name": "_segmentStyleIsFakedWithButtonArt:",
      "bridgedName": "_segmentStyleIsFakedWithButtonArt",
      "args": [
        {
          "name": "_segmentStyleIsFakedWithButtonArt",
          "type": "long long"
        }
      ],
      "returns": "BOOL",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_cuiRectForProposedRect:style:controlSize:scale:currentAppearance:controlView:": {
      "name": "_cuiRectForProposedRect:style:controlSize:scale:currentAppearance:controlView:",
      "bridgedName": "_cuiRectForProposedRect_style_controlSize_scale_currentAppearance_controlView",
      "args": [
        {
          "name": "_cuiRectForProposedRect",
          "type": "struct CGRect"
        },
        {
          "name": "style",
          "type": "long long"
        },
        {
          "name": "controlSize",
          "type": "unsigned long long"
        },
        {
          "name": "scale",
          "type": "double"
        },
        {
          "name": "currentAppearance",
          "type": "id"
        },
        {
          "name": "controlView",
          "type": "id"
        }
      ],
      "returns": "struct CGRect",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_menuIndicatorAdjustForStyle:size:": {
      "name": "_menuIndicatorAdjustForStyle:size:",
      "bridgedName": "_menuIndicatorAdjustForStyle_size",
      "args": [
        {
          "name": "_menuIndicatorAdjustForStyle",
          "type": "long long"
        },
        {
          "name": "size",
          "type": "unsigned long long"
        }
      ],
      "returns": "double",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_bezelToDrawingRectInsetsForStyle:controlSize:scale:semanticContext:": {
      "name": "_bezelToDrawingRectInsetsForStyle:controlSize:scale:semanticContext:",
      "bridgedName": "_bezelToDrawingRectInsetsForStyle_controlSize_scale_semanticContext",
      "args": [
        {
          "name": "_bezelToDrawingRectInsetsForStyle",
          "type": "long long"
        },
        {
          "name": "controlSize",
          "type": "unsigned long long"
        },
        {
          "name": "scale",
          "type": "double"
        },
        {
          "name": "semanticContext",
          "type": "int"
        }
      ],
      "returns": "struct NSEdgeInsets",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_alignmentRectInsetsForStyle:size:semanticContext:": {
      "name": "_alignmentRectInsetsForStyle:size:semanticContext:",
      "bridgedName": "_alignmentRectInsetsForStyle_size_semanticContext",
      "args": [
        {
          "name": "_alignmentRectInsetsForStyle",
          "type": "long long"
        },
        {
          "name": "size",
          "type": "unsigned long long"
        },
        {
          "name": "semanticContext",
          "type": "int"
        }
      ],
      "returns": "struct NSEdgeInsets",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_textVerticalAdjustForStyle:controlSize:font:": {
      "name": "_textVerticalAdjustForStyle:controlSize:font:",
      "bridgedName": "_textVerticalAdjustForStyle_controlSize_font",
      "args": [
        {
          "name": "_textVerticalAdjustForStyle",
          "type": "long long"
        },
        {
          "name": "controlSize",
          "type": "unsigned long long"
        },
        {
          "name": "font",
          "type": "id"
        }
      ],
      "returns": "double",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_additionalContentOffsetForStyle:controlSize:": {
      "name": "_additionalContentOffsetForStyle:controlSize:",
      "bridgedName": "_additionalContentOffsetForStyle_controlSize",
      "args": [
        {
          "name": "_additionalContentOffsetForStyle",
          "type": "long long"
        },
        {
          "name": "controlSize",
          "type": "unsigned long long"
        }
      ],
      "returns": "double",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_endCapWidthForStyle:controlSize:": {
      "name": "_endCapWidthForStyle:controlSize:",
      "bridgedName": "_endCapWidthForStyle_controlSize",
      "args": [
        {
          "name": "_endCapWidthForStyle",
          "type": "long long"
        },
        {
          "name": "controlSize",
          "type": "unsigned long long"
        }
      ],
      "returns": "double",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_preferredHeightForStyle:controlSize:controlView:": {
      "name": "_preferredHeightForStyle:controlSize:controlView:",
      "bridgedName": "_preferredHeightForStyle_controlSize_controlView",
      "args": [
        {
          "name": "_preferredHeightForStyle",
          "type": "long long"
        },
        {
          "name": "controlSize",
          "type": "unsigned long long"
        },
        {
          "name": "controlView",
          "type": "id"
        }
      ],
      "returns": "double",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_coreUISizeForSegmentStyle:controlSize:": {
      "name": "_coreUISizeForSegmentStyle:controlSize:",
      "bridgedName": "_coreUISizeForSegmentStyle_controlSize",
      "args": [
        {
          "name": "_coreUISizeForSegmentStyle",
          "type": "long long"
        },
        {
          "name": "controlSize",
          "type": "unsigned long long"
        }
      ],
      "returns": "struct __CFString *",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_widgetTypeForSegmentStyleFull:semanticContext:": {
      "name": "_widgetTypeForSegmentStyleFull:semanticContext:",
      "bridgedName": "_widgetTypeForSegmentStyleFull_semanticContext",
      "args": [
        {
          "name": "_widgetTypeForSegmentStyleFull",
          "type": "long long"
        },
        {
          "name": "semanticContext",
          "type": "int"
        }
      ],
      "returns": "struct __CFString *",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_widgetTypeForSegmentStyle:semanticContext:": {
      "name": "_widgetTypeForSegmentStyle:semanticContext:",
      "bridgedName": "_widgetTypeForSegmentStyle_semanticContext",
      "args": [
        {
          "name": "_widgetTypeForSegmentStyle",
          "type": "long long"
        },
        {
          "name": "semanticContext",
          "type": "int"
        }
      ],
      "returns": "struct __CFString *",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_widgetTypeStyleCommon:semanticContext:": {
      "name": "_widgetTypeStyleCommon:semanticContext:",
      "bridgedName": "_widgetTypeStyleCommon_semanticContext",
      "args": [
        {
          "name": "_widgetTypeStyleCommon",
          "type": "long long"
        },
        {
          "name": "semanticContext",
          "type": "int"
        }
      ],
      "returns": "struct __CFString *",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_validateControlSize:": {
      "name": "_validateControlSize:",
      "bridgedName": "_validateControlSize",
      "args": [
        {
          "name": "_validateControlSize",
          "type": "unsigned long long"
        }
      ],
      "returns": "unsigned long long",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_setSelectedSegmentBezelColor:": {
      "name": "_setSelectedSegmentBezelColor:",
      "bridgedName": "_setSelectedSegmentBezelColor",
      "args": [
        {
          "name": "_setSelectedSegmentBezelColor",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_selectedSegmentBezelColor": {
      "name": "_selectedSegmentBezelColor",
      "bridgedName": "_selectedSegmentBezelColor",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_applicableTrackingModeForSegment:": {
      "name": "_applicableTrackingModeForSegment:",
      "bridgedName": "_applicableTrackingModeForSegment",
      "args": [
        {
          "name": "_applicableTrackingModeForSegment",
          "type": "long long"
        }
      ],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_proRecalcToolTips": {
      "name": "_proRecalcToolTips",
      "bridgedName": "_proRecalcToolTips",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_proSetRecalcToolTips:": {
      "name": "_proSetRecalcToolTips:",
      "bridgedName": "_proSetRecalcToolTips",
      "args": [
        {
          "name": "_proSetRecalcToolTips",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_initialBackgroundStyleCompatibilityGuessIgnoringExternalContext": {
      "name": "_initialBackgroundStyleCompatibilityGuessIgnoringExternalContext",
      "bridgedName": "_initialBackgroundStyleCompatibilityGuessIgnoringExternalContext",
      "args": [],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "interiorBackgroundStyleForSegment:": {
      "name": "interiorBackgroundStyleForSegment:",
      "bridgedName": "interiorBackgroundStyleForSegment",
      "args": [
        {
          "name": "interiorBackgroundStyleForSegment",
          "type": "long long"
        }
      ],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_keyEquivalentUniquerCreatingIfNecessary:": {
      "name": "_keyEquivalentUniquerCreatingIfNecessary:",
      "bridgedName": "_keyEquivalentUniquerCreatingIfNecessary",
      "args": [
        {
          "name": "_keyEquivalentUniquerCreatingIfNecessary",
          "type": "BOOL"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setMenuShouldBeUniquedAgainstMainMenu:": {
      "name": "_setMenuShouldBeUniquedAgainstMainMenu:",
      "bridgedName": "_setMenuShouldBeUniquedAgainstMainMenu",
      "args": [
        {
          "name": "_setMenuShouldBeUniquedAgainstMainMenu",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_removeAllToolTips": {
      "name": "_removeAllToolTips",
      "bridgedName": "_removeAllToolTips",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_displayDelayedMenu": {
      "name": "_displayDelayedMenu",
      "bridgedName": "_displayDelayedMenu",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_trackSelectedItemMenu": {
      "name": "_trackSelectedItemMenu",
      "bridgedName": "_trackSelectedItemMenu",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_calculateSelectedSegmentForPoint:": {
      "name": "_calculateSelectedSegmentForPoint:",
      "bridgedName": "_calculateSelectedSegmentForPoint",
      "args": [
        {
          "name": "_calculateSelectedSegmentForPoint",
          "type": "struct CGPoint"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "indexOfSegmentContainingPoint:inCellFrame:": {
      "name": "indexOfSegmentContainingPoint:inCellFrame:",
      "bridgedName": "indexOfSegmentContainingPoint_inCellFrame",
      "args": [
        {
          "name": "indexOfSegmentContainingPoint",
          "type": "struct CGPoint"
        },
        {
          "name": "inCellFrame",
          "type": "struct CGRect"
        }
      ],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "performClick:": {
      "name": "performClick:",
      "bridgedName": "performClick",
      "args": [
        {
          "name": "performClick",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_performClick:ignoreMenus:": {
      "name": "_performClick:ignoreMenus:",
      "bridgedName": "_performClick_ignoreMenus",
      "args": [
        {
          "name": "_performClick",
          "type": "id"
        },
        {
          "name": "ignoreMenus",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_performClick:onSegment:ignoreMenus:": {
      "name": "_performClick:onSegment:ignoreMenus:",
      "bridgedName": "_performClick_onSegment_ignoreMenus",
      "args": [
        {
          "name": "_performClick",
          "type": "id"
        },
        {
          "name": "onSegment",
          "type": "long long"
        },
        {
          "name": "ignoreMenus",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_sendActionFrom:": {
      "name": "_sendActionFrom:",
      "bridgedName": "_sendActionFrom",
      "args": [
        {
          "name": "_sendActionFrom",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "stopTracking:at:inView:mouseIsUp:": {
      "name": "stopTracking:at:inView:mouseIsUp:",
      "bridgedName": "stopTracking_at_inView_mouseIsUp",
      "args": [
        {
          "name": "stopTracking",
          "type": "struct CGPoint"
        },
        {
          "name": "at",
          "type": "struct CGPoint"
        },
        {
          "name": "inView",
          "type": "id"
        },
        {
          "name": "mouseIsUp",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_selectHighlightedSegment": {
      "name": "_selectHighlightedSegment",
      "bridgedName": "_selectHighlightedSegment",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_acceleratorTimerFired": {
      "name": "_acceleratorTimerFired",
      "bridgedName": "_acceleratorTimerFired",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "continueTrackingPeriodicEvent:inView:": {
      "name": "continueTrackingPeriodicEvent:inView:",
      "bridgedName": "continueTrackingPeriodicEvent_inView",
      "args": [
        {
          "name": "continueTrackingPeriodicEvent",
          "type": "id"
        },
        {
          "name": "inView",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "continueTrackingGesture:inView:": {
      "name": "continueTrackingGesture:inView:",
      "bridgedName": "continueTrackingGesture_inView",
      "args": [
        {
          "name": "continueTrackingGesture",
          "type": "id"
        },
        {
          "name": "inView",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "continueTracking:at:inView:": {
      "name": "continueTracking:at:inView:",
      "bridgedName": "continueTracking_at_inView",
      "args": [
        {
          "name": "continueTracking",
          "type": "struct CGPoint"
        },
        {
          "name": "at",
          "type": "struct CGPoint"
        },
        {
          "name": "inView",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "startTrackingAt:inView:": {
      "name": "startTrackingAt:inView:",
      "bridgedName": "startTrackingAt_inView",
      "args": [
        {
          "name": "startTrackingAt",
          "type": "struct CGPoint"
        },
        {
          "name": "inView",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "trackMouse:inRect:ofView:untilMouseUp:": {
      "name": "trackMouse:inRect:ofView:untilMouseUp:",
      "bridgedName": "trackMouse_inRect_ofView_untilMouseUp",
      "args": [
        {
          "name": "trackMouse",
          "type": "id"
        },
        {
          "name": "inRect",
          "type": "struct CGRect"
        },
        {
          "name": "ofView",
          "type": "id"
        },
        {
          "name": "untilMouseUp",
          "type": "BOOL"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_cleanupTracking": {
      "name": "_cleanupTracking",
      "bridgedName": "_cleanupTracking",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setupForTackingAtLocation:inRect:ofView:latchingToSingleSegment:": {
      "name": "_setupForTackingAtLocation:inRect:ofView:latchingToSingleSegment:",
      "bridgedName": "_setupForTackingAtLocation_inRect_ofView_latchingToSingleSegment",
      "args": [
        {
          "name": "_setupForTackingAtLocation",
          "type": "struct CGPoint"
        },
        {
          "name": "inRect",
          "type": "struct CGRect"
        },
        {
          "name": "ofView",
          "type": "id"
        },
        {
          "name": "latchingToSingleSegment",
          "type": "BOOL"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_trackMouse:forSegment:inRects:count:inCellFrame:ofView:untilMouseUp:": {
      "name": "_trackMouse:forSegment:inRects:count:inCellFrame:ofView:untilMouseUp:",
      "bridgedName": "_trackMouse_forSegment_inRects_count_inCellFrame_ofView_untilMouseUp",
      "args": [
        {
          "name": "_trackMouse",
          "type": "id"
        },
        {
          "name": "forSegment",
          "type": "long long"
        },
        {
          "name": "inRects",
          "type": "const struct CGRect *"
        },
        {
          "name": "count",
          "type": "unsigned long long"
        },
        {
          "name": "inCellFrame",
          "type": "struct CGRect"
        },
        {
          "name": "ofView",
          "type": "id"
        },
        {
          "name": "untilMouseUp",
          "type": "BOOL"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "touchCancelledAt:inView:": {
      "name": "touchCancelledAt:inView:",
      "bridgedName": "touchCancelledAt_inView",
      "args": [
        {
          "name": "touchCancelledAt",
          "type": "struct CGPoint"
        },
        {
          "name": "inView",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "touchEndedAt:inView:": {
      "name": "touchEndedAt:inView:",
      "bridgedName": "touchEndedAt_inView",
      "args": [
        {
          "name": "touchEndedAt",
          "type": "struct CGPoint"
        },
        {
          "name": "inView",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "touchMovedFrom:to:inView:": {
      "name": "touchMovedFrom:to:inView:",
      "bridgedName": "touchMovedFrom_to_inView",
      "args": [
        {
          "name": "touchMovedFrom",
          "type": "struct CGPoint"
        },
        {
          "name": "to",
          "type": "struct CGPoint"
        },
        {
          "name": "inView",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "touchBeganAt:inView:": {
      "name": "touchBeganAt:inView:",
      "bridgedName": "touchBeganAt_inView",
      "args": [
        {
          "name": "touchBeganAt",
          "type": "struct CGPoint"
        },
        {
          "name": "inView",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_menuDelayTimeForSegment:": {
      "name": "_menuDelayTimeForSegment:",
      "bridgedName": "_menuDelayTimeForSegment",
      "args": [
        {
          "name": "_menuDelayTimeForSegment",
          "type": "long long"
        }
      ],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_segmentedMenuDragSlopRect": {
      "name": "_segmentedMenuDragSlopRect",
      "bridgedName": "_segmentedMenuDragSlopRect",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_segmentedMenuDelayTime": {
      "name": "_segmentedMenuDelayTime",
      "bridgedName": "_segmentedMenuDelayTime",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawSegment:inFrame:withView:": {
      "name": "drawSegment:inFrame:withView:",
      "bridgedName": "drawSegment_inFrame_withView",
      "args": [
        {
          "name": "drawSegment",
          "type": "long long"
        },
        {
          "name": "inFrame",
          "type": "struct CGRect"
        },
        {
          "name": "withView",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_controlOrCellhasDrawingOverrides:": {
      "name": "_controlOrCellhasDrawingOverrides:",
      "bridgedName": "_controlOrCellhasDrawingOverrides",
      "args": [
        {
          "name": "_controlOrCellhasDrawingOverrides",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_usesItemViews": {
      "name": "_usesItemViews",
      "bridgedName": "_usesItemViews",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "wantsUpdateLayerInView:": {
      "name": "wantsUpdateLayerInView:",
      "bridgedName": "wantsUpdateLayerInView",
      "args": [
        {
          "name": "wantsUpdateLayerInView",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_shouldDrawBezel": {
      "name": "_shouldDrawBezel",
      "bridgedName": "_shouldDrawBezel",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_shouldUseAlternateImageForSegment:": {
      "name": "_shouldUseAlternateImageForSegment:",
      "bridgedName": "_shouldUseAlternateImageForSegment",
      "args": [
        {
          "name": "_shouldUseAlternateImageForSegment",
          "type": "long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawInteriorWithFrame:inView:": {
      "name": "drawInteriorWithFrame:inView:",
      "bridgedName": "drawInteriorWithFrame_inView",
      "args": [
        {
          "name": "drawInteriorWithFrame",
          "type": "struct CGRect"
        },
        {
          "name": "inView",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawWithFrame:inView:": {
      "name": "drawWithFrame:inView:",
      "bridgedName": "drawWithFrame_inView",
      "args": [
        {
          "name": "drawWithFrame",
          "type": "struct CGRect"
        },
        {
          "name": "inView",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "titleRectForBounds:": {
      "name": "titleRectForBounds:",
      "bridgedName": "titleRectForBounds",
      "args": [
        {
          "name": "titleRectForBounds",
          "type": "struct CGRect"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "focusRingMaskBoundsForFrame:inView:": {
      "name": "focusRingMaskBoundsForFrame:inView:",
      "bridgedName": "focusRingMaskBoundsForFrame_inView",
      "args": [
        {
          "name": "focusRingMaskBoundsForFrame",
          "type": "struct CGRect"
        },
        {
          "name": "inView",
          "type": "id"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawFocusRingMaskWithFrame:inView:": {
      "name": "drawFocusRingMaskWithFrame:inView:",
      "bridgedName": "drawFocusRingMaskWithFrame_inView",
      "args": [
        {
          "name": "drawFocusRingMaskWithFrame",
          "type": "struct CGRect"
        },
        {
          "name": "inView",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_vibrancyBlendModeForControlView:": {
      "name": "_vibrancyBlendModeForControlView:",
      "bridgedName": "_vibrancyBlendModeForControlView",
      "args": [
        {
          "name": "_vibrancyBlendModeForControlView",
          "type": "id"
        }
      ],
      "returns": "int",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "canSmoothFontsInFrame:forLayerBackedView:": {
      "name": "canSmoothFontsInFrame:forLayerBackedView:",
      "bridgedName": "canSmoothFontsInFrame_forLayerBackedView",
      "args": [
        {
          "name": "canSmoothFontsInFrame",
          "type": "struct CGRect"
        },
        {
          "name": "forLayerBackedView",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_funkyOptOutLogicThatShouldGoAwayForView:semanticContext:": {
      "name": "_funkyOptOutLogicThatShouldGoAwayForView:semanticContext:",
      "bridgedName": "_funkyOptOutLogicThatShouldGoAwayForView_semanticContext",
      "args": [
        {
          "name": "_funkyOptOutLogicThatShouldGoAwayForView",
          "type": "id"
        },
        {
          "name": "semanticContext",
          "type": "int"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_copyCoreUIBackgroundDrawOptionsForSegment:inView:drawFlags:": {
      "name": "_copyCoreUIBackgroundDrawOptionsForSegment:inView:drawFlags:",
      "bridgedName": "_copyCoreUIBackgroundDrawOptionsForSegment_inView_drawFlags",
      "args": [
        {
          "name": "_copyCoreUIBackgroundDrawOptionsForSegment",
          "type": "long long"
        },
        {
          "name": "inView",
          "type": "id"
        },
        {
          "name": "drawFlags",
          "type": "unsigned long long *"
        }
      ],
      "returns": "struct __CFDictionary *",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_segmentHighlightState:": {
      "name": "_segmentHighlightState:",
      "bridgedName": "_segmentHighlightState",
      "args": [
        {
          "name": "_segmentHighlightState",
          "type": "long long"
        }
      ],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_getVisualStateForSegment:andTrackingMode:forApplicableStyle:": {
      "name": "_getVisualStateForSegment:andTrackingMode:forApplicableStyle:",
      "bridgedName": "_getVisualStateForSegment_andTrackingMode_forApplicableStyle",
      "args": [
        {
          "name": "_getVisualStateForSegment",
          "type": "unsigned long long"
        },
        {
          "name": "andTrackingMode",
          "type": "unsigned long long *"
        },
        {
          "name": "forApplicableStyle",
          "type": "long long"
        }
      ],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_applicableSegmentedCellStyle": {
      "name": "_applicableSegmentedCellStyle",
      "bridgedName": "_applicableSegmentedCellStyle",
      "args": [],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_wantsMenuIndicatorForSegment:": {
      "name": "_wantsMenuIndicatorForSegment:",
      "bridgedName": "_wantsMenuIndicatorForSegment",
      "args": [
        {
          "name": "_wantsMenuIndicatorForSegment",
          "type": "long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "rectForSegment:inFrame:": {
      "name": "rectForSegment:inFrame:",
      "bridgedName": "rectForSegment_inFrame",
      "args": [
        {
          "name": "rectForSegment",
          "type": "long long"
        },
        {
          "name": "inFrame",
          "type": "struct CGRect"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_labelRectForSegment:inFrame:withView:": {
      "name": "_labelRectForSegment:inFrame:withView:",
      "bridgedName": "_labelRectForSegment_inFrame_withView",
      "args": [
        {
          "name": "_labelRectForSegment",
          "type": "long long"
        },
        {
          "name": "inFrame",
          "type": "struct CGRect"
        },
        {
          "name": "withView",
          "type": "id"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_rectForSegment:inFrame:": {
      "name": "_rectForSegment:inFrame:",
      "bridgedName": "_rectForSegment_inFrame",
      "args": [
        {
          "name": "_rectForSegment",
          "type": "long long"
        },
        {
          "name": "inFrame",
          "type": "struct CGRect"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_adjustRectForR2L:inFrame:": {
      "name": "_adjustRectForR2L:inFrame:",
      "bridgedName": "_adjustRectForR2L_inFrame",
      "args": [
        {
          "name": "_adjustRectForR2L",
          "type": "struct CGRect *"
        },
        {
          "name": "inFrame",
          "type": "struct CGRect"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_boundsForCellFrame:": {
      "name": "_boundsForCellFrame:",
      "bridgedName": "_boundsForCellFrame",
      "args": [
        {
          "name": "_boundsForCellFrame",
          "type": "struct CGRect"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isOpaque": {
      "name": "isOpaque",
      "bridgedName": "isOpaque",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "hitTestForEvent:inRect:ofView:": {
      "name": "hitTestForEvent:inRect:ofView:",
      "bridgedName": "hitTestForEvent_inRect_ofView",
      "args": [
        {
          "name": "hitTestForEvent",
          "type": "id"
        },
        {
          "name": "inRect",
          "type": "struct CGRect"
        },
        {
          "name": "ofView",
          "type": "id"
        }
      ],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawingRectForBounds:": {
      "name": "drawingRectForBounds:",
      "bridgedName": "drawingRectForBounds",
      "args": [
        {
          "name": "drawingRectForBounds",
          "type": "struct CGRect"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setCompressibleOptions:forControlView:": {
      "name": "_setCompressibleOptions:forControlView:",
      "bridgedName": "_setCompressibleOptions_forControlView",
      "args": [
        {
          "name": "_setCompressibleOptions",
          "type": "id"
        },
        {
          "name": "forControlView",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_compressibleOptionsForControlView:": {
      "name": "_compressibleOptionsForControlView:",
      "bridgedName": "_compressibleOptionsForControlView",
      "args": [
        {
          "name": "_compressibleOptionsForControlView",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_minimumCellSizeWithOptions:forBounds:": {
      "name": "_minimumCellSizeWithOptions:forBounds:",
      "bridgedName": "_minimumCellSizeWithOptions_forBounds",
      "args": [
        {
          "name": "_minimumCellSizeWithOptions",
          "type": "id"
        },
        {
          "name": "forBounds",
          "type": "struct CGRect"
        }
      ],
      "returns": "struct CGSize",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "minimumCellSizeForBounds:": {
      "name": "minimumCellSizeForBounds:",
      "bridgedName": "minimumCellSizeForBounds",
      "args": [
        {
          "name": "minimumCellSizeForBounds",
          "type": "struct CGRect"
        }
      ],
      "returns": "struct CGSize",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "cellSizeForBounds:": {
      "name": "cellSizeForBounds:",
      "bridgedName": "cellSizeForBounds",
      "args": [
        {
          "name": "cellSizeForBounds",
          "type": "struct CGRect"
        }
      ],
      "returns": "struct CGSize",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_cellSizeForBounds:distribution:": {
      "name": "_cellSizeForBounds:distribution:",
      "bridgedName": "_cellSizeForBounds_distribution",
      "args": [
        {
          "name": "_cellSizeForBounds",
          "type": "struct CGRect"
        },
        {
          "name": "distribution",
          "type": "long long"
        }
      ],
      "returns": "struct CGSize",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setHidesUnselectedLabelsWhenNecessary:": {
      "name": "_setHidesUnselectedLabelsWhenNecessary:",
      "bridgedName": "_setHidesUnselectedLabelsWhenNecessary",
      "args": [
        {
          "name": "_setHidesUnselectedLabelsWhenNecessary",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_hidesUnselectedLabelsWhenNecessary": {
      "name": "_hidesUnselectedLabelsWhenNecessary",
      "bridgedName": "_hidesUnselectedLabelsWhenNecessary",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "springLoadingExited:": {
      "name": "springLoadingExited:",
      "bridgedName": "springLoadingExited",
      "args": [
        {
          "name": "springLoadingExited",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "springLoadingHighlightChanged:": {
      "name": "springLoadingHighlightChanged:",
      "bridgedName": "springLoadingHighlightChanged",
      "args": [
        {
          "name": "springLoadingHighlightChanged",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "springLoadingActivated:draggingInfo:": {
      "name": "springLoadingActivated:draggingInfo:",
      "bridgedName": "springLoadingActivated_draggingInfo",
      "args": [
        {
          "name": "springLoadingActivated",
          "type": "BOOL"
        },
        {
          "name": "draggingInfo",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "springLoadingUpdated:": {
      "name": "springLoadingUpdated:",
      "bridgedName": "springLoadingUpdated",
      "args": [
        {
          "name": "springLoadingUpdated",
          "type": "id"
        }
      ],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "springLoadingEntered:": {
      "name": "springLoadingEntered:",
      "bridgedName": "springLoadingEntered",
      "args": [
        {
          "name": "springLoadingEntered",
          "type": "id"
        }
      ],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_springLoadSegment:": {
      "name": "_springLoadSegment:",
      "bridgedName": "_springLoadSegment",
      "args": [
        {
          "name": "_springLoadSegment",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setSpringLoadingSegment:": {
      "name": "_setSpringLoadingSegment:",
      "bridgedName": "_setSpringLoadingSegment",
      "args": [
        {
          "name": "_setSpringLoadingSegment",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_springLoadingSegment": {
      "name": "_springLoadingSegment",
      "bridgedName": "_springLoadingSegment",
      "args": [],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setMouseTrackingInRect:ofView:withConfiguration:": {
      "name": "_setMouseTrackingInRect:ofView:withConfiguration:",
      "bridgedName": "_setMouseTrackingInRect_ofView_withConfiguration",
      "args": [
        {
          "name": "_setMouseTrackingInRect",
          "type": "struct CGRect"
        },
        {
          "name": "ofView",
          "type": "id"
        },
        {
          "name": "withConfiguration",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_pressureConfigurationIfNeeded": {
      "name": "_pressureConfigurationIfNeeded",
      "bridgedName": "_pressureConfigurationIfNeeded",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "updateTrackingAreaWithFrame:inView:": {
      "name": "updateTrackingAreaWithFrame:inView:",
      "bridgedName": "updateTrackingAreaWithFrame_inView",
      "args": [
        {
          "name": "updateTrackingAreaWithFrame",
          "type": "struct CGRect"
        },
        {
          "name": "inView",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_updateMouseTracking": {
      "name": "_updateMouseTracking",
      "bridgedName": "_updateMouseTracking",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_clearMouseTracking": {
      "name": "_clearMouseTracking",
      "bridgedName": "_clearMouseTracking",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "mouseExited:": {
      "name": "mouseExited:",
      "bridgedName": "mouseExited",
      "args": [
        {
          "name": "mouseExited",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "mouseEntered:": {
      "name": "mouseEntered:",
      "bridgedName": "mouseEntered",
      "args": [
        {
          "name": "mouseEntered",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_postRolloverNotification": {
      "name": "_postRolloverNotification",
      "bridgedName": "_postRolloverNotification",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_segmentShowingRollover": {
      "name": "_segmentShowingRollover",
      "bridgedName": "_segmentShowingRollover",
      "args": [],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setControlView:": {
      "name": "setControlView:",
      "bridgedName": "setControlView",
      "args": [
        {
          "name": "setControlView",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_controlViewDidChangeEffectiveAppearance:": {
      "name": "_controlViewDidChangeEffectiveAppearance:",
      "bridgedName": "_controlViewDidChangeEffectiveAppearance",
      "args": [
        {
          "name": "_controlViewDidChangeEffectiveAppearance",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_invalidateSegmentSizes": {
      "name": "_invalidateSegmentSizes",
      "bridgedName": "_invalidateSegmentSizes",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setControlSize:": {
      "name": "setControlSize:",
      "bridgedName": "setControlSize",
      "args": [
        {
          "name": "setControlSize",
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setFont:": {
      "name": "setFont:",
      "bridgedName": "setFont",
      "args": [
        {
          "name": "setFont",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_segmentAlignmentRectInsetsForControlView:": {
      "name": "_segmentAlignmentRectInsetsForControlView:",
      "bridgedName": "_segmentAlignmentRectInsetsForControlView",
      "args": [
        {
          "name": "_segmentAlignmentRectInsetsForControlView",
          "type": "id"
        }
      ],
      "returns": "struct NSEdgeInsets",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_baselineOffsetFromBottomOfControlView:": {
      "name": "_baselineOffsetFromBottomOfControlView:",
      "bridgedName": "_baselineOffsetFromBottomOfControlView",
      "args": [
        {
          "name": "_baselineOffsetFromBottomOfControlView",
          "type": "id"
        }
      ],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setUserInterfaceLayoutDirection:": {
      "name": "setUserInterfaceLayoutDirection:",
      "bridgedName": "setUserInterfaceLayoutDirection",
      "args": [
        {
          "name": "setUserInterfaceLayoutDirection",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "layoutLayerWithFrame:inView:": {
      "name": "layoutLayerWithFrame:inView:",
      "bridgedName": "layoutLayerWithFrame_inView",
      "args": [
        {
          "name": "layoutLayerWithFrame",
          "type": "struct CGRect"
        },
        {
          "name": "inView",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_isFlatOnEdge:": {
      "name": "_isFlatOnEdge:",
      "bridgedName": "_isFlatOnEdge",
      "args": [
        {
          "name": "_isFlatOnEdge",
          "type": "unsigned long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setIsFlat:onEdge:": {
      "name": "_setIsFlat:onEdge:",
      "bridgedName": "_setIsFlat_onEdge",
      "args": [
        {
          "name": "_setIsFlat",
          "type": "BOOL"
        },
        {
          "name": "onEdge",
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityLabelForSegment:": {
      "name": "accessibilityLabelForSegment:",
      "bridgedName": "accessibilityLabelForSegment",
      "args": [
        {
          "name": "accessibilityLabelForSegment",
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setAccessibilityLabel:forSegment:": {
      "name": "setAccessibilityLabel:forSegment:",
      "bridgedName": "setAccessibilityLabel_forSegment",
      "args": [
        {
          "name": "setAccessibilityLabel",
          "type": "id"
        },
        {
          "name": "forSegment",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "alignmentForSegment:": {
      "name": "alignmentForSegment:",
      "bridgedName": "alignmentForSegment",
      "args": [
        {
          "name": "alignmentForSegment",
          "type": "long long"
        }
      ],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setAlignment:forSegment:": {
      "name": "setAlignment:forSegment:",
      "bridgedName": "setAlignment_forSegment",
      "args": [
        {
          "name": "setAlignment",
          "type": "unsigned long long"
        },
        {
          "name": "forSegment",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isMenuIndicatorShownForSegment:": {
      "name": "isMenuIndicatorShownForSegment:",
      "bridgedName": "isMenuIndicatorShownForSegment",
      "args": [
        {
          "name": "isMenuIndicatorShownForSegment",
          "type": "long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setMenuIndicatorShown:forSegment:": {
      "name": "setMenuIndicatorShown:forSegment:",
      "bridgedName": "setMenuIndicatorShown_forSegment",
      "args": [
        {
          "name": "setMenuIndicatorShown",
          "type": "BOOL"
        },
        {
          "name": "forSegment",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "showsMenuIndicatorForSegment:": {
      "name": "showsMenuIndicatorForSegment:",
      "bridgedName": "showsMenuIndicatorForSegment",
      "args": [
        {
          "name": "showsMenuIndicatorForSegment",
          "type": "long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setShowsMenuIndicator:forSegment:": {
      "name": "setShowsMenuIndicator:forSegment:",
      "bridgedName": "setShowsMenuIndicator_forSegment",
      "args": [
        {
          "name": "setShowsMenuIndicator",
          "type": "BOOL"
        },
        {
          "name": "forSegment",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tagForSegment:": {
      "name": "tagForSegment:",
      "bridgedName": "tagForSegment",
      "args": [
        {
          "name": "tagForSegment",
          "type": "long long"
        }
      ],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setTag:forSegment:": {
      "name": "setTag:forSegment:",
      "bridgedName": "setTag_forSegment",
      "args": [
        {
          "name": "setTag",
          "type": "long long"
        },
        {
          "name": "forSegment",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_hasItemTooltips": {
      "name": "_hasItemTooltips",
      "bridgedName": "_hasItemTooltips",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setNeedsToolTipRecalc:": {
      "name": "_setNeedsToolTipRecalc:",
      "bridgedName": "_setNeedsToolTipRecalc",
      "args": [
        {
          "name": "_setNeedsToolTipRecalc",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_needsToolTipRecalc": {
      "name": "_needsToolTipRecalc",
      "bridgedName": "_needsToolTipRecalc",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "toolTipForSegment:": {
      "name": "toolTipForSegment:",
      "bridgedName": "toolTipForSegment",
      "args": [
        {
          "name": "toolTipForSegment",
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setToolTip:forSegment:": {
      "name": "setToolTip:forSegment:",
      "bridgedName": "setToolTip_forSegment",
      "args": [
        {
          "name": "setToolTip",
          "type": "id"
        },
        {
          "name": "forSegment",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "menuForSegment:": {
      "name": "menuForSegment:",
      "bridgedName": "menuForSegment",
      "args": [
        {
          "name": "menuForSegment",
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setMenu:forSegment:": {
      "name": "setMenu:forSegment:",
      "bridgedName": "setMenu_forSegment",
      "args": [
        {
          "name": "setMenu",
          "type": "id"
        },
        {
          "name": "forSegment",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isEnabledForSegment:": {
      "name": "isEnabledForSegment:",
      "bridgedName": "isEnabledForSegment",
      "args": [
        {
          "name": "isEnabledForSegment",
          "type": "long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setEnabled:forSegment:": {
      "name": "setEnabled:forSegment:",
      "bridgedName": "setEnabled_forSegment",
      "args": [
        {
          "name": "setEnabled",
          "type": "BOOL"
        },
        {
          "name": "forSegment",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setEnabled:": {
      "name": "setEnabled:",
      "bridgedName": "setEnabled",
      "args": [
        {
          "name": "setEnabled",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isSelectedForSegment:": {
      "name": "isSelectedForSegment:",
      "bridgedName": "isSelectedForSegment",
      "args": [
        {
          "name": "isSelectedForSegment",
          "type": "long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setSelected:forSegment:": {
      "name": "setSelected:forSegment:",
      "bridgedName": "setSelected_forSegment",
      "args": [
        {
          "name": "setSelected",
          "type": "BOOL"
        },
        {
          "name": "forSegment",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "labelForSegment:": {
      "name": "labelForSegment:",
      "bridgedName": "labelForSegment",
      "args": [
        {
          "name": "labelForSegment",
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "imageScalingForSegment:": {
      "name": "imageScalingForSegment:",
      "bridgedName": "imageScalingForSegment",
      "args": [
        {
          "name": "imageScalingForSegment",
          "type": "long long"
        }
      ],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setImageScaling:forSegment:": {
      "name": "setImageScaling:forSegment:",
      "bridgedName": "setImageScaling_forSegment",
      "args": [
        {
          "name": "setImageScaling",
          "type": "unsigned long long"
        },
        {
          "name": "forSegment",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setLabel:forSegment:": {
      "name": "setLabel:forSegment:",
      "bridgedName": "setLabel_forSegment",
      "args": [
        {
          "name": "setLabel",
          "type": "id"
        },
        {
          "name": "forSegment",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "alternateImageForSegment:": {
      "name": "alternateImageForSegment:",
      "bridgedName": "alternateImageForSegment",
      "args": [
        {
          "name": "alternateImageForSegment",
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setAlternateImage:forSegment:": {
      "name": "setAlternateImage:forSegment:",
      "bridgedName": "setAlternateImage_forSegment",
      "args": [
        {
          "name": "setAlternateImage",
          "type": "id"
        },
        {
          "name": "forSegment",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setImage:forSegment:": {
      "name": "setImage:forSegment:",
      "bridgedName": "setImage_forSegment",
      "args": [
        {
          "name": "setImage",
          "type": "id"
        },
        {
          "name": "forSegment",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "imageForSegment:": {
      "name": "imageForSegment:",
      "bridgedName": "imageForSegment",
      "args": [
        {
          "name": "imageForSegment",
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "widthForSegment:": {
      "name": "widthForSegment:",
      "bridgedName": "widthForSegment",
      "args": [
        {
          "name": "widthForSegment",
          "type": "long long"
        }
      ],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setWidth:forSegment:": {
      "name": "setWidth:forSegment:",
      "bridgedName": "setWidth_forSegment",
      "args": [
        {
          "name": "setWidth",
          "type": "double"
        },
        {
          "name": "forSegment",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setContinuous:": {
      "name": "setContinuous:",
      "bridgedName": "setContinuous",
      "args": [
        {
          "name": "setContinuous",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_segmentedCellStyle": {
      "name": "_segmentedCellStyle",
      "bridgedName": "_segmentedCellStyle",
      "args": [],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setSegmentedCellStyle:": {
      "name": "_setSegmentedCellStyle:",
      "bridgedName": "_setSegmentedCellStyle",
      "args": [
        {
          "name": "_setSegmentedCellStyle",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setSegmentStyle:forceRecalc:": {
      "name": "setSegmentStyle:forceRecalc:",
      "bridgedName": "setSegmentStyle_forceRecalc",
      "args": [
        {
          "name": "setSegmentStyle",
          "type": "long long"
        },
        {
          "name": "forceRecalc",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setFlagsForStyle:": {
      "name": "_setFlagsForStyle:",
      "bridgedName": "_setFlagsForStyle",
      "args": [
        {
          "name": "_setFlagsForStyle",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_controlViewDidMoveToWindow:": {
      "name": "_controlViewDidMoveToWindow:",
      "bridgedName": "_controlViewDidMoveToWindow",
      "args": [
        {
          "name": "_controlViewDidMoveToWindow",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_windowChangedKeyStateInView:": {
      "name": "_windowChangedKeyStateInView:",
      "bridgedName": "_windowChangedKeyStateInView",
      "args": [
        {
          "name": "_windowChangedKeyStateInView",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_needRedrawOnWindowChangedKeyState": {
      "name": "_needRedrawOnWindowChangedKeyState",
      "bridgedName": "_needRedrawOnWindowChangedKeyState",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_inactiveStateShowsRolloversForSegment:": {
      "name": "_inactiveStateShowsRolloversForSegment:",
      "bridgedName": "_inactiveStateShowsRolloversForSegment",
      "args": [
        {
          "name": "_inactiveStateShowsRolloversForSegment",
          "type": "long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setInactiveStateShowsRollovers:forSegment:": {
      "name": "_setInactiveStateShowsRollovers:forSegment:",
      "bridgedName": "_setInactiveStateShowsRollovers_forSegment",
      "args": [
        {
          "name": "_setInactiveStateShowsRollovers",
          "type": "BOOL"
        },
        {
          "name": "forSegment",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_needsGasPedalConfiguration": {
      "name": "_needsGasPedalConfiguration",
      "bridgedName": "_needsGasPedalConfiguration",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_needsRolloverTracking": {
      "name": "_needsRolloverTracking",
      "bridgedName": "_needsRolloverTracking",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setDoubleValue:": {
      "name": "setDoubleValue:",
      "bridgedName": "setDoubleValue",
      "args": [
        {
          "name": "setDoubleValue",
          "type": "double"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "doubleValue": {
      "name": "doubleValue",
      "bridgedName": "doubleValue",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setFloatValue:": {
      "name": "setFloatValue:",
      "bridgedName": "setFloatValue",
      "args": [
        {
          "name": "setFloatValue",
          "type": "float"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "floatValue": {
      "name": "floatValue",
      "bridgedName": "floatValue",
      "args": [],
      "returns": "float",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setIntegerValue:": {
      "name": "setIntegerValue:",
      "bridgedName": "setIntegerValue",
      "args": [
        {
          "name": "setIntegerValue",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "integerValue": {
      "name": "integerValue",
      "bridgedName": "integerValue",
      "args": [],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setIntValue:": {
      "name": "setIntValue:",
      "bridgedName": "setIntValue",
      "args": [
        {
          "name": "setIntValue",
          "type": "int"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "intValue": {
      "name": "intValue",
      "bridgedName": "intValue",
      "args": [],
      "returns": "int",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "objectValue": {
      "name": "objectValue",
      "bridgedName": "objectValue",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setObjectValue:": {
      "name": "setObjectValue:",
      "bridgedName": "setObjectValue",
      "args": [
        {
          "name": "setObjectValue",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_segmentsDeselectedBySegment:": {
      "name": "_segmentsDeselectedBySegment:",
      "bridgedName": "_segmentsDeselectedBySegment",
      "args": [
        {
          "name": "_segmentsDeselectedBySegment",
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "acceptsFirstResponder": {
      "name": "acceptsFirstResponder",
      "bridgedName": "acceptsFirstResponder",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "makePreviousSegmentKey": {
      "name": "makePreviousSegmentKey",
      "bridgedName": "makePreviousSegmentKey",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "makeNextSegmentKey": {
      "name": "makeNextSegmentKey",
      "bridgedName": "makeNextSegmentKey",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setIndexOfHilightedSegment:": {
      "name": "_setIndexOfHilightedSegment:",
      "bridgedName": "_setIndexOfHilightedSegment",
      "args": [
        {
          "name": "_setIndexOfHilightedSegment",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_indexOfHilightedSegment": {
      "name": "_indexOfHilightedSegment",
      "bridgedName": "_indexOfHilightedSegment",
      "args": [],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setHighlighted:": {
      "name": "setHighlighted:",
      "bridgedName": "setHighlighted",
      "args": [
        {
          "name": "setHighlighted",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setKeySegment:": {
      "name": "_setKeySegment:",
      "bridgedName": "_setKeySegment",
      "args": [
        {
          "name": "_setKeySegment",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_keySegment": {
      "name": "_keySegment",
      "bridgedName": "_keySegment",
      "args": [],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "indexOfSelectedItem": {
      "name": "indexOfSelectedItem",
      "bridgedName": "indexOfSelectedItem",
      "args": [],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "selectSegmentWithTag:": {
      "name": "selectSegmentWithTag:",
      "bridgedName": "selectSegmentWithTag",
      "args": [
        {
          "name": "selectSegmentWithTag",
          "type": "long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_trackingSegment": {
      "name": "_trackingSegment",
      "bridgedName": "_trackingSegment",
      "args": [],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_mouseIsInsideSegmentAtIndex:": {
      "name": "_mouseIsInsideSegmentAtIndex:",
      "bridgedName": "_mouseIsInsideSegmentAtIndex",
      "args": [
        {
          "name": "_mouseIsInsideSegmentAtIndex",
          "type": "long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_haveSegmentAtIndex:": {
      "name": "_haveSegmentAtIndex:",
      "bridgedName": "_haveSegmentAtIndex",
      "args": [
        {
          "name": "_haveSegmentAtIndex",
          "type": "long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_segmentItemAtIndex:": {
      "name": "_segmentItemAtIndex:",
      "bridgedName": "_segmentItemAtIndex",
      "args": [
        {
          "name": "_segmentItemAtIndex",
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_segmentItems": {
      "name": "_segmentItems",
      "bridgedName": "_segmentItems",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "segmentDistribution": {
      "name": "segmentDistribution",
      "bridgedName": "segmentDistribution",
      "args": [],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setSegmentDistribution:": {
      "name": "setSegmentDistribution:",
      "bridgedName": "setSegmentDistribution",
      "args": [
        {
          "name": "setSegmentDistribution",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setBezeled:": {
      "name": "setBezeled:",
      "bridgedName": "setBezeled",
      "args": [
        {
          "name": "setBezeled",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setBordered:": {
      "name": "setBordered:",
      "bridgedName": "setBordered",
      "args": [
        {
          "name": "setBordered",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_auxiliaryStorage": {
      "name": "_auxiliaryStorage",
      "bridgedName": "_auxiliaryStorage",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setDontShowSelectedAndPressedAppearance:": {
      "name": "_setDontShowSelectedAndPressedAppearance:",
      "bridgedName": "_setDontShowSelectedAndPressedAppearance",
      "args": [
        {
          "name": "_setDontShowSelectedAndPressedAppearance",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_dontShowSelectedAndPressedAppearance": {
      "name": "_dontShowSelectedAndPressedAppearance",
      "bridgedName": "_dontShowSelectedAndPressedAppearance",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setTrackingMode:": {
      "name": "_setTrackingMode:",
      "bridgedName": "_setTrackingMode",
      "args": [
        {
          "name": "_setTrackingMode",
          "type": "unsigned int"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_trackingMode": {
      "name": "_trackingMode",
      "bridgedName": "_trackingMode",
      "args": [],
      "returns": "unsigned int",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setSegmentedSeparated:": {
      "name": "_setSegmentedSeparated:",
      "bridgedName": "_setSegmentedSeparated",
      "args": [
        {
          "name": "_setSegmentedSeparated",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_segmentedSeparatedStyle": {
      "name": "_segmentedSeparatedStyle",
      "bridgedName": "_segmentedSeparatedStyle",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setUsesWindowsStyle:": {
      "name": "_setUsesWindowsStyle:",
      "bridgedName": "_setUsesWindowsStyle",
      "args": [
        {
          "name": "_setUsesWindowsStyle",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_usesWindowsStyle": {
      "name": "_usesWindowsStyle",
      "bridgedName": "_usesWindowsStyle",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setBaseStyle:": {
      "name": "_setBaseStyle:",
      "bridgedName": "_setBaseStyle",
      "args": [
        {
          "name": "_setBaseStyle",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_baseStyle": {
      "name": "_baseStyle",
      "bridgedName": "_baseStyle",
      "args": [],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithCoder:": {
      "name": "initWithCoder:",
      "bridgedName": "initWithCoder",
      "args": [
        {
          "name": "initWithCoder",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "encodeWithCoder:": {
      "name": "encodeWithCoder:",
      "bridgedName": "encodeWithCoder",
      "args": [
        {
          "name": "encodeWithCoder",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_springLoadingHighlightForSegment:": {
      "name": "_springLoadingHighlightForSegment:",
      "bridgedName": "_springLoadingHighlightForSegment",
      "args": [
        {
          "name": "_springLoadingHighlightForSegment",
          "type": "long long"
        }
      ],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setSpringLoadingHighlightForSegment:toValue:": {
      "name": "_setSpringLoadingHighlightForSegment:toValue:",
      "bridgedName": "_setSpringLoadingHighlightForSegment_toValue",
      "args": [
        {
          "name": "_setSpringLoadingHighlightForSegment",
          "type": "long long"
        },
        {
          "name": "toValue",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_makeSegmentItemsPerformSelector:": {
      "name": "_makeSegmentItemsPerformSelector:",
      "bridgedName": "_makeSegmentItemsPerformSelector",
      "args": [
        {
          "name": "_makeSegmentItemsPerformSelector",
          "type": "SEL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setItemAtIndex:isSelected:": {
      "name": "_setItemAtIndex:isSelected:",
      "bridgedName": "_setItemAtIndex_isSelected",
      "args": [
        {
          "name": "_setItemAtIndex",
          "type": "long long"
        },
        {
          "name": "isSelected",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_updateSeparatorState": {
      "name": "_updateSeparatorState",
      "bridgedName": "_updateSeparatorState",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_deselectAllButFirstSelectedSegment": {
      "name": "_deselectAllButFirstSelectedSegment",
      "bridgedName": "_deselectAllButFirstSelectedSegment",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_deselectAllSegments": {
      "name": "_deselectAllSegments",
      "bridgedName": "_deselectAllSegments",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_itemAtIndexIsSelected:": {
      "name": "_itemAtIndexIsSelected:",
      "bridgedName": "_itemAtIndexIsSelected",
      "args": [
        {
          "name": "_itemAtIndexIsSelected",
          "type": "long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_indexOfSelectedSegment": {
      "name": "_indexOfSelectedSegment",
      "bridgedName": "_indexOfSelectedSegment",
      "args": [],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_subtractSegmentItemCount:": {
      "name": "_subtractSegmentItemCount:",
      "bridgedName": "_subtractSegmentItemCount",
      "args": [
        {
          "name": "_subtractSegmentItemCount",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_addSegmentItemCount:": {
      "name": "_addSegmentItemCount:",
      "bridgedName": "_addSegmentItemCount",
      "args": [
        {
          "name": "_addSegmentItemCount",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_removeNSSegmentItemViewsFromControlView:": {
      "name": "_removeNSSegmentItemViewsFromControlView:",
      "bridgedName": "_removeNSSegmentItemViewsFromControlView",
      "args": [
        {
          "name": "_removeNSSegmentItemViewsFromControlView",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_addNSSegmentItemViewsToControlView:": {
      "name": "_addNSSegmentItemViewsToControlView:",
      "bridgedName": "_addNSSegmentItemViewsToControlView",
      "args": [
        {
          "name": "_addNSSegmentItemViewsToControlView",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setSegmentItems:updateSegmentItemViews:": {
      "name": "_setSegmentItems:updateSegmentItemViews:",
      "bridgedName": "_setSegmentItems_updateSegmentItemViews",
      "args": [
        {
          "name": "_setSegmentItems",
          "type": "id"
        },
        {
          "name": "updateSegmentItemViews",
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "copyWithZone:": {
      "name": "copyWithZone:",
      "bridgedName": "copyWithZone",
      "args": [
        {
          "name": "copyWithZone",
          "type": "struct _NSZone *"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "init": {
      "name": "init",
      "bridgedName": "init",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_performKeyEquivalent:conditionally:": {
      "name": "_performKeyEquivalent:conditionally:",
      "bridgedName": "_performKeyEquivalent_conditionally",
      "args": [
        {
          "name": "_performKeyEquivalent",
          "type": "id"
        },
        {
          "name": "conditionally",
          "type": "BOOL"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "getPeriodicDelay:interval:": {
      "name": "getPeriodicDelay:interval:",
      "bridgedName": "getPeriodicDelay_interval",
      "args": [
        {
          "name": "getPeriodicDelay",
          "type": "float *"
        },
        {
          "name": "interval",
          "type": "float *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "doubleValueForSelectedSegment": {
      "name": "doubleValueForSelectedSegment",
      "bridgedName": "doubleValueForSelectedSegment",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_badgeValueForSegment:": {
      "name": "_badgeValueForSegment:",
      "bridgedName": "_badgeValueForSegment",
      "args": [
        {
          "name": "_badgeValueForSegment",
          "type": "long long"
        }
      ],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setBadgeValue:forSegment:inView:": {
      "name": "_setBadgeValue:forSegment:inView:",
      "bridgedName": "_setBadgeValue_forSegment_inView",
      "args": [
        {
          "name": "_setBadgeValue",
          "type": "long long"
        },
        {
          "name": "forSegment",
          "type": "long long"
        },
        {
          "name": "inView",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_showsBadgeForSegment:": {
      "name": "_showsBadgeForSegment:",
      "bridgedName": "_showsBadgeForSegment",
      "args": [
        {
          "name": "_showsBadgeForSegment",
          "type": "long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_anySegmentShowsBadge": {
      "name": "_anySegmentShowsBadge",
      "bridgedName": "_anySegmentShowsBadge",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setShowsBadge:forSegment:inView:": {
      "name": "_setShowsBadge:forSegment:inView:",
      "bridgedName": "_setShowsBadge_forSegment_inView",
      "args": [
        {
          "name": "_setShowsBadge",
          "type": "BOOL"
        },
        {
          "name": "forSegment",
          "type": "long long"
        },
        {
          "name": "inView",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_badgeRectForImage:inSegment:inFrame:inView:isFlipped:drawFlags:": {
      "name": "_badgeRectForImage:inSegment:inFrame:inView:isFlipped:drawFlags:",
      "bridgedName": "_badgeRectForImage_inSegment_inFrame_inView_isFlipped_drawFlags",
      "args": [
        {
          "name": "_badgeRectForImage",
          "type": "id"
        },
        {
          "name": "inSegment",
          "type": "long long"
        },
        {
          "name": "inFrame",
          "type": "struct CGRect"
        },
        {
          "name": "inView",
          "type": "id"
        },
        {
          "name": "isFlipped",
          "type": "BOOL"
        },
        {
          "name": "drawFlags",
          "type": "unsigned long long"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_rectAdjustedForR2LForSegment:cellFrame:drawFlags:": {
      "name": "_rectAdjustedForR2LForSegment:cellFrame:drawFlags:",
      "bridgedName": "_rectAdjustedForR2LForSegment_cellFrame_drawFlags",
      "args": [
        {
          "name": "_rectAdjustedForR2LForSegment",
          "type": "long long"
        },
        {
          "name": "cellFrame",
          "type": "struct CGRect"
        },
        {
          "name": "drawFlags",
          "type": "unsigned long long"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_drawBackgroundWithFrame:inView:": {
      "name": "_drawBackgroundWithFrame:inView:",
      "bridgedName": "_drawBackgroundWithFrame_inView",
      "args": [
        {
          "name": "_drawBackgroundWithFrame",
          "type": "struct CGRect"
        },
        {
          "name": "inView",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_coreUIDrawSegmentBackground:withCellFrame:inView:maskOnly:": {
      "name": "_coreUIDrawSegmentBackground:withCellFrame:inView:maskOnly:",
      "bridgedName": "_coreUIDrawSegmentBackground_withCellFrame_inView_maskOnly",
      "args": [
        {
          "name": "_coreUIDrawSegmentBackground",
          "type": "long long"
        },
        {
          "name": "withCellFrame",
          "type": "struct CGRect"
        },
        {
          "name": "inView",
          "type": "id"
        },
        {
          "name": "maskOnly",
          "type": "BOOL"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_drawMenuIndicatorForSegment:withRect:inView:": {
      "name": "_drawMenuIndicatorForSegment:withRect:inView:",
      "bridgedName": "_drawMenuIndicatorForSegment_withRect_inView",
      "args": [
        {
          "name": "_drawMenuIndicatorForSegment",
          "type": "long long"
        },
        {
          "name": "withRect",
          "type": "struct CGRect"
        },
        {
          "name": "inView",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_configureLabelCell:forItem:controlView:imageState:backgroundStyle:": {
      "name": "_configureLabelCell:forItem:controlView:imageState:backgroundStyle:",
      "bridgedName": "_configureLabelCell_forItem_controlView_imageState_backgroundStyle",
      "args": [
        {
          "name": "_configureLabelCell",
          "type": "id"
        },
        {
          "name": "forItem",
          "type": "id"
        },
        {
          "name": "controlView",
          "type": "id"
        },
        {
          "name": "imageState",
          "type": "unsigned long long"
        },
        {
          "name": "backgroundStyle",
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_resizeSegmentsForCellFrame:": {
      "name": "_resizeSegmentsForCellFrame:",
      "bridgedName": "_resizeSegmentsForCellFrame",
      "args": [
        {
          "name": "_resizeSegmentsForCellFrame",
          "type": "struct CGRect"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_resizeSegmentsForCellFrame:animate:": {
      "name": "_resizeSegmentsForCellFrame:animate:",
      "bridgedName": "_resizeSegmentsForCellFrame_animate",
      "args": [
        {
          "name": "_resizeSegmentsForCellFrame",
          "type": "struct CGRect"
        },
        {
          "name": "animate",
          "type": "BOOL"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_updateLabelViewForSegmentItem:segmentContentRect:imageState:controlView:": {
      "name": "_updateLabelViewForSegmentItem:segmentContentRect:imageState:controlView:",
      "bridgedName": "_updateLabelViewForSegmentItem_segmentContentRect_imageState_controlView",
      "args": [
        {
          "name": "_updateLabelViewForSegmentItem",
          "type": "id"
        },
        {
          "name": "segmentContentRect",
          "type": "struct CGRect"
        },
        {
          "name": "imageState",
          "type": "unsigned long long"
        },
        {
          "name": "controlView",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_updateNSSegmentItemViewFramesForCellFrame:": {
      "name": "_updateNSSegmentItemViewFramesForCellFrame:",
      "bridgedName": "_updateNSSegmentItemViewFramesForCellFrame",
      "args": [
        {
          "name": "_updateNSSegmentItemViewFramesForCellFrame",
          "type": "struct CGRect"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_legacy_labelRectForSegment:inFrame:withView:": {
      "name": "_legacy_labelRectForSegment:inFrame:withView:",
      "bridgedName": "_legacy_labelRectForSegment_inFrame_withView",
      "args": [
        {
          "name": "_legacy_labelRectForSegment",
          "type": "long long"
        },
        {
          "name": "inFrame",
          "type": "struct CGRect"
        },
        {
          "name": "withView",
          "type": "id"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_legacy_rectForSegment:inFrame:": {
      "name": "_legacy_rectForSegment:inFrame:",
      "bridgedName": "_legacy_rectForSegment_inFrame",
      "args": [
        {
          "name": "_legacy_rectForSegment",
          "type": "long long"
        },
        {
          "name": "inFrame",
          "type": "struct CGRect"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_legacy_minimumCellSizeForBounds:": {
      "name": "_legacy_minimumCellSizeForBounds:",
      "bridgedName": "_legacy_minimumCellSizeForBounds",
      "args": [
        {
          "name": "_legacy_minimumCellSizeForBounds",
          "type": "struct CGRect"
        }
      ],
      "returns": "struct CGSize",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_legacy_cellSizeForBounds:": {
      "name": "_legacy_cellSizeForBounds:",
      "bridgedName": "_legacy_cellSizeForBounds",
      "args": [
        {
          "name": "_legacy_cellSizeForBounds",
          "type": "struct CGRect"
        }
      ],
      "returns": "struct CGSize",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_legacy_segmentAlignmentRectInsetsForControlView:": {
      "name": "_legacy_segmentAlignmentRectInsetsForControlView:",
      "bridgedName": "_legacy_segmentAlignmentRectInsetsForControlView",
      "args": [
        {
          "name": "_legacy_segmentAlignmentRectInsetsForControlView",
          "type": "id"
        }
      ],
      "returns": "struct NSEdgeInsets",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_edgeInset": {
      "name": "_edgeInset",
      "bridgedName": "_edgeInset",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_imageTextGap": {
      "name": "_imageTextGap",
      "bridgedName": "_imageTextGap",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityHelpStringForChild:": {
      "name": "accessibilityHelpStringForChild:",
      "bridgedName": "accessibilityHelpStringForChild",
      "args": [
        {
          "name": "accessibilityHelpStringForChild",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityFocusRingBounds": {
      "name": "accessibilityFocusRingBounds",
      "bridgedName": "accessibilityFocusRingBounds",
      "args": [],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilitySizeOfChild:": {
      "name": "accessibilitySizeOfChild:",
      "bridgedName": "accessibilitySizeOfChild",
      "args": [
        {
          "name": "accessibilitySizeOfChild",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityPositionOfChild:": {
      "name": "accessibilityPositionOfChild:",
      "bridgedName": "accessibilityPositionOfChild",
      "args": [
        {
          "name": "accessibilityPositionOfChild",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilitySetFocus:forChild:": {
      "name": "accessibilitySetFocus:forChild:",
      "bridgedName": "accessibilitySetFocus_forChild",
      "args": [
        {
          "name": "accessibilitySetFocus",
          "type": "id"
        },
        {
          "name": "forChild",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityIsChildFocusable:": {
      "name": "accessibilityIsChildFocusable:",
      "bridgedName": "accessibilityIsChildFocusable",
      "args": [
        {
          "name": "accessibilityIsChildFocusable",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityIsFocusedAttributeSettable": {
      "name": "accessibilityIsFocusedAttributeSettable",
      "bridgedName": "accessibilityIsFocusedAttributeSettable",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityFocusedAttribute": {
      "name": "accessibilityFocusedAttribute",
      "bridgedName": "accessibilityFocusedAttribute",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityFocusedUIElement": {
      "name": "accessibilityFocusedUIElement",
      "bridgedName": "accessibilityFocusedUIElement",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityHitTest:": {
      "name": "accessibilityHitTest:",
      "bridgedName": "accessibilityHitTest",
      "args": [
        {
          "name": "accessibilityHitTest",
          "type": "struct CGPoint"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityValueAttribute": {
      "name": "accessibilityValueAttribute",
      "bridgedName": "accessibilityValueAttribute",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityIsChildrenAttributeSettable": {
      "name": "accessibilityIsChildrenAttributeSettable",
      "bridgedName": "accessibilityIsChildrenAttributeSettable",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityChildrenAttribute": {
      "name": "accessibilityChildrenAttribute",
      "bridgedName": "accessibilityChildrenAttribute",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityChildrenInNavigationOrderAttribute": {
      "name": "accessibilityChildrenInNavigationOrderAttribute",
      "bridgedName": "accessibilityChildrenInNavigationOrderAttribute",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityRoleAttribute": {
      "name": "accessibilityRoleAttribute",
      "bridgedName": "accessibilityRoleAttribute",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityAttributeNames": {
      "name": "accessibilityAttributeNames",
      "bridgedName": "accessibilityAttributeNames",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_accessibilityScreenRectForSegment:": {
      "name": "_accessibilityScreenRectForSegment:",
      "bridgedName": "_accessibilityScreenRectForSegment",
      "args": [
        {
          "name": "_accessibilityScreenRectForSegment",
          "type": "long long"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_accessibilitySegmentAtIndex:": {
      "name": "_accessibilitySegmentAtIndex:",
      "bridgedName": "_accessibilitySegmentAtIndex",
      "args": [
        {
          "name": "_accessibilitySegmentAtIndex",
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {}
}