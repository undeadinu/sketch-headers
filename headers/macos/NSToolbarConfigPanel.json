{
  "imports": [
    "NSCollectionViewDataSource.h",
    "NSCollectionViewDelegate.h",
    "NSCollectionViewDelegateFlowLayout.h",
    "NSTouchBarCustomizationPaletteLayoutDelegate.h"
  ],
  "classes": [
    "NSBox",
    "NSButton",
    "NSCollectionView",
    "NSPopUpButton",
    "NSScrollView",
    "NSSegmentedControl",
    "NSString",
    "NSTextField",
    "NSToolbar",
    "NSToolbarSnapshotWindow",
    "_NSToolbarImageRepView"
  ],
  "protocol": false,
  "className": "NSToolbarConfigPanel",
  "extends": "NSPanel",
  "interfaces": [
    "NSCollectionViewDataSource",
    "NSTouchBarCustomizationPaletteLayoutDelegate",
    "NSCollectionViewDelegateFlowLayout",
    "NSCollectionViewDelegate"
  ],
  "methods": {
    "toolbarConfigPanelForToolbar:withWidth:": {
      "name": "toolbarConfigPanelForToolbar:withWidth:",
      "bridgedName": "toolbarConfigPanelForToolbar_withWidth",
      "args": [
        {
          "name": "toolbarConfigPanelForToolbar",
          "type": "id"
        },
        {
          "name": "withWidth",
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_nibName": {
      "name": "_nibName",
      "bridgedName": "_nibName",
      "args": [],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "observeValueForKeyPath:ofObject:change:context:": {
      "name": "observeValueForKeyPath:ofObject:change:context:",
      "bridgedName": "observeValueForKeyPath_ofObject_change_context",
      "args": [
        {
          "name": "observeValueForKeyPath",
          "type": "id"
        },
        {
          "name": "ofObject",
          "type": "id"
        },
        {
          "name": "change",
          "type": "id"
        },
        {
          "name": "context",
          "type": "void *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_updateTouchBarWithToolbarDisplayMode:": {
      "name": "_updateTouchBarWithToolbarDisplayMode:",
      "bridgedName": "_updateTouchBarWithToolbarDisplayMode",
      "args": [
        {
          "name": "_updateTouchBarWithToolbarDisplayMode",
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_touchBarDisplayModeChanged:": {
      "name": "_touchBarDisplayModeChanged:",
      "bridgedName": "_touchBarDisplayModeChanged",
      "args": [
        {
          "name": "_touchBarDisplayModeChanged",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "makeTouchBar": {
      "name": "makeTouchBar",
      "bridgedName": "makeTouchBar",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setDefaultToolbarItemSetFromMenuItem:": {
      "name": "_setDefaultToolbarItemSetFromMenuItem:",
      "bridgedName": "_setDefaultToolbarItemSetFromMenuItem",
      "args": [
        {
          "name": "_setDefaultToolbarItemSetFromMenuItem",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "preventsApplicationTerminationWhenModal": {
      "name": "preventsApplicationTerminationWhenModal",
      "bridgedName": "preventsApplicationTerminationWhenModal",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "collectionView:draggingSession:endedAtPoint:dragOperation:": {
      "name": "collectionView:draggingSession:endedAtPoint:dragOperation:",
      "bridgedName": "collectionView_draggingSession_endedAtPoint_dragOperation",
      "args": [
        {
          "name": "collectionView",
          "type": "id"
        },
        {
          "name": "draggingSession",
          "type": "id"
        },
        {
          "name": "endedAtPoint",
          "type": "struct CGPoint"
        },
        {
          "name": "dragOperation",
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_spaceNeededForPaletteLabelsOfItem:preferredWidth:": {
      "name": "_spaceNeededForPaletteLabelsOfItem:preferredWidth:",
      "bridgedName": "_spaceNeededForPaletteLabelsOfItem_preferredWidth",
      "args": [
        {
          "name": "_spaceNeededForPaletteLabelsOfItem",
          "type": "id"
        },
        {
          "name": "preferredWidth",
          "type": "double"
        }
      ],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "collectionView:layout:sizeForItemAtIndexPath:": {
      "name": "collectionView:layout:sizeForItemAtIndexPath:",
      "bridgedName": "collectionView_layout_sizeForItemAtIndexPath",
      "args": [
        {
          "name": "collectionView",
          "type": "id"
        },
        {
          "name": "layout",
          "type": "id"
        },
        {
          "name": "sizeForItemAtIndexPath",
          "type": "id"
        }
      ],
      "returns": "struct CGSize",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "collectionView:draggingImageForItemsAtIndexPaths:withEvent:offset:": {
      "name": "collectionView:draggingImageForItemsAtIndexPaths:withEvent:offset:",
      "bridgedName": "collectionView_draggingImageForItemsAtIndexPaths_withEvent_offset",
      "args": [
        {
          "name": "collectionView",
          "type": "id"
        },
        {
          "name": "draggingImageForItemsAtIndexPaths",
          "type": "id"
        },
        {
          "name": "withEvent",
          "type": "id"
        },
        {
          "name": "offset",
          "type": "struct CGPoint *"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "collectionView:writeItemsAtIndexPaths:toPasteboard:": {
      "name": "collectionView:writeItemsAtIndexPaths:toPasteboard:",
      "bridgedName": "collectionView_writeItemsAtIndexPaths_toPasteboard",
      "args": [
        {
          "name": "collectionView",
          "type": "id"
        },
        {
          "name": "writeItemsAtIndexPaths",
          "type": "id"
        },
        {
          "name": "toPasteboard",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "collectionView:canDragItemsAtIndexPaths:withEvent:": {
      "name": "collectionView:canDragItemsAtIndexPaths:withEvent:",
      "bridgedName": "collectionView_canDragItemsAtIndexPaths_withEvent",
      "args": [
        {
          "name": "collectionView",
          "type": "id"
        },
        {
          "name": "canDragItemsAtIndexPaths",
          "type": "id"
        },
        {
          "name": "withEvent",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "collectionView:layout:maxSizeForItemAtIndexPath:": {
      "name": "collectionView:layout:maxSizeForItemAtIndexPath:",
      "bridgedName": "collectionView_layout_maxSizeForItemAtIndexPath",
      "args": [
        {
          "name": "collectionView",
          "type": "id"
        },
        {
          "name": "layout",
          "type": "id"
        },
        {
          "name": "maxSizeForItemAtIndexPath",
          "type": "id"
        }
      ],
      "returns": "struct CGSize",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "collectionView:layout:minSizeForItemAtIndexPath:": {
      "name": "collectionView:layout:minSizeForItemAtIndexPath:",
      "bridgedName": "collectionView_layout_minSizeForItemAtIndexPath",
      "args": [
        {
          "name": "collectionView",
          "type": "id"
        },
        {
          "name": "layout",
          "type": "id"
        },
        {
          "name": "minSizeForItemAtIndexPath",
          "type": "id"
        }
      ],
      "returns": "struct CGSize",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "collectionView:itemForRepresentedObjectAtIndexPath:": {
      "name": "collectionView:itemForRepresentedObjectAtIndexPath:",
      "bridgedName": "collectionView_itemForRepresentedObjectAtIndexPath",
      "args": [
        {
          "name": "collectionView",
          "type": "id"
        },
        {
          "name": "itemForRepresentedObjectAtIndexPath",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "collectionView:numberOfItemsInSection:": {
      "name": "collectionView:numberOfItemsInSection:",
      "bridgedName": "collectionView_numberOfItemsInSection",
      "args": [
        {
          "name": "collectionView",
          "type": "id"
        },
        {
          "name": "numberOfItemsInSection",
          "type": "long long"
        }
      ],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_removeVibrancyOnContainerIfNecessary": {
      "name": "_removeVibrancyOnContainerIfNecessary",
      "bridgedName": "_removeVibrancyOnContainerIfNecessary",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_loadData": {
      "name": "_loadData",
      "bridgedName": "_loadData",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setBackingStoreResolution:": {
      "name": "_setBackingStoreResolution:",
      "bridgedName": "_setBackingStoreResolution",
      "args": [
        {
          "name": "_setBackingStoreResolution",
          "type": "double"
        }
      ],
      "returns": "int",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_loadIndividualItemsCollectionView": {
      "name": "_loadIndividualItemsCollectionView",
      "bridgedName": "_loadIndividualItemsCollectionView",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_loadDefaultSetImageRep": {
      "name": "_loadDefaultSetImageRep",
      "bridgedName": "_loadDefaultSetImageRep",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_createOffscreenDefaultImageRepSetWindow": {
      "name": "_createOffscreenDefaultImageRepSetWindow",
      "bridgedName": "_createOffscreenDefaultImageRepSetWindow",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setUpTextField:": {
      "name": "_setUpTextField:",
      "bridgedName": "_setUpTextField",
      "args": [
        {
          "name": "_setUpTextField",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_shouldUseTexturedAppearanceForSegmentedCellInView:": {
      "name": "_shouldUseTexturedAppearanceForSegmentedCellInView:",
      "bridgedName": "_shouldUseTexturedAppearanceForSegmentedCellInView",
      "args": [
        {
          "name": "_shouldUseTexturedAppearanceForSegmentedCellInView",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "cancel:": {
      "name": "cancel:",
      "bridgedName": "cancel",
      "args": [
        {
          "name": "cancel",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "ok:": {
      "name": "ok:",
      "bridgedName": "ok",
      "args": [
        {
          "name": "ok",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_addCursorRect:cursor:forView:": {
      "name": "_addCursorRect:cursor:forView:",
      "bridgedName": "_addCursorRect_cursor_forView",
      "args": [
        {
          "name": "_addCursorRect",
          "type": "struct CGRect"
        },
        {
          "name": "cursor",
          "type": "id"
        },
        {
          "name": "forView",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "editedToolbar": {
      "name": "editedToolbar",
      "bridgedName": "editedToolbar",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_orderFrontRelativeToWindow:": {
      "name": "_orderFrontRelativeToWindow:",
      "bridgedName": "_orderFrontRelativeToWindow",
      "args": [
        {
          "name": "_orderFrontRelativeToWindow",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_shouldSuppressRolloversForSegmentedCellInView:": {
      "name": "_shouldSuppressRolloversForSegmentedCellInView:",
      "bridgedName": "_shouldSuppressRolloversForSegmentedCellInView",
      "args": [
        {
          "name": "_shouldSuppressRolloversForSegmentedCellInView",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_finishInitialization": {
      "name": "_finishInitialization",
      "bridgedName": "_finishInitialization",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "debugDescription": {
      "name": "debugDescription",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "description": {
      "name": "description",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "hash": {
      "name": "hash",
      "pointer": false,
      "type": "unsigned long long",
      "attributes": [
        "readonly"
      ]
    },
    "superclass": {
      "name": "superclass",
      "pointer": false,
      "type": "Class",
      "attributes": [
        "readonly"
      ]
    }
  }
}