{
  "imports": [
    "MSEventHandler.h",
    "MSAlignmentEngineDelegate.h"
  ],
  "classes": [
    "MSAlignmentEngine",
    "MSAlignmentEngineResult",
    "MSDragGestureRecognizer",
    "NSArray",
    "NSCursor",
    "NSString"
  ],
  "protocol": false,
  "className": "MSDragRectEventHandler",
  "extends": "MSEventHandler",
  "interfaces": [
    "MSAlignmentEngineDelegate"
  ],
  "methods": {
    ".cxx_destruct": {
      "name": ".cxx_destruct",
      "bridgedName": ".cxx_destruct",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "mouseDraggedOutsideViewShouldMoveScrollOrigin": {
      "name": "mouseDraggedOutsideViewShouldMoveScrollOrigin",
      "bridgedName": "mouseDraggedOutsideViewShouldMoveScrollOrigin",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "enumeratePossibleSnapTargetLayersInGroup:usingBlock:": {
      "name": "enumeratePossibleSnapTargetLayersInGroup:usingBlock:",
      "bridgedName": "enumeratePossibleSnapTargetLayersInGroup_usingBlock",
      "args": [
        {
          "name": "enumeratePossibleSnapTargetLayersInGroup",
          "type": "id"
        },
        {
          "name": "usingBlock",
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "cacheSnapTargets": {
      "name": "cacheSnapTargets",
      "bridgedName": "cacheSnapTargets",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "alignmentEngine:roundPoint:": {
      "name": "alignmentEngine:roundPoint:",
      "bridgedName": "alignmentEngine_roundPoint",
      "args": [
        {
          "name": "alignmentEngine",
          "type": "id"
        },
        {
          "name": "roundPoint",
          "type": "struct CGPoint"
        }
      ],
      "returns": "struct CGPoint",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "alignmentEngine:alignPoint:": {
      "name": "alignmentEngine:alignPoint:",
      "bridgedName": "alignmentEngine_alignPoint",
      "args": [
        {
          "name": "alignmentEngine",
          "type": "id"
        },
        {
          "name": "alignPoint",
          "type": "struct CGPoint"
        }
      ],
      "returns": "struct CGPoint",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "snapAndAlignPoint:modifierFlags:": {
      "name": "snapAndAlignPoint:modifierFlags:",
      "bridgedName": "snapAndAlignPoint_modifierFlags",
      "args": [
        {
          "name": "snapAndAlignPoint",
          "type": "struct CGPoint"
        },
        {
          "name": "modifierFlags",
          "type": "unsigned long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawRectPreview": {
      "name": "drawRectPreview",
      "bridgedName": "drawRectPreview",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawInRect:context:": {
      "name": "drawInRect:context:",
      "bridgedName": "drawInRect_context",
      "args": [
        {
          "name": "drawInRect",
          "type": "struct CGRect"
        },
        {
          "name": "context",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "currentGroup": {
      "name": "currentGroup",
      "bridgedName": "currentGroup",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "handlesHandToolItself": {
      "name": "handlesHandToolItself",
      "bridgedName": "handlesHandToolItself",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "keyDown:": {
      "name": "keyDown:",
      "bridgedName": "keyDown",
      "args": [
        {
          "name": "keyDown",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "performActionWithRect:fromLayer:constrainProportions:": {
      "name": "performActionWithRect:fromLayer:constrainProportions:",
      "bridgedName": "performActionWithRect_fromLayer_constrainProportions",
      "args": [
        {
          "name": "performActionWithRect",
          "type": "struct CGRect"
        },
        {
          "name": "fromLayer",
          "type": "id"
        },
        {
          "name": "constrainProportions",
          "type": "BOOL"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "layerAtPoint:modifierFlags:": {
      "name": "layerAtPoint:modifierFlags:",
      "bridgedName": "layerAtPoint_modifierFlags",
      "args": [
        {
          "name": "layerAtPoint",
          "type": "struct CGPoint"
        },
        {
          "name": "modifierFlags",
          "type": "unsigned long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "wantsLayerHighlight": {
      "name": "wantsLayerHighlight",
      "bridgedName": "wantsLayerHighlight",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "trackMouse:": {
      "name": "trackMouse:",
      "bridgedName": "trackMouse",
      "args": [
        {
          "name": "trackMouse",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "absoluteMouseUp:flags:": {
      "name": "absoluteMouseUp:flags:",
      "bridgedName": "absoluteMouseUp_flags",
      "args": [
        {
          "name": "absoluteMouseUp",
          "type": "struct CGPoint"
        },
        {
          "name": "flags",
          "type": "unsigned long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "handleDrag:": {
      "name": "handleDrag:",
      "bridgedName": "handleDrag",
      "args": [
        {
          "name": "handleDrag",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawingRectForInsertionRect:": {
      "name": "drawingRectForInsertionRect:",
      "bridgedName": "drawingRectForInsertionRect",
      "args": [
        {
          "name": "drawingRectForInsertionRect",
          "type": "struct CGRect"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "makeDiagonalTranslation:": {
      "name": "makeDiagonalTranslation:",
      "bridgedName": "makeDiagonalTranslation",
      "args": [
        {
          "name": "makeDiagonalTranslation",
          "type": "struct CGVector"
        }
      ],
      "returns": "struct CGVector",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "calculateInsertionRect:": {
      "name": "calculateInsertionRect:",
      "bridgedName": "calculateInsertionRect",
      "args": [
        {
          "name": "calculateInsertionRect",
          "type": "id"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "handlerGotFocus": {
      "name": "handlerGotFocus",
      "bridgedName": "handlerGotFocus",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithManager:": {
      "name": "initWithManager:",
      "bridgedName": "initWithManager",
      "args": [
        {
          "name": "initWithManager",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "snapTargets": {
      "name": "snapTargets",
      "pointer": true,
      "type": "NSArray",
      "attributes": [
        "retain",
        "nonatomic"
      ]
    },
    "insertionCursor": {
      "name": "insertionCursor",
      "pointer": true,
      "type": "NSCursor",
      "attributes": [
        "retain",
        "nonatomic"
      ]
    },
    "snappingResult": {
      "name": "snappingResult",
      "pointer": true,
      "type": "MSAlignmentEngineResult",
      "attributes": [
        "retain",
        "nonatomic"
      ]
    },
    "snapper": {
      "name": "snapper",
      "pointer": true,
      "type": "MSAlignmentEngine",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    },
    "dragGestureRecognizer": {
      "name": "dragGestureRecognizer",
      "pointer": true,
      "type": "MSDragGestureRecognizer",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    },
    "insertionRect": {
      "name": "insertionRect",
      "pointer": false,
      "type": "struct CGRect",
      "attributes": [
        "nonatomic"
      ]
    },
    "layerSelectionOptionsForInsertingFromExistingLayer": {
      "name": "layerSelectionOptionsForInsertingFromExistingLayer",
      "pointer": false,
      "type": "unsigned long long",
      "attributes": [
        "readonly"
      ]
    },
    "allowsInsertLayerFromExistingLayer": {
      "name": "allowsInsertLayerFromExistingLayer",
      "pointer": false,
      "type": "BOOL",
      "attributes": [
        "readonly"
      ]
    },
    "cursorForInsertingFromExisting": {
      "name": "cursorForInsertingFromExisting",
      "pointer": true,
      "type": "NSCursor",
      "attributes": [
        "readonly",
        "nonatomic"
      ]
    },
    "debugDescription": {
      "name": "debugDescription",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "description": {
      "name": "description",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "hash": {
      "name": "hash",
      "pointer": false,
      "type": "unsigned long long",
      "attributes": [
        "readonly"
      ]
    },
    "superclass": {
      "name": "superclass",
      "pointer": false,
      "type": "Class",
      "attributes": [
        "readonly"
      ]
    }
  }
}