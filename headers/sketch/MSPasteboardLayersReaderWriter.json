{
  "imports": [
    "NSObject.h",
    "MSPasteboardReader.h",
    "MSPasteboardWriter.h"
  ],
  "classes": [
    "NSString"
  ],
  "protocol": false,
  "className": "MSPasteboardLayersReaderWriter",
  "extends": "NSObject",
  "interfaces": [
    "MSPasteboardReader",
    "MSPasteboardWriter"
  ],
  "methods": {
    "writeData:toPasteboard:": {
      "name": "writeData:toPasteboard:",
      "bridgedName": "writeData_toPasteboard",
      "args": [
        {
          "name": "writeData",
          "type": "id"
        },
        {
          "name": "toPasteboard",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "writeData:toPasteboard:withType:": {
      "name": "writeData:toPasteboard:withType:",
      "bridgedName": "writeData_toPasteboard_withType",
      "args": [
        {
          "name": "writeData",
          "type": "id"
        },
        {
          "name": "toPasteboard",
          "type": "id"
        },
        {
          "name": "withType",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "canWriteDataToPasteboard:": {
      "name": "canWriteDataToPasteboard:",
      "bridgedName": "canWriteDataToPasteboard",
      "args": [
        {
          "name": "canWriteDataToPasteboard",
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "pasteboardDataFromPasteboard:colorSpace:options:sender:": {
      "name": "pasteboardDataFromPasteboard:colorSpace:options:sender:",
      "bridgedName": "pasteboardDataFromPasteboard_colorSpace_options_sender",
      "args": [
        {
          "name": "pasteboardDataFromPasteboard",
          "type": "id"
        },
        {
          "name": "colorSpace",
          "type": "id"
        },
        {
          "name": "options",
          "type": "unsigned long long"
        },
        {
          "name": "sender",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "readDataFromPasteboard:": {
      "name": "readDataFromPasteboard:",
      "bridgedName": "readDataFromPasteboard",
      "args": [
        {
          "name": "readDataFromPasteboard",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "readDataFromPasteboard:withType:": {
      "name": "readDataFromPasteboard:withType:",
      "bridgedName": "readDataFromPasteboard_withType",
      "args": [
        {
          "name": "readDataFromPasteboard",
          "type": "id"
        },
        {
          "name": "withType",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tempFileTypeForType:": {
      "name": "tempFileTypeForType:",
      "bridgedName": "tempFileTypeForType",
      "args": [
        {
          "name": "tempFileTypeForType",
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "supportedPasteboardTypes": {
      "name": "supportedPasteboardTypes",
      "bridgedName": "supportedPasteboardTypes",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "debugDescription": {
      "name": "debugDescription",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "description": {
      "name": "description",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "hash": {
      "name": "hash",
      "pointer": false,
      "type": "unsigned long long",
      "attributes": [
        "readonly"
      ]
    },
    "superclass": {
      "name": "superclass",
      "pointer": false,
      "type": "Class",
      "attributes": [
        "readonly"
      ]
    }
  }
}