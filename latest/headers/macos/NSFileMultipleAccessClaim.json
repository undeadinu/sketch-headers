{
  "imports": [],
  "classes": [
    "NSFileAccessNode",
    "NSMutableArray"
  ],
  "protocol": false,
  "className": "NSFileMultipleAccessClaim",
  "extends": "NSFileAccessClaim",
  "interfaces": [],
  "methods": {
    "supportsSecureCoding": {
      "name": "supportsSecureCoding",
      "bridgedName": "supportsSecureCoding",
      "args": [],
      "returns": "BOOL",
      "kind": "class",
      "kindIndicator": "+"
    },
    "shouldCancelInsteadOfWaiting": {
      "name": "shouldCancelInsteadOfWaiting",
      "bridgedName": "shouldCancelInsteadOfWaiting",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "allURLs": {
      "name": "allURLs",
      "bridgedName": "allURLs",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "shouldBeRevokedPriorToInvokingAccessor": {
      "name": "shouldBeRevokedPriorToInvokingAccessor",
      "bridgedName": "shouldBeRevokedPriorToInvokingAccessor",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "blocksClaim:": {
      "name": "blocksClaim:",
      "bridgedName": "blocksClaim",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "itemAtLocation:wasReplacedByItemAtLocation:": {
      "name": "itemAtLocation:wasReplacedByItemAtLocation:",
      "bridgedName": "itemAtLocation_wasReplacedByItemAtLocation",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "devalueSelf": {
      "name": "devalueSelf",
      "bridgedName": "devalueSelf",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "invokeClaimer": {
      "name": "invokeClaimer",
      "bridgedName": "invokeClaimer",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "resolveURLsThenMaybeContinueInvokingClaimer:": {
      "name": "resolveURLsThenMaybeContinueInvokingClaimer:",
      "bridgedName": "resolveURLsThenMaybeContinueInvokingClaimer",
      "args": [
        {
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "granted": {
      "name": "granted",
      "bridgedName": "granted",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isBlockedByWritingItemAtLocation:options:": {
      "name": "isBlockedByWritingItemAtLocation:options:",
      "bridgedName": "isBlockedByWritingItemAtLocation_options",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "unsigned long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isBlockedByReadingItemAtLocation:options:": {
      "name": "isBlockedByReadingItemAtLocation:options:",
      "bridgedName": "isBlockedByReadingItemAtLocation_options",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "unsigned long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "evaluateSelfWithRootNode:checkSubarbitrability:": {
      "name": "evaluateSelfWithRootNode:checkSubarbitrability:",
      "bridgedName": "evaluateSelfWithRootNode_checkSubarbitrability",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "BOOL"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "forwardUsingConnection:crashHandler:": {
      "name": "forwardUsingConnection:crashHandler:",
      "bridgedName": "forwardUsingConnection_crashHandler",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithCoder:": {
      "name": "initWithCoder:",
      "bridgedName": "initWithCoder",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "encodeWithCoder:": {
      "name": "encodeWithCoder:",
      "bridgedName": "encodeWithCoder",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithPurposeID:intents:claimer:": {
      "name": "initWithPurposeID:intents:claimer:",
      "bridgedName": "initWithPurposeID_intents_claimer",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {}
}