{
  "imports": [],
  "classes": [
    "NSEvent",
    "NSForceClickMonitor"
  ],
  "protocol": false,
  "className": "NSImmediateActionGestureRecognizer",
  "extends": "NSGestureRecognizer",
  "interfaces": [],
  "methods": {
    "_delegateShouldAttemptToRecognizeWithEvent:": {
      "name": "_delegateShouldAttemptToRecognizeWithEvent:",
      "bridgedName": "_delegateShouldAttemptToRecognizeWithEvent",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "canPreventGestureRecognizer:": {
      "name": "canPreventGestureRecognizer:",
      "bridgedName": "canPreventGestureRecognizer",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "canBePreventedByGestureRecognizer:": {
      "name": "canBePreventedByGestureRecognizer:",
      "bridgedName": "canBePreventedByGestureRecognizer",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "shouldBeRequiredToFailByGestureRecognizer:": {
      "name": "shouldBeRequiredToFailByGestureRecognizer:",
      "bridgedName": "shouldBeRequiredToFailByGestureRecognizer",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "shouldRequireFailureOfGestureRecognizer:": {
      "name": "shouldRequireFailureOfGestureRecognizer:",
      "bridgedName": "shouldRequireFailureOfGestureRecognizer",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "quickLookWithEvent:": {
      "name": "quickLookWithEvent:",
      "bridgedName": "quickLookWithEvent",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "pressureChangeWithEvent:": {
      "name": "pressureChangeWithEvent:",
      "bridgedName": "pressureChangeWithEvent",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "otherMouseDown:": {
      "name": "otherMouseDown:",
      "bridgedName": "otherMouseDown",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "rightMouseDown:": {
      "name": "rightMouseDown:",
      "bridgedName": "rightMouseDown",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "mouseUp:": {
      "name": "mouseUp:",
      "bridgedName": "mouseUp",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "mouseDragged:": {
      "name": "mouseDragged:",
      "bridgedName": "mouseDragged",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "mouseDown:": {
      "name": "mouseDown:",
      "bridgedName": "mouseDown",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "acceptsFirstMouse:": {
      "name": "acceptsFirstMouse:",
      "bridgedName": "acceptsFirstMouse",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_shouldSendActionWhenPossibleConcurrentlyWithRecognizer:": {
      "name": "_shouldSendActionWhenPossibleConcurrentlyWithRecognizer:",
      "bridgedName": "_shouldSendActionWhenPossibleConcurrentlyWithRecognizer",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_didSendActions": {
      "name": "_didSendActions",
      "bridgedName": "_didSendActions",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_startEvent": {
      "name": "_startEvent",
      "bridgedName": "_startEvent",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_forceClickMonitor": {
      "name": "_forceClickMonitor",
      "bridgedName": "_forceClickMonitor",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_desiredPressureBehavior": {
      "name": "_desiredPressureBehavior",
      "bridgedName": "_desiredPressureBehavior",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_acceptedEventMask": {
      "name": "_acceptedEventMask",
      "bridgedName": "_acceptedEventMask",
      "args": [],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "reset": {
      "name": "reset",
      "bridgedName": "reset",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "locationInView:": {
      "name": "locationInView:",
      "bridgedName": "locationInView",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "struct CGPoint",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "shouldBeArchived": {
      "name": "shouldBeArchived",
      "bridgedName": "shouldBeArchived",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "animationProgress": {
      "name": "animationProgress",
      "bridgedName": "animationProgress",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setAnimationController:": {
      "name": "setAnimationController:",
      "bridgedName": "setAnimationController",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "animationController": {
      "name": "animationController",
      "bridgedName": "animationController",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setDelegate:": {
      "name": "setDelegate:",
      "bridgedName": "setDelegate",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_delegate": {
      "name": "_delegate",
      "bridgedName": "_delegate",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "delegate": {
      "name": "delegate",
      "bridgedName": "delegate",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setStyle:": {
      "name": "setStyle:",
      "bridgedName": "setStyle",
      "args": [
        {
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "style": {
      "name": "style",
      "bridgedName": "style",
      "args": [],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithTarget:action:": {
      "name": "initWithTarget:action:",
      "bridgedName": "initWithTarget_action",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "SEL"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {}
}