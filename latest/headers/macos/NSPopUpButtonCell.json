{
  "imports": [],
  "classes": [
    "NSArray",
    "NSMenu",
    "NSMenuItem",
    "NSString"
  ],
  "protocol": false,
  "className": "NSPopUpButtonCell",
  "extends": "NSMenuItemCell",
  "interfaces": [],
  "methods": {
    "_attachedCell": {
      "name": "_attachedCell",
      "bridgedName": "_attachedCell",
      "args": [],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "initialize": {
      "name": "initialize",
      "bridgedName": "initialize",
      "args": [],
      "returns": "void",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_createAndPopulateKeyEquivalentUniquerIfNecessary": {
      "name": "_createAndPopulateKeyEquivalentUniquerIfNecessary",
      "bridgedName": "_createAndPopulateKeyEquivalentUniquerIfNecessary",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_keyEquivalentUniquerCreatingIfNecessary:": {
      "name": "_keyEquivalentUniquerCreatingIfNecessary:",
      "bridgedName": "_keyEquivalentUniquerCreatingIfNecessary",
      "args": [
        {
          "type": "BOOL"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setMenuShouldBeUniquedAgainstMainMenu:": {
      "name": "_setMenuShouldBeUniquedAgainstMainMenu:",
      "bridgedName": "_setMenuShouldBeUniquedAgainstMainMenu",
      "args": [
        {
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "objectValue": {
      "name": "objectValue",
      "bridgedName": "objectValue",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setObjectValue:": {
      "name": "setObjectValue:",
      "bridgedName": "setObjectValue",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "validateMenuItem:": {
      "name": "validateMenuItem:",
      "bridgedName": "validateMenuItem",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_highlightTextColor": {
      "name": "_highlightTextColor",
      "bridgedName": "_highlightTextColor",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_highlightColor": {
      "name": "_highlightColor",
      "bridgedName": "_highlightColor",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_allowsContextMenus": {
      "name": "_allowsContextMenus",
      "bridgedName": "_allowsContextMenus",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_canBecomeDefaultButtonCell": {
      "name": "_canBecomeDefaultButtonCell",
      "bridgedName": "_canBecomeDefaultButtonCell",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_menuWillSendAction:": {
      "name": "_menuWillSendAction:",
      "bridgedName": "_menuWillSendAction",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_menuItemSelected:": {
      "name": "_menuItemSelected:",
      "bridgedName": "_menuItemSelected",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_popUpItemAction:": {
      "name": "_popUpItemAction:",
      "bridgedName": "_popUpItemAction",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "performClickWithFrame:inView:": {
      "name": "performClickWithFrame:inView:",
      "bridgedName": "performClickWithFrame_inView",
      "args": [
        {
          "type": "struct CGRect"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_needRedrawOnWindowChangedKeyState": {
      "name": "_needRedrawOnWindowChangedKeyState",
      "bridgedName": "_needRedrawOnWindowChangedKeyState",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_drawCircumscribedFocusRingMaskWithFrame:inView:": {
      "name": "_drawCircumscribedFocusRingMaskWithFrame:inView:",
      "bridgedName": "_drawCircumscribedFocusRingMaskWithFrame_inView",
      "args": [
        {
          "type": "struct CGRect"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawFocusRingMaskWithFrame:inView:": {
      "name": "drawFocusRingMaskWithFrame:inView:",
      "bridgedName": "drawFocusRingMaskWithFrame_inView",
      "args": [
        {
          "type": "struct CGRect"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "focusRingMaskBoundsForFrame:inView:": {
      "name": "focusRingMaskBoundsForFrame:inView:",
      "bridgedName": "focusRingMaskBoundsForFrame_inView",
      "args": [
        {
          "type": "struct CGRect"
        },
        {
          "type": "id"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_preferredFocusLocationMask": {
      "name": "_preferredFocusLocationMask",
      "bridgedName": "_preferredFocusLocationMask",
      "args": [],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isOpaque": {
      "name": "isOpaque",
      "bridgedName": "isOpaque",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_obeysHiddenBit": {
      "name": "_obeysHiddenBit",
      "bridgedName": "_obeysHiddenBit",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawingRectForBounds:": {
      "name": "drawingRectForBounds:",
      "bridgedName": "drawingRectForBounds",
      "args": [
        {
          "type": "struct CGRect"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawBorderAndBackgroundWithFrame:inView:": {
      "name": "drawBorderAndBackgroundWithFrame:inView:",
      "bridgedName": "drawBorderAndBackgroundWithFrame_inView",
      "args": [
        {
          "type": "struct CGRect"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawWithFrame:inView:": {
      "name": "drawWithFrame:inView:",
      "bridgedName": "drawWithFrame_inView",
      "args": [
        {
          "type": "struct CGRect"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_coreUIBezelDrawOptionsWithFrame:inView:": {
      "name": "_coreUIBezelDrawOptionsWithFrame:inView:",
      "bridgedName": "_coreUIBezelDrawOptionsWithFrame_inView",
      "args": [
        {
          "type": "struct CGRect"
        },
        {
          "type": "id"
        }
      ],
      "returns": "struct __CFDictionary *",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_shouldDrawIndicatorOnlyForFrame:": {
      "name": "_shouldDrawIndicatorOnlyForFrame:",
      "bridgedName": "_shouldDrawIndicatorOnlyForFrame",
      "args": [
        {
          "type": "struct CGRect"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_drawStandardPopUpBorderWithFrame:inView:": {
      "name": "_drawStandardPopUpBorderWithFrame:inView:",
      "bridgedName": "_drawStandardPopUpBorderWithFrame_inView",
      "args": [
        {
          "type": "struct CGRect"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_effectiveBackgroundStyleInView:": {
      "name": "_effectiveBackgroundStyleInView:",
      "bridgedName": "_effectiveBackgroundStyleInView",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "int",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_drawIndicatorWithFrame:inView:": {
      "name": "_drawIndicatorWithFrame:inView:",
      "bridgedName": "_drawIndicatorWithFrame_inView",
      "args": [
        {
          "type": "struct CGRect"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_indicatorFrameForCellFrame:inView:": {
      "name": "_indicatorFrameForCellFrame:inView:",
      "bridgedName": "_indicatorFrameForCellFrame_inView",
      "args": [
        {
          "type": "struct CGRect"
        },
        {
          "type": "id"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_indicatorFrameForCellFrame:isFlipped:": {
      "name": "_indicatorFrameForCellFrame:isFlipped:",
      "bridgedName": "_indicatorFrameForCellFrame_isFlipped",
      "args": [
        {
          "type": "struct CGRect"
        },
        {
          "type": "BOOL"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_applicableArrowLocation": {
      "name": "_applicableArrowLocation",
      "bridgedName": "_applicableArrowLocation",
      "args": [],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_defaultIndicatorSize": {
      "name": "_defaultIndicatorSize",
      "bridgedName": "_defaultIndicatorSize",
      "args": [],
      "returns": "struct CGSize",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_popupHeightIsFlexible": {
      "name": "_popupHeightIsFlexible",
      "bridgedName": "_popupHeightIsFlexible",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "cellSizeForBounds:": {
      "name": "cellSizeForBounds:",
      "bridgedName": "cellSizeForBounds",
      "args": [
        {
          "type": "struct CGRect"
        }
      ],
      "returns": "struct CGSize",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_autolayout_cellSize": {
      "name": "_autolayout_cellSize",
      "bridgedName": "_autolayout_cellSize",
      "args": [],
      "returns": "struct CGSize",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_maxItemsToMeasureForCellSize": {
      "name": "_maxItemsToMeasureForCellSize",
      "bridgedName": "_maxItemsToMeasureForCellSize",
      "args": [],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_autolayout_preferredPopupHeight": {
      "name": "_autolayout_preferredPopupHeight",
      "bridgedName": "_autolayout_preferredPopupHeight",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_preferredPopupHeight": {
      "name": "_preferredPopupHeight",
      "bridgedName": "_preferredPopupHeight",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_indicatorImage": {
      "name": "_indicatorImage",
      "bridgedName": "_indicatorImage",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_defaultIndicatorImage": {
      "name": "_defaultIndicatorImage",
      "bridgedName": "_defaultIndicatorImage",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_coreUIDefaultIndicatorImage": {
      "name": "_coreUIDefaultIndicatorImage",
      "bridgedName": "_coreUIDefaultIndicatorImage",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_shouldTweakRoundingBehaviorWithFrame:inView:": {
      "name": "_shouldTweakRoundingBehaviorWithFrame:inView:",
      "bridgedName": "_shouldTweakRoundingBehaviorWithFrame_inView",
      "args": [
        {
          "type": "struct CGRect"
        },
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_extraWidthForCellHeight:": {
      "name": "_extraWidthForCellHeight:",
      "bridgedName": "_extraWidthForCellHeight",
      "args": [
        {
          "type": "double"
        }
      ],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "keyEquivalentRectForBounds:": {
      "name": "keyEquivalentRectForBounds:",
      "bridgedName": "keyEquivalentRectForBounds",
      "args": [
        {
          "type": "struct CGRect"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_separatorRectForCellFrame:isFlipped:": {
      "name": "_separatorRectForCellFrame:isFlipped:",
      "bridgedName": "_separatorRectForCellFrame_isFlipped",
      "args": [
        {
          "type": "struct CGRect"
        },
        {
          "type": "BOOL"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "imageRectForBounds:": {
      "name": "imageRectForBounds:",
      "bridgedName": "imageRectForBounds",
      "args": [
        {
          "type": "struct CGRect"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_menuLocationHorizontalOffset": {
      "name": "_menuLocationHorizontalOffset",
      "bridgedName": "_menuLocationHorizontalOffset",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "drawTitle:withFrame:inView:": {
      "name": "drawTitle:withFrame:inView:",
      "bridgedName": "drawTitle_withFrame_inView",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "struct CGRect"
        },
        {
          "type": "id"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "interiorBackgroundStyle": {
      "name": "interiorBackgroundStyle",
      "bridgedName": "interiorBackgroundStyle",
      "args": [],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "titleRectForBounds:": {
      "name": "titleRectForBounds:",
      "bridgedName": "titleRectForBounds",
      "args": [
        {
          "type": "struct CGRect"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_availableContentRectForCellFrame:isFlipped:": {
      "name": "_availableContentRectForCellFrame:isFlipped:",
      "bridgedName": "_availableContentRectForCellFrame_isFlipped",
      "args": [
        {
          "type": "struct CGRect"
        },
        {
          "type": "BOOL"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_effectiveImagePosition": {
      "name": "_effectiveImagePosition",
      "bridgedName": "_effectiveImagePosition",
      "args": [],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_effectiveAlignment": {
      "name": "_effectiveAlignment",
      "bridgedName": "_effectiveAlignment",
      "args": [],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "attributedTitle": {
      "name": "attributedTitle",
      "bridgedName": "attributedTitle",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_popupImageSizeForCellFrame:": {
      "name": "_popupImageSizeForCellFrame:",
      "bridgedName": "_popupImageSizeForCellFrame",
      "args": [
        {
          "type": "struct CGRect"
        }
      ],
      "returns": "struct CGSize",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_imageToTitleHorizontalOffset": {
      "name": "_imageToTitleHorizontalOffset",
      "bridgedName": "_imageToTitleHorizontalOffset",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_popupPaddingInsets": {
      "name": "_popupPaddingInsets",
      "bridgedName": "_popupPaddingInsets",
      "args": [],
      "returns": "struct NSEdgeInsets",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_popupIndicatorToContentPaddingOffset": {
      "name": "_popupIndicatorToContentPaddingOffset",
      "bridgedName": "_popupIndicatorToContentPaddingOffset",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_popupBezelToContentPaddingOffset": {
      "name": "_popupBezelToContentPaddingOffset",
      "bridgedName": "_popupBezelToContentPaddingOffset",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_indicatorInsets": {
      "name": "_indicatorInsets",
      "bridgedName": "_indicatorInsets",
      "args": [],
      "returns": "struct NSEdgeInsets",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_bezelToIndicatorInsets": {
      "name": "_bezelToIndicatorInsets",
      "bridgedName": "_bezelToIndicatorInsets",
      "args": [],
      "returns": "struct NSEdgeInsets",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_bezelToIndicatorOffsets": {
      "name": "_bezelToIndicatorOffsets",
      "bridgedName": "_bezelToIndicatorOffsets",
      "args": [],
      "returns": "struct CGPoint",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_popupBezelInsetsForCellFrame:": {
      "name": "_popupBezelInsetsForCellFrame:",
      "bridgedName": "_popupBezelInsetsForCellFrame",
      "args": [
        {
          "type": "struct CGRect"
        }
      ],
      "returns": "struct NSEdgeInsets",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_popupBezelInsets": {
      "name": "_popupBezelInsets",
      "bridgedName": "_popupBezelInsets",
      "args": [],
      "returns": "struct NSEdgeInsets",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_pulldownExtraBezelInsets": {
      "name": "_pulldownExtraBezelInsets",
      "bridgedName": "_pulldownExtraBezelInsets",
      "args": [],
      "returns": "struct NSEdgeInsets",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_useTigerMetricsForHorizontalUnborderedOffset": {
      "name": "_useTigerMetricsForHorizontalUnborderedOffset",
      "bridgedName": "_useTigerMetricsForHorizontalUnborderedOffset",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_bezelBottomPadding": {
      "name": "_bezelBottomPadding",
      "bridgedName": "_bezelBottomPadding",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_bezelTopPadding": {
      "name": "_bezelTopPadding",
      "bridgedName": "_bezelTopPadding",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_bezelBottomOffset": {
      "name": "_bezelBottomOffset",
      "bridgedName": "_bezelBottomOffset",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_bezelTopOffset": {
      "name": "_bezelTopOffset",
      "bridgedName": "_bezelTopOffset",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_imageToBezelOrIndicatorPadding": {
      "name": "_imageToBezelOrIndicatorPadding",
      "bridgedName": "_imageToBezelOrIndicatorPadding",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_alwaysShowBezelForCurrentBezelStyleAndState": {
      "name": "_alwaysShowBezelForCurrentBezelStyleAndState",
      "bridgedName": "_alwaysShowBezelForCurrentBezelStyleAndState",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "stateImageRectForBounds:": {
      "name": "stateImageRectForBounds:",
      "bridgedName": "stateImageRectForBounds",
      "args": [
        {
          "type": "struct CGRect"
        }
      ],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_popupStyleDrawsIndicator": {
      "name": "_popupStyleDrawsIndicator",
      "bridgedName": "_popupStyleDrawsIndicator",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "keyDown:inRect:ofView:": {
      "name": "keyDown:inRect:ofView:",
      "bridgedName": "keyDown_inRect_ofView",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "struct CGRect"
        },
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_doPopupSearchString": {
      "name": "_doPopupSearchString",
      "bridgedName": "_doPopupSearchString",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dismissPopUp": {
      "name": "dismissPopUp",
      "bridgedName": "dismissPopUp",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "attachPopUpWithFrame:inView:": {
      "name": "attachPopUpWithFrame:inView:",
      "bridgedName": "attachPopUpWithFrame_inView",
      "args": [
        {
          "type": "struct CGRect"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_handleWillPopUpNotification": {
      "name": "_handleWillPopUpNotification",
      "bridgedName": "_handleWillPopUpNotification",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_locationForPopUpMenuWithFrame:": {
      "name": "_locationForPopUpMenuWithFrame:",
      "bridgedName": "_locationForPopUpMenuWithFrame",
      "args": [
        {
          "type": "struct CGRect"
        }
      ],
      "returns": "struct CGPoint",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "trackMouse:inRect:ofView:untilMouseUp:": {
      "name": "trackMouse:inRect:ofView:untilMouseUp:",
      "bridgedName": "trackMouse_inRect_ofView_untilMouseUp",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "struct CGRect"
        },
        {
          "type": "id"
        },
        {
          "type": "BOOL"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_popUpMenuOptionsForFlags:inRect:ofView:": {
      "name": "_popUpMenuOptionsForFlags:inRect:ofView:",
      "bridgedName": "_popUpMenuOptionsForFlags_inRect_ofView",
      "args": [
        {
          "type": "unsigned long long"
        },
        {
          "type": "struct CGRect"
        },
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_labelOffsetInCellFrame:ofView:": {
      "name": "_labelOffsetInCellFrame:ofView:",
      "bridgedName": "_labelOffsetInCellFrame_ofView",
      "args": [
        {
          "type": "struct CGRect"
        },
        {
          "type": "id"
        }
      ],
      "returns": "struct CGSize",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_popUpMenuFlags:": {
      "name": "_popUpMenuFlags:",
      "bridgedName": "_popUpMenuFlags",
      "args": [
        {
          "type": "BOOL"
        }
      ],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_menuMinimumWidthForEvent:inCellFrame:ofView:": {
      "name": "_menuMinimumWidthForEvent:inCellFrame:ofView:",
      "bridgedName": "_menuMinimumWidthForEvent_inCellFrame_ofView",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "struct CGRect"
        },
        {
          "type": "id"
        }
      ],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_menuLocationForEvent:inCellFrame:ofView:": {
      "name": "_menuLocationForEvent:inCellFrame:ofView:",
      "bridgedName": "_menuLocationForEvent_inCellFrame_ofView",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "struct CGRect"
        },
        {
          "type": "id"
        }
      ],
      "returns": "struct CGPoint",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_horzOffsetForTitleInFrame:withAlignment:direction:font:": {
      "name": "_horzOffsetForTitleInFrame:withAlignment:direction:font:",
      "bridgedName": "_horzOffsetForTitleInFrame_withAlignment_direction_font",
      "args": [
        {
          "type": "struct CGRect"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "long long"
        },
        {
          "type": "id"
        }
      ],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_positionsMenuRelativeToRightEdge": {
      "name": "_positionsMenuRelativeToRightEdge",
      "bridgedName": "_positionsMenuRelativeToRightEdge",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_positionsMenuAsPullDown": {
      "name": "_positionsMenuAsPullDown",
      "bridgedName": "_positionsMenuAsPullDown",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "hitTestForEvent:inRect:ofView:": {
      "name": "hitTestForEvent:inRect:ofView:",
      "bridgedName": "hitTestForEvent_inRect_ofView",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "struct CGRect"
        },
        {
          "type": "id"
        }
      ],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_performKeyEquivalent:conditionally:": {
      "name": "_performKeyEquivalent:conditionally:",
      "bridgedName": "_performKeyEquivalent_conditionally",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "BOOL"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "itemTitleAtIndex:": {
      "name": "itemTitleAtIndex:",
      "bridgedName": "itemTitleAtIndex",
      "args": [
        {
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "synchronizeTitleAndSelectedItem": {
      "name": "synchronizeTitleAndSelectedItem",
      "bridgedName": "synchronizeTitleAndSelectedItem",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setImage:": {
      "name": "setImage:",
      "bridgedName": "setImage",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setTitle:": {
      "name": "setTitle:",
      "bridgedName": "setTitle",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "selectItemWithTag:": {
      "name": "selectItemWithTag:",
      "bridgedName": "selectItemWithTag",
      "args": [
        {
          "type": "long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "selectItemWithTitle:": {
      "name": "selectItemWithTitle:",
      "bridgedName": "selectItemWithTitle",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_selectItemAtIndex:alteringState:": {
      "name": "_selectItemAtIndex:alteringState:",
      "bridgedName": "_selectItemAtIndex_alteringState",
      "args": [
        {
          "type": "long long"
        },
        {
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_previousItemIfExists": {
      "name": "_previousItemIfExists",
      "bridgedName": "_previousItemIfExists",
      "args": [],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_removePreviousItem": {
      "name": "_removePreviousItem",
      "bridgedName": "_removePreviousItem",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setPreviousItem:": {
      "name": "_setPreviousItem:",
      "bridgedName": "_setPreviousItem",
      "args": [
        {
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "selectItemAtIndex:": {
      "name": "selectItemAtIndex:",
      "bridgedName": "selectItemAtIndex",
      "args": [
        {
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "selectItem:": {
      "name": "selectItem:",
      "bridgedName": "selectItem",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_rawSetSelectedIndex:": {
      "name": "_rawSetSelectedIndex:",
      "bridgedName": "_rawSetSelectedIndex",
      "args": [
        {
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "itemWithTitle:": {
      "name": "itemWithTitle:",
      "bridgedName": "itemWithTitle",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "itemAtIndex:": {
      "name": "itemAtIndex:",
      "bridgedName": "itemAtIndex",
      "args": [
        {
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "indexOfItemWithTarget:andAction:": {
      "name": "indexOfItemWithTarget:andAction:",
      "bridgedName": "indexOfItemWithTarget_andAction",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "SEL"
        }
      ],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "indexOfItemWithRepresentedObject:": {
      "name": "indexOfItemWithRepresentedObject:",
      "bridgedName": "indexOfItemWithRepresentedObject",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "indexOfItemWithTag:": {
      "name": "indexOfItemWithTag:",
      "bridgedName": "indexOfItemWithTag",
      "args": [
        {
          "type": "long long"
        }
      ],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "indexOfItemWithTitle:": {
      "name": "indexOfItemWithTitle:",
      "bridgedName": "indexOfItemWithTitle",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "indexOfItem:": {
      "name": "indexOfItem:",
      "bridgedName": "indexOfItem",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_itemChanged:": {
      "name": "_itemChanged:",
      "bridgedName": "_itemChanged",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_allItemsRemoved:": {
      "name": "_allItemsRemoved:",
      "bridgedName": "_allItemsRemoved",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_itemRemoved:": {
      "name": "_itemRemoved:",
      "bridgedName": "_itemRemoved",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "removeAllItems": {
      "name": "removeAllItems",
      "bridgedName": "removeAllItems",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "removeItemAtIndex:": {
      "name": "removeItemAtIndex:",
      "bridgedName": "removeItemAtIndex",
      "args": [
        {
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "removeItemWithTitle:": {
      "name": "removeItemWithTitle:",
      "bridgedName": "removeItemWithTitle",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_itemAdded:": {
      "name": "_itemAdded:",
      "bridgedName": "_itemAdded",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "insertItemWithTitle:atIndex:": {
      "name": "insertItemWithTitle:atIndex:",
      "bridgedName": "insertItemWithTitle_atIndex",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "addItemsWithTitles:": {
      "name": "addItemsWithTitles:",
      "bridgedName": "addItemsWithTitles",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "addItemWithTitle:": {
      "name": "addItemWithTitle:",
      "bridgedName": "addItemWithTitle",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_shouldDrawTextWithDisabledAppearance": {
      "name": "_shouldDrawTextWithDisabledAppearance",
      "bridgedName": "_shouldDrawTextWithDisabledAppearance",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setFont:": {
      "name": "setFont:",
      "bridgedName": "setFont",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "menuView": {
      "name": "menuView",
      "bridgedName": "menuView",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_unsubscribeFromNotificationsForMenu:": {
      "name": "_unsubscribeFromNotificationsForMenu:",
      "bridgedName": "_unsubscribeFromNotificationsForMenu",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_subscribeToNotificationsForMenu:": {
      "name": "_subscribeToNotificationsForMenu:",
      "bridgedName": "_subscribeToNotificationsForMenu",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_clearTargetsFromMenuPointingAtSelf:": {
      "name": "_clearTargetsFromMenuPointingAtSelf:",
      "bridgedName": "_clearTargetsFromMenuPointingAtSelf",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_fixTargetsForMenu:": {
      "name": "_fixTargetsForMenu:",
      "bridgedName": "_fixTargetsForMenu",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithCoder:": {
      "name": "initWithCoder:",
      "bridgedName": "initWithCoder",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "encodeWithCoder:": {
      "name": "encodeWithCoder:",
      "bridgedName": "encodeWithCoder",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "copyWithZone:": {
      "name": "copyWithZone:",
      "bridgedName": "copyWithZone",
      "args": [
        {
          "type": "struct _NSZone *"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_copyWithoutMenu": {
      "name": "_copyWithoutMenu",
      "bridgedName": "_copyWithoutMenu",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initTextCell:": {
      "name": "initTextCell:",
      "bridgedName": "initTextCell",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initTextCell:pullsDown:": {
      "name": "initTextCell:pullsDown:",
      "bridgedName": "initTextCell_pullsDown",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "BOOL"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "canSmoothFontsInFrame:forLayerBackedView:": {
      "name": "canSmoothFontsInFrame:forLayerBackedView:",
      "bridgedName": "canSmoothFontsInFrame_forLayerBackedView",
      "args": [
        {
          "type": "struct CGRect"
        },
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "wantsUpdateLayerInView:": {
      "name": "wantsUpdateLayerInView:",
      "bridgedName": "wantsUpdateLayerInView",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_classForOverrideCheck": {
      "name": "_classForOverrideCheck",
      "bridgedName": "_classForOverrideCheck",
      "args": [],
      "returns": "Class",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityPerformAction:": {
      "name": "accessibilityPerformAction:",
      "bridgedName": "accessibilityPerformAction",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_accessibilityPressAction:": {
      "name": "_accessibilityPressAction:",
      "bridgedName": "_accessibilityPressAction",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityIsFocusedAttributeSettable": {
      "name": "accessibilityIsFocusedAttributeSettable",
      "bridgedName": "accessibilityIsFocusedAttributeSettable",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityIsChildrenAttributeSettable": {
      "name": "accessibilityIsChildrenAttributeSettable",
      "bridgedName": "accessibilityIsChildrenAttributeSettable",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityChildrenAttribute": {
      "name": "accessibilityChildrenAttribute",
      "bridgedName": "accessibilityChildrenAttribute",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityIsValueAttributeSettable": {
      "name": "accessibilityIsValueAttributeSettable",
      "bridgedName": "accessibilityIsValueAttributeSettable",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityValueAttribute": {
      "name": "accessibilityValueAttribute",
      "bridgedName": "accessibilityValueAttribute",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityRoleAttribute": {
      "name": "accessibilityRoleAttribute",
      "bridgedName": "accessibilityRoleAttribute",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "accessibilityAttributeNames": {
      "name": "accessibilityAttributeNames",
      "bridgedName": "accessibilityAttributeNames",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "titleOfSelectedItem": {
      "name": "titleOfSelectedItem",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "itemTitles": {
      "name": "itemTitles",
      "pointer": true,
      "type": "NSArray",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "indexOfSelectedItem": {
      "name": "indexOfSelectedItem",
      "pointer": false,
      "type": "long long",
      "attributes": [
        "readonly"
      ]
    },
    "selectedItem": {
      "name": "selectedItem",
      "pointer": true,
      "type": "NSMenuItem",
      "attributes": [
        "readonly"
      ]
    },
    "lastItem": {
      "name": "lastItem",
      "pointer": true,
      "type": "NSMenuItem",
      "attributes": [
        "readonly"
      ]
    },
    "numberOfItems": {
      "name": "numberOfItems",
      "pointer": false,
      "type": "long long",
      "attributes": [
        "readonly"
      ]
    },
    "itemArray": {
      "name": "itemArray",
      "pointer": true,
      "type": "NSArray",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "menu": {
      "name": "menu",
      "pointer": true,
      "type": "NSMenu",
      "attributes": [
        "retain"
      ]
    }
  }
}