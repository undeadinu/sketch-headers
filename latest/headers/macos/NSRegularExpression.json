{
  "imports": [
    "NSObject.h",
    "NSCopying.h",
    "NSSecureCoding.h"
  ],
  "classes": [
    "NSString"
  ],
  "protocol": false,
  "className": "NSRegularExpression",
  "extends": "NSObject",
  "interfaces": [
    "NSCopying",
    "NSSecureCoding"
  ],
  "methods": {
    "escapedPatternForString:": {
      "name": "escapedPatternForString:",
      "bridgedName": "escapedPatternForString",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "supportsSecureCoding": {
      "name": "supportsSecureCoding",
      "bridgedName": "supportsSecureCoding",
      "args": [],
      "returns": "BOOL",
      "kind": "class",
      "kindIndicator": "+"
    },
    "regularExpressionWithPattern:options:error:": {
      "name": "regularExpressionWithPattern:options:error:",
      "bridgedName": "regularExpressionWithPattern_options_error",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "id *"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "initialize": {
      "name": "initialize",
      "bridgedName": "initialize",
      "args": [],
      "returns": "void",
      "kind": "class",
      "kindIndicator": "+"
    },
    "escapedTemplateForString:": {
      "name": "escapedTemplateForString:",
      "bridgedName": "escapedTemplateForString",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_captureGroupNumberWithName:": {
      "name": "_captureGroupNumberWithName:",
      "bridgedName": "_captureGroupNumberWithName",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "description": {
      "name": "description",
      "bridgedName": "description",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isEqual:": {
      "name": "isEqual:",
      "bridgedName": "isEqual",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "hash": {
      "name": "hash",
      "bridgedName": "hash",
      "args": [],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithCoder:": {
      "name": "initWithCoder:",
      "bridgedName": "initWithCoder",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "encodeWithCoder:": {
      "name": "encodeWithCoder:",
      "bridgedName": "encodeWithCoder",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "copyWithZone:": {
      "name": "copyWithZone:",
      "bridgedName": "copyWithZone",
      "args": [
        {
          "type": "struct _NSZone *"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithPattern:options:error:": {
      "name": "initWithPattern:options:error:",
      "bridgedName": "initWithPattern_options_error",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "id *"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "rangeOfFirstMatchInString:options:range:": {
      "name": "rangeOfFirstMatchInString:options:range:",
      "bridgedName": "rangeOfFirstMatchInString_options_range",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "struct _NSRange"
        }
      ],
      "returns": "struct _NSRange",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "firstMatchInString:options:range:": {
      "name": "firstMatchInString:options:range:",
      "bridgedName": "firstMatchInString_options_range",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "struct _NSRange"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "numberOfMatchesInString:options:range:": {
      "name": "numberOfMatchesInString:options:range:",
      "bridgedName": "numberOfMatchesInString_options_range",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "struct _NSRange"
        }
      ],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "matchesInString:options:range:": {
      "name": "matchesInString:options:range:",
      "bridgedName": "matchesInString_options_range",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "struct _NSRange"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "enumerateMatchesInString:options:range:usingBlock:": {
      "name": "enumerateMatchesInString:options:range:usingBlock:",
      "bridgedName": "enumerateMatchesInString_options_range_usingBlock",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "struct _NSRange"
        },
        {
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "replacementStringForResult:inString:offset:template:": {
      "name": "replacementStringForResult:inString:offset:template:",
      "bridgedName": "replacementStringForResult_inString_offset_template",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "long long"
        },
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "replaceMatchesInString:options:range:withTemplate:": {
      "name": "replaceMatchesInString:options:range:withTemplate:",
      "bridgedName": "replaceMatchesInString_options_range_withTemplate",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "struct _NSRange"
        },
        {
          "type": "id"
        }
      ],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "stringByReplacingMatchesInString:options:range:withTemplate:": {
      "name": "stringByReplacingMatchesInString:options:range:withTemplate:",
      "bridgedName": "stringByReplacingMatchesInString_options_range_withTemplate",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "struct _NSRange"
        },
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "numberOfCaptureGroups": {
      "name": "numberOfCaptureGroups",
      "pointer": false,
      "type": "unsigned long long",
      "attributes": [
        "readonly"
      ]
    },
    "options": {
      "name": "options",
      "pointer": false,
      "type": "unsigned long long",
      "attributes": [
        "readonly"
      ]
    },
    "pattern": {
      "name": "pattern",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "readonly",
        "copy"
      ]
    }
  }
}