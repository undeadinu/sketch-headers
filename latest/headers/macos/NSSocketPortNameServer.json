{
  "imports": [],
  "classes": [],
  "protocol": false,
  "className": "NSSocketPortNameServer",
  "extends": "NSPortNameServer",
  "interfaces": [],
  "methods": {
    "sharedInstance": {
      "name": "sharedInstance",
      "bridgedName": "sharedInstance",
      "args": [],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "removePortForName:": {
      "name": "removePortForName:",
      "bridgedName": "removePortForName",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "netServiceDidStop:": {
      "name": "netServiceDidStop:",
      "bridgedName": "netServiceDidStop",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "netService:didNotResolve:": {
      "name": "netService:didNotResolve:",
      "bridgedName": "netService_didNotResolve",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "netServiceWillResolve:": {
      "name": "netServiceWillResolve:",
      "bridgedName": "netServiceWillResolve",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "netService:didNotPublish:": {
      "name": "netService:didNotPublish:",
      "bridgedName": "netService_didNotPublish",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "netServiceWillPublish:": {
      "name": "netServiceWillPublish:",
      "bridgedName": "netServiceWillPublish",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "registerPort:name:nameServerPortNumber:": {
      "name": "registerPort:name:nameServerPortNumber:",
      "bridgedName": "registerPort_name_nameServerPortNumber",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "unsigned short"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "registerPort:name:": {
      "name": "registerPort:name:",
      "bridgedName": "registerPort_name",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "portForName:host:nameServerPortNumber:": {
      "name": "portForName:host:nameServerPortNumber:",
      "bridgedName": "portForName_host_nameServerPortNumber",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "unsigned short"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "portForName:host:": {
      "name": "portForName:host:",
      "bridgedName": "portForName_host",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "portForName:": {
      "name": "portForName:",
      "bridgedName": "portForName",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {}
}