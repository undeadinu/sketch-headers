{
  "imports": [
    "NSObject.h"
  ],
  "classes": [
    "NSArray",
    "NSImage",
    "NSTabBarItem",
    "NSTabPickerViewController",
    "NSView"
  ],
  "protocol": true,
  "className": "NSTabPickerDelegate",
  "interfaces": [],
  "methods": {
    "tabPickerDidClose:": {
      "name": "tabPickerDidClose:",
      "bridgedName": "tabPickerDidClose",
      "args": [
        {
          "type": "NSTabPickerViewController *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tabPickerWillClose:": {
      "name": "tabPickerWillClose:",
      "bridgedName": "tabPickerWillClose",
      "args": [
        {
          "type": "NSTabPickerViewController *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tabPickerDidOpen:": {
      "name": "tabPickerDidOpen:",
      "bridgedName": "tabPickerDidOpen",
      "args": [
        {
          "type": "NSTabPickerViewController *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tabPickerWillOpen:": {
      "name": "tabPickerWillOpen:",
      "bridgedName": "tabPickerWillOpen",
      "args": [
        {
          "type": "NSTabPickerViewController *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tabPicker:thumbnailViewForTabItem:": {
      "name": "tabPicker:thumbnailViewForTabItem:",
      "bridgedName": "tabPicker_thumbnailViewForTabItem",
      "args": [
        {
          "type": "NSTabPickerViewController *"
        },
        {
          "type": "NSTabBarItem *"
        }
      ],
      "returns": "NSView *",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tabBarSnapshotForTabPicker:": {
      "name": "tabBarSnapshotForTabPicker:",
      "bridgedName": "tabBarSnapshotForTabPicker",
      "args": [
        {
          "type": "NSTabPickerViewController *"
        }
      ],
      "returns": "NSImage *",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tabPickerItemsForTabPicker:": {
      "name": "tabPickerItemsForTabPicker:",
      "bridgedName": "tabPickerItemsForTabPicker",
      "args": [
        {
          "type": "NSTabPickerViewController *"
        }
      ],
      "returns": "NSArray *",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tabPickerCurrentlySelectedTabItem:": {
      "name": "tabPickerCurrentlySelectedTabItem:",
      "bridgedName": "tabPickerCurrentlySelectedTabItem",
      "args": [
        {
          "type": "NSTabPickerViewController *"
        }
      ],
      "returns": "NSTabBarItem *",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tabPickerCreatingNewTabItem:": {
      "name": "tabPickerCreatingNewTabItem:",
      "bridgedName": "tabPickerCreatingNewTabItem",
      "args": [
        {
          "type": "NSTabPickerViewController *"
        }
      ],
      "returns": "NSTabBarItem *",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tabPicker:nextTabPickerItemAfterClosingItem:": {
      "name": "tabPicker:nextTabPickerItemAfterClosingItem:",
      "bridgedName": "tabPicker_nextTabPickerItemAfterClosingItem",
      "args": [
        {
          "type": "NSTabPickerViewController *"
        },
        {
          "type": "NSTabBarItem *"
        }
      ],
      "returns": "NSTabBarItem *",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tabPicker:closeTabBarItem:": {
      "name": "tabPicker:closeTabBarItem:",
      "bridgedName": "tabPicker_closeTabBarItem",
      "args": [
        {
          "type": "NSTabPickerViewController *"
        },
        {
          "type": "NSTabBarItem *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "tabPicker:didSelectTabItemWhenClosing:": {
      "name": "tabPicker:didSelectTabItemWhenClosing:",
      "bridgedName": "tabPicker_didSelectTabItemWhenClosing",
      "args": [
        {
          "type": "NSTabPickerViewController *"
        },
        {
          "type": "NSTabBarItem *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {}
}