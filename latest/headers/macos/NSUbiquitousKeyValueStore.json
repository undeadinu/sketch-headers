{
  "imports": [
    "NSObject.h"
  ],
  "classes": [
    "NSDictionary"
  ],
  "protocol": false,
  "className": "NSUbiquitousKeyValueStore",
  "extends": "NSObject",
  "interfaces": [],
  "methods": {
    "_appWillDeactivate": {
      "name": "_appWillDeactivate",
      "bridgedName": "_appWillDeactivate",
      "args": [],
      "returns": "void",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_appWillActivate": {
      "name": "_appWillActivate",
      "bridgedName": "_appWillActivate",
      "args": [],
      "returns": "void",
      "kind": "class",
      "kindIndicator": "+"
    },
    "_synchronizeStoresForced:": {
      "name": "_synchronizeStoresForced:",
      "bridgedName": "_synchronizeStoresForced",
      "args": [
        {
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "class",
      "kindIndicator": "+"
    },
    "additionalStoreWithIdentifier:": {
      "name": "additionalStoreWithIdentifier:",
      "bridgedName": "additionalStoreWithIdentifier",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "defaultStore": {
      "name": "defaultStore",
      "bridgedName": "defaultStore",
      "args": [],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "setBool:forKey:": {
      "name": "setBool:forKey:",
      "bridgedName": "setBool_forKey",
      "args": [
        {
          "type": "BOOL"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "boolForKey:": {
      "name": "boolForKey:",
      "bridgedName": "boolForKey",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setDouble:forKey:": {
      "name": "setDouble:forKey:",
      "bridgedName": "setDouble_forKey",
      "args": [
        {
          "type": "double"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "doubleForKey:": {
      "name": "doubleForKey:",
      "bridgedName": "doubleForKey",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setLongLong:forKey:": {
      "name": "setLongLong:forKey:",
      "bridgedName": "setLongLong_forKey",
      "args": [
        {
          "type": "long long"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "longLongForKey:": {
      "name": "longLongForKey:",
      "bridgedName": "longLongForKey",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setData:forKey:": {
      "name": "setData:forKey:",
      "bridgedName": "setData_forKey",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dataForKey:": {
      "name": "dataForKey:",
      "bridgedName": "dataForKey",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setDictionary:forKey:": {
      "name": "setDictionary:forKey:",
      "bridgedName": "setDictionary_forKey",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dictionaryForKey:": {
      "name": "dictionaryForKey:",
      "bridgedName": "dictionaryForKey",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setArray:forKey:": {
      "name": "setArray:forKey:",
      "bridgedName": "setArray_forKey",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "arrayForKey:": {
      "name": "arrayForKey:",
      "bridgedName": "arrayForKey",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setString:forKey:": {
      "name": "setString:forKey:",
      "bridgedName": "setString_forKey",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "stringForKey:": {
      "name": "stringForKey:",
      "bridgedName": "stringForKey",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "maximumTotalDataLength": {
      "name": "maximumTotalDataLength",
      "bridgedName": "maximumTotalDataLength",
      "args": [],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "maximumDataLengthPerKey": {
      "name": "maximumDataLengthPerKey",
      "bridgedName": "maximumDataLengthPerKey",
      "args": [],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "maximumKeyLength": {
      "name": "maximumKeyLength",
      "bridgedName": "maximumKeyLength",
      "args": [],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "maximumKeyCount": {
      "name": "maximumKeyCount",
      "bridgedName": "maximumKeyCount",
      "args": [],
      "returns": "unsigned long long",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_sendPingToDaemon": {
      "name": "_sendPingToDaemon",
      "bridgedName": "_sendPingToDaemon",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_unregisterFromDaemon": {
      "name": "_unregisterFromDaemon",
      "bridgedName": "_unregisterFromDaemon",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_registerToDaemon": {
      "name": "_registerToDaemon",
      "bridgedName": "_registerToDaemon",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_configurationDidChange": {
      "name": "_configurationDidChange",
      "bridgedName": "_configurationDidChange",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_sourceDidChange:": {
      "name": "_sourceDidChange:",
      "bridgedName": "_sourceDidChange",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "synchronize": {
      "name": "synchronize",
      "bridgedName": "synchronize",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_synchronizeForced:": {
      "name": "_synchronizeForced:",
      "bridgedName": "_synchronizeForced",
      "args": [
        {
          "type": "BOOL"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_synchronizeForced:notificationQueue:": {
      "name": "_synchronizeForced:notificationQueue:",
      "bridgedName": "_synchronizeForced_notificationQueue",
      "args": [
        {
          "type": "BOOL"
        },
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "synchronizeWithCompletionHandler:": {
      "name": "synchronizeWithCompletionHandler:",
      "bridgedName": "synchronizeWithCompletionHandler",
      "args": [
        {
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_scheduleRemoteSynchronization": {
      "name": "_scheduleRemoteSynchronization",
      "bridgedName": "_scheduleRemoteSynchronization",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "registerDefaultValues:": {
      "name": "registerDefaultValues:",
      "bridgedName": "registerDefaultValues",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "removeObjectForKey:": {
      "name": "removeObjectForKey:",
      "bridgedName": "removeObjectForKey",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "setObject:forKey:": {
      "name": "setObject:forKey:",
      "bridgedName": "setObject_forKey",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_adjustTimerForAutosync": {
      "name": "_adjustTimerForAutosync",
      "bridgedName": "_adjustTimerForAutosync",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_adjustTimer:": {
      "name": "_adjustTimer:",
      "bridgedName": "_adjustTimer",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_syncConcurrently": {
      "name": "_syncConcurrently",
      "bridgedName": "_syncConcurrently",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_syncConcurrentlyForced:": {
      "name": "_syncConcurrentlyForced:",
      "bridgedName": "_syncConcurrentlyForced",
      "args": [
        {
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "synchronizeWithSourceForced:": {
      "name": "synchronizeWithSourceForced:",
      "bridgedName": "synchronizeWithSourceForced",
      "args": [
        {
          "type": "BOOL"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "objectForKey:": {
      "name": "objectForKey:",
      "bridgedName": "objectForKey",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_rethrowException:": {
      "name": "_rethrowException:",
      "bridgedName": "_rethrowException",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_postDidChangeNotificationExternalChanges:sourceChangeCount:": {
      "name": "_postDidChangeNotificationExternalChanges:sourceChangeCount:",
      "bridgedName": "_postDidChangeNotificationExternalChanges_sourceChangeCount",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "long long"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_storeChangeFromSourceChange:": {
      "name": "_storeChangeFromSourceChange:",
      "bridgedName": "_storeChangeFromSourceChange",
      "args": [
        {
          "type": "int"
        }
      ],
      "returns": "int",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setHasPendingSynchronize:": {
      "name": "_setHasPendingSynchronize:",
      "bridgedName": "_setHasPendingSynchronize",
      "args": [
        {
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_hasPendingSynchronize": {
      "name": "_hasPendingSynchronize",
      "bridgedName": "_hasPendingSynchronize",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_setShouldAvoidSynchronize:": {
      "name": "_setShouldAvoidSynchronize:",
      "bridgedName": "_setShouldAvoidSynchronize",
      "args": [
        {
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_shouldAvoidSynchronize": {
      "name": "_shouldAvoidSynchronize",
      "bridgedName": "_shouldAvoidSynchronize",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "init": {
      "name": "init",
      "bridgedName": "init",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithBundleIdentifier:": {
      "name": "initWithBundleIdentifier:",
      "bridgedName": "initWithBundleIdentifier",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithBundleIdentifier:storeIdentifier:": {
      "name": "initWithBundleIdentifier:storeIdentifier:",
      "bridgedName": "initWithBundleIdentifier_storeIdentifier",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithBundleIdentifier:storeIdentifier:additionalStore:": {
      "name": "initWithBundleIdentifier:storeIdentifier:additionalStore:",
      "bridgedName": "initWithBundleIdentifier_storeIdentifier_additionalStore",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "BOOL"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_useSourceSyncWithBlock:": {
      "name": "_useSourceSyncWithBlock:",
      "bridgedName": "_useSourceSyncWithBlock",
      "args": [
        {
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_useSourceAsyncWithBlock:": {
      "name": "_useSourceAsyncWithBlock:",
      "bridgedName": "_useSourceAsyncWithBlock",
      "args": [
        {
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_pleaseSynchronize:": {
      "name": "_pleaseSynchronize:",
      "bridgedName": "_pleaseSynchronize",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "dictionaryRepresentation": {
      "name": "dictionaryRepresentation",
      "pointer": true,
      "type": "NSDictionary",
      "attributes": [
        "readonly",
        "copy"
      ]
    }
  }
}