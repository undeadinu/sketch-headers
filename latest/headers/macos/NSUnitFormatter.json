{
  "imports": [
    "NSSecureCoding.h"
  ],
  "classes": [
    "NSLocale",
    "NSNumberFormatter"
  ],
  "protocol": false,
  "className": "NSUnitFormatter",
  "extends": "NSFormatter",
  "interfaces": [
    "NSSecureCoding"
  ],
  "methods": {
    "supportsSecureCoding": {
      "name": "supportsSecureCoding",
      "bridgedName": "supportsSecureCoding",
      "args": [],
      "returns": "BOOL",
      "kind": "class",
      "kindIndicator": "+"
    },
    "copyWithZone:": {
      "name": "copyWithZone:",
      "bridgedName": "copyWithZone",
      "args": [
        {
          "type": "struct _NSZone *"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "encodeWithCoder:": {
      "name": "encodeWithCoder:",
      "bridgedName": "encodeWithCoder",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithCoder:": {
      "name": "initWithCoder:",
      "bridgedName": "initWithCoder",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "stringFromUnit:": {
      "name": "stringFromUnit:",
      "bridgedName": "stringFromUnit",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "unitStringFromValue:unit:": {
      "name": "unitStringFromValue:unit:",
      "bridgedName": "unitStringFromValue_unit",
      "args": [
        {
          "type": "double"
        },
        {
          "type": "unsigned long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "stringForValue1:unit1:value2:unit2:": {
      "name": "stringForValue1:unit1:value2:unit2:",
      "bridgedName": "stringForValue1_unit1_value2_unit2",
      "args": [
        {
          "type": "double"
        },
        {
          "type": "unsigned long long"
        },
        {
          "type": "double"
        },
        {
          "type": "unsigned long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "stringForValue:unit:": {
      "name": "stringForValue:unit:",
      "bridgedName": "stringForValue_unit",
      "args": [
        {
          "type": "double"
        },
        {
          "type": "unsigned long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "stringForObjectValue:": {
      "name": "stringForObjectValue:",
      "bridgedName": "stringForObjectValue",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "checkIfModified": {
      "name": "checkIfModified",
      "bridgedName": "checkIfModified",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_determineUnitsToFormat:fromMeasurement:": {
      "name": "_determineUnitsToFormat:fromMeasurement:",
      "bridgedName": "_determineUnitsToFormat_fromMeasurement",
      "args": [
        {
          "type": "int *"
        },
        {
          "type": "id"
        }
      ],
      "returns": "int",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "init": {
      "name": "init",
      "bridgedName": "init",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "locale": {
      "name": "locale",
      "pointer": true,
      "type": "NSLocale",
      "attributes": [
        "copy"
      ]
    },
    "numberFormatter": {
      "name": "numberFormatter",
      "pointer": true,
      "type": "NSNumberFormatter",
      "attributes": [
        "copy"
      ]
    }
  }
}