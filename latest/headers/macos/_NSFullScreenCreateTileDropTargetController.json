{
  "imports": [
    "NSObject.h"
  ],
  "classes": [
    "NSTimer",
    "NSWindow",
    "_NSFullScreenCreateTileDropTargetWindow",
    "_NSFullScreenSpace"
  ],
  "protocol": false,
  "className": "_NSFullScreenCreateTileDropTargetController",
  "extends": "NSObject",
  "interfaces": [],
  "methods": {
    "windowDidEndDraggingNotification:": {
      "name": "windowDidEndDraggingNotification:",
      "bridgedName": "windowDidEndDraggingNotification",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "acceptDropForTearOffTabWindow:": {
      "name": "acceptDropForTearOffTabWindow:",
      "bridgedName": "acceptDropForTearOffTabWindow",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_handleWindowDropIfNecessary": {
      "name": "_handleWindowDropIfNecessary",
      "bridgedName": "_handleWindowDropIfNecessary",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dragWouldPerformDrop": {
      "name": "dragWouldPerformDrop",
      "bridgedName": "dragWouldPerformDrop",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_performDropIntoPosition:": {
      "name": "_performDropIntoPosition:",
      "bridgedName": "_performDropIntoPosition",
      "args": [
        {
          "type": "unsigned long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "windowWillStartDraggingNotification:": {
      "name": "windowWillStartDraggingNotification:",
      "bridgedName": "windowWillStartDraggingNotification",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "updateWindowDuringDragNotification:": {
      "name": "updateWindowDuringDragNotification:",
      "bridgedName": "updateWindowDuringDragNotification",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_dismissDropTargets": {
      "name": "_dismissDropTargets",
      "bridgedName": "_dismissDropTargets",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_dismissRightDropTarget": {
      "name": "_dismissRightDropTarget",
      "bridgedName": "_dismissRightDropTarget",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_revealRightDropTarget": {
      "name": "_revealRightDropTarget",
      "bridgedName": "_revealRightDropTarget",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_dismissLeftDropTarget": {
      "name": "_dismissLeftDropTarget",
      "bridgedName": "_dismissLeftDropTarget",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_revealLeftDropTarget": {
      "name": "_revealLeftDropTarget",
      "bridgedName": "_revealLeftDropTarget",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_rightCollapsedRect": {
      "name": "_rightCollapsedRect",
      "bridgedName": "_rightCollapsedRect",
      "args": [],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_rightDropRect": {
      "name": "_rightDropRect",
      "bridgedName": "_rightDropRect",
      "args": [],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_leftCollapsedRect": {
      "name": "_leftCollapsedRect",
      "bridgedName": "_leftCollapsedRect",
      "args": [],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_leftDropRect": {
      "name": "_leftDropRect",
      "bridgedName": "_leftDropRect",
      "args": [],
      "returns": "struct CGRect",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_startTrackingWindowDrag:": {
      "name": "_startTrackingWindowDrag:",
      "bridgedName": "_startTrackingWindowDrag",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_stopTrackingWindowDrag": {
      "name": "_stopTrackingWindowDrag",
      "bridgedName": "_stopTrackingWindowDrag",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "resetState": {
      "name": "resetState",
      "bridgedName": "resetState",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "backgroundWindowIDs": {
      "name": "backgroundWindowIDs",
      "bridgedName": "backgroundWindowIDs",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "reshapeContents": {
      "name": "reshapeContents",
      "bridgedName": "reshapeContents",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "displayChanged": {
      "name": "displayChanged",
      "bridgedName": "displayChanged",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_registerForNotifications:": {
      "name": "_registerForNotifications:",
      "bridgedName": "_registerForNotifications",
      "args": [
        {
          "type": "BOOL"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "init": {
      "name": "init",
      "bridgedName": "init",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "space": {
      "name": "space",
      "pointer": true,
      "type": "_NSFullScreenSpace",
      "attributes": [
        "nonatomic"
      ]
    }
  }
}