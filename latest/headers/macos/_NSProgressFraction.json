{
  "imports": [
    "NSObject.h",
    "NSCopying.h",
    "NSSecureCoding.h"
  ],
  "classes": [],
  "protocol": false,
  "className": "_NSProgressFraction",
  "extends": "NSObject",
  "interfaces": [
    "NSSecureCoding",
    "NSCopying"
  ],
  "methods": {
    "supportsSecureCoding": {
      "name": "supportsSecureCoding",
      "bridgedName": "supportsSecureCoding",
      "args": [],
      "returns": "BOOL",
      "kind": "class",
      "kindIndicator": "+"
    },
    "fractionWithCompleted:total:": {
      "name": "fractionWithCompleted:total:",
      "bridgedName": "fractionWithCompleted_total",
      "args": [
        {
          "type": "long long"
        },
        {
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "fractionWithDouble:": {
      "name": "fractionWithDouble:",
      "bridgedName": "fractionWithDouble",
      "args": [
        {
          "type": "double"
        }
      ],
      "returns": "id",
      "kind": "class",
      "kindIndicator": "+"
    },
    "isNaN": {
      "name": "isNaN",
      "bridgedName": "isNaN",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "fractionCompleted": {
      "name": "fractionCompleted",
      "bridgedName": "fractionCompleted",
      "args": [],
      "returns": "double",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isFinished": {
      "name": "isFinished",
      "bridgedName": "isFinished",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isIndeterminate": {
      "name": "isIndeterminate",
      "bridgedName": "isIndeterminate",
      "args": [],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "fractionBySimplifying": {
      "name": "fractionBySimplifying",
      "bridgedName": "fractionBySimplifying",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "simplify": {
      "name": "simplify",
      "bridgedName": "simplify",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "fractionByMultiplyingFraction:": {
      "name": "fractionByMultiplyingFraction:",
      "bridgedName": "fractionByMultiplyingFraction",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "divideByValue:": {
      "name": "divideByValue:",
      "bridgedName": "divideByValue",
      "args": [
        {
          "type": "long long"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "multiplyByFraction:": {
      "name": "multiplyByFraction:",
      "bridgedName": "multiplyByFraction",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "fractionBySubtractingFraction:": {
      "name": "fractionBySubtractingFraction:",
      "bridgedName": "fractionBySubtractingFraction",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "subtractFraction:": {
      "name": "subtractFraction:",
      "bridgedName": "subtractFraction",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "fractionByAddingFraction:": {
      "name": "fractionByAddingFraction:",
      "bridgedName": "fractionByAddingFraction",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "addFraction:": {
      "name": "addFraction:",
      "bridgedName": "addFraction",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "description": {
      "name": "description",
      "bridgedName": "description",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isFractionCompletedEqual:": {
      "name": "isFractionCompletedEqual:",
      "bridgedName": "isFractionCompletedEqual",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isEqual:": {
      "name": "isEqual:",
      "bridgedName": "isEqual",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "encodeWithCoder:": {
      "name": "encodeWithCoder:",
      "bridgedName": "encodeWithCoder",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithCoder:": {
      "name": "initWithCoder:",
      "bridgedName": "initWithCoder",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "copyWithZone:": {
      "name": "copyWithZone:",
      "bridgedName": "copyWithZone",
      "args": [
        {
          "type": "struct _NSZone *"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "initWithCompleted:total:": {
      "name": "initWithCompleted:total:",
      "bridgedName": "initWithCompleted_total",
      "args": [
        {
          "type": "long long"
        },
        {
          "type": "long long"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "_simplifyFromDouble:": {
      "name": "_simplifyFromDouble:",
      "bridgedName": "_simplifyFromDouble",
      "args": [
        {
          "type": "double"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "overflowed": {
      "name": "overflowed",
      "pointer": false,
      "type": "BOOL",
      "attributes": [
        "readonly"
      ]
    }
  }
}