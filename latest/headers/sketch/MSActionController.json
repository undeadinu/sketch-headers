{
  "imports": [
    "NSResponder.h"
  ],
  "classes": [
    "NSDictionary",
    "NSMutableDictionary",
    "NSMutableSet"
  ],
  "protocol": false,
  "className": "MSActionController",
  "extends": "NSResponder",
  "interfaces": [],
  "methods": {
    ".cxx_destruct": {
      "name": ".cxx_destruct",
      "bridgedName": ".cxx_destruct",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "firstActionToHandleKeyEvent:": {
      "name": "firstActionToHandleKeyEvent:",
      "bridgedName": "firstActionToHandleKeyEvent",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "forwardKeyEvent:": {
      "name": "forwardKeyEvent:",
      "bridgedName": "forwardKeyEvent",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "supplementalTargetForAction:sender:": {
      "name": "supplementalTargetForAction:sender:",
      "bridgedName": "supplementalTargetForAction_sender",
      "args": [
        {
          "type": "SEL"
        },
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "isSystemSeparatorID:": {
      "name": "isSystemSeparatorID:",
      "bridgedName": "isSystemSeparatorID",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "BOOL",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "performActionWithID:sender:": {
      "name": "performActionWithID:sender:",
      "bridgedName": "performActionWithID_sender",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "actionForSelector:": {
      "name": "actionForSelector:",
      "bridgedName": "actionForSelector",
      "args": [
        {
          "type": "SEL"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "actionForID:": {
      "name": "actionForID:",
      "bridgedName": "actionForID",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "allActions": {
      "name": "allActions",
      "bridgedName": "allActions",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "insertAfterResponder:": {
      "name": "insertAfterResponder:",
      "bridgedName": "insertAfterResponder",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "assertValidActionID:": {
      "name": "assertValidActionID:",
      "bridgedName": "assertValidActionID",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "registerAction:": {
      "name": "registerAction:",
      "bridgedName": "registerAction",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "init": {
      "name": "init",
      "bridgedName": "init",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "performFakeActionWithID:context:block:": {
      "name": "performFakeActionWithID:context:block:",
      "bridgedName": "performFakeActionWithID_context_block",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        },
        {
          "type": "CDUnknownBlockType"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "unregisterActionObserver:": {
      "name": "unregisterActionObserver:",
      "bridgedName": "unregisterActionObserver",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "registerActionObserver:": {
      "name": "registerActionObserver:",
      "bridgedName": "registerActionObserver",
      "args": [
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "didInstantActionWithID:context:": {
      "name": "didInstantActionWithID:context:",
      "bridgedName": "didInstantActionWithID_context",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "didFinishActionWithID:context:": {
      "name": "didFinishActionWithID:context:",
      "bridgedName": "didFinishActionWithID_context",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "willBeginActionWithID:context:": {
      "name": "willBeginActionWithID:context:",
      "bridgedName": "willBeginActionWithID_context",
      "args": [
        {
          "type": "id"
        },
        {
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "observers": {
      "name": "observers",
      "pointer": true,
      "type": "NSMutableSet",
      "attributes": [
        "retain",
        "nonatomic"
      ]
    },
    "actionsByIdentifier": {
      "name": "actionsByIdentifier",
      "pointer": true,
      "type": "NSMutableDictionary",
      "attributes": [
        "retain",
        "nonatomic"
      ]
    },
    "singleKeyShortcuts": {
      "name": "singleKeyShortcuts",
      "pointer": true,
      "type": "NSDictionary",
      "attributes": [
        "copy",
        "nonatomic"
      ]
    }
  }
}