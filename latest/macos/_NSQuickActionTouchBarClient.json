{
  "imports": [
    "NSObject.h",
    "_NSQuickActionProviderObserver.h",
    "_NSQuickActionTouchBarClientProtocol.h",
    "_NSQuickActionValidatorObserver.h"
  ],
  "classes": [
    "NSDictionary",
    "NSRunningApplication",
    "NSSet",
    "NSString",
    "NSXPCConnection",
    "_NSQuickActionProvider",
    "_NSQuickActionTouchBarClientItemSourceMonitor",
    "_NSQuickActionValidator"
  ],
  "protocol": false,
  "className": "_NSQuickActionTouchBarClient",
  "extends": "NSObject",
  "interfaces": [
    "_NSQuickActionProviderObserver",
    "_NSQuickActionValidatorObserver",
    "_NSQuickActionTouchBarClientProtocol"
  ],
  "methods": {
    ".cxx_destruct": {
      "name": ".cxx_destruct",
      "bridgedName": ".cxx_destruct",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "dealloc": {
      "name": "dealloc",
      "bridgedName": "dealloc",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "deactivate": {
      "name": "deactivate",
      "bridgedName": "deactivate",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "activate": {
      "name": "activate",
      "bridgedName": "activate",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "observeValueForKeyPath:ofObject:change:context:": {
      "name": "observeValueForKeyPath:ofObject:change:context:",
      "bridgedName": "observeValueForKeyPath_ofObject_change_context",
      "args": [
        {
          "name": "observeValueForKeyPath",
          "type": "id"
        },
        {
          "name": "ofObject",
          "type": "id"
        },
        {
          "name": "change",
          "type": "id"
        },
        {
          "name": "context",
          "type": "void *"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "invokeQuickActionWithIdentifier:": {
      "name": "invokeQuickActionWithIdentifier:",
      "bridgedName": "invokeQuickActionWithIdentifier",
      "args": [
        {
          "name": "invokeQuickActionWithIdentifier",
          "type": "id"
        }
      ],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "quickActionTouchBarDidHide": {
      "name": "quickActionTouchBarDidHide",
      "bridgedName": "quickActionTouchBarDidHide",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "quickActionTouchBarWillShow": {
      "name": "quickActionTouchBarWillShow",
      "bridgedName": "quickActionTouchBarWillShow",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "validQuickActionsDidChange": {
      "name": "validQuickActionsDidChange",
      "bridgedName": "validQuickActionsDidChange",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "quickActionsDidChange": {
      "name": "quickActionsDidChange",
      "bridgedName": "quickActionsDidChange",
      "args": [],
      "returns": "void",
      "kind": "instance",
      "kindIndicator": "-"
    },
    "init": {
      "name": "init",
      "bridgedName": "init",
      "args": [],
      "returns": "id",
      "kind": "instance",
      "kindIndicator": "-"
    }
  },
  "properties": {
    "debugDescription": {
      "name": "debugDescription",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "description": {
      "name": "description",
      "pointer": true,
      "type": "NSString",
      "attributes": [
        "readonly",
        "copy"
      ]
    },
    "hash": {
      "name": "hash",
      "pointer": false,
      "type": "unsigned long long",
      "attributes": [
        "readonly"
      ]
    },
    "superclass": {
      "name": "superclass",
      "pointer": false,
      "type": "Class",
      "attributes": [
        "readonly"
      ]
    }
  }
}